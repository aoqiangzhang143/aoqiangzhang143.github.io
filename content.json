{"meta":{"title":"Mithrandir","subtitle":"Â∞ÜÊ≠§ÂçöÂÆ¢ÂΩì‰Ωú‰∏ÄË∑ØÊàêÈïøËµ∞ËøáÁöÑË∑Ø„ÄÇ","description":"‰∏îÂ∞ÜÊñ∞ÁÅ´ËØïÊñ∞Ëå∂ÔºåËØóÈÖíË∂ÅÂπ¥Âçé","author":"aoqiangzhang143","url":"http://example.com","root":"/"},"pages":[{"title":"archives","date":"2021-05-27T01:33:43.000Z","updated":"2021-05-27T01:33:43.928Z","comments":true,"path":"archives/index.html","permalink":"http://example.com/archives/index.html","excerpt":"","text":""},{"title":"ÂàÜÁ±ª","date":"2021-05-26T13:31:13.000Z","updated":"2021-05-27T01:36:57.220Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"ÂÖ¨Áõä404","date":"2021-05-27T01:34:24.000Z","updated":"2021-05-27T01:37:28.781Z","comments":true,"path":"commonweal/index.html","permalink":"http://example.com/commonweal/index.html","excerpt":"","text":""},{"title":"Ê†áÁ≠æ","date":"2021-05-26T13:30:53.000Z","updated":"2021-05-27T01:36:04.485Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"Êó•Á®ãË°®","date":"2021-05-27T01:34:01.000Z","updated":"2021-05-27T01:37:49.200Z","comments":true,"path":"schedule/index.html","permalink":"http://example.com/schedule/index.html","excerpt":"","text":""},{"title":"Á´ôÁÇπÂú∞Âõæ","date":"2021-05-27T01:34:10.000Z","updated":"2021-05-27T01:38:10.193Z","comments":true,"path":"sitemap/index.html","permalink":"http://example.com/sitemap/index.html","excerpt":"","text":""},{"title":"","date":"2021-05-27T08:19:00.191Z","updated":"2021-05-27T08:19:00.191Z","comments":true,"path":"lib/canvas-ribbon/README.html","permalink":"http://example.com/lib/canvas-ribbon/README.html","excerpt":"","text":"canvas-ribbon.js for NexT Installation If you want to use the CDN instead of clone this repo, please jump to the Step 3. Step 1 &rarr; Go to NexT dir Change dir to NexT directory. There must be layout, source, languages and other directories: 123$ cd themes/next$ ls_config.yml crowdin.yml docs gulpfile.js languages layout LICENSE.md package.json README.md scripts source Step 2 &rarr; Get module Install module to source/lib directory: 1$ git clone https://github.com/theme-next/theme-next-canvas-ribbon source/lib/canvas-ribbon Step 3 &rarr; Set it up Enable module in NexT _config.yml file: 12canvas_ribbon: enable: true And, if you wants to use the CDN, then need to set: 123vendors: ... canvas_ribbon: //cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-ribbon@1/canvas-ribbon.js Update 12$ cd themes/next/source/lib/canvas-ribbon$ git pull"},{"title":"","date":"2021-05-27T08:19:00.192Z","updated":"2021-05-27T08:19:00.192Z","comments":true,"path":"lib/canvas-ribbon/canvas-ribbon.js","permalink":"http://example.com/lib/canvas-ribbon/canvas-ribbon.js","excerpt":"","text":"/** * Copyright (c) 2016 hustcc * License: MIT * Version: v1.0.1 * GitHub: https://github.com/hustcc/ribbon.js **/ /*jshint -W030 */ ! function() { function attr(node, attr, default_value) { return Number(node.getAttribute(attr)) || default_value; } // get user config var scripts = document.getElementsByTagName('script'), script = scripts[scripts.length - 1]; // ÂΩìÂâçÂä†ËΩΩÁöÑscript config = { z: attr(script, \"zIndex\", -1), // z-index a: attr(script, \"alpha\", 0.6), // alpha s: attr(script, \"size\", 90), // size }; var canvas = document.createElement('canvas'), g2d = canvas.getContext('2d'), pr = window.devicePixelRatio || 1, width = window.innerWidth, height = window.innerHeight, f = config.s, q, t, m = Math, r = 0, pi = m.PI*2, cos = m.cos, random = m.random; canvas.width = width * pr; canvas.height = height * pr; g2d.scale(pr, pr); g2d.globalAlpha = config.a; canvas.style.cssText = 'opacity: ' + config.a + ';position:fixed;top:0;left:0;z-index: ' + config.z + ';width:100%;height:100%;pointer-events:none;'; // create canvas document.getElementsByTagName('body')[0].appendChild(canvas); function redraw() { g2d.clearRect(0, 0, width, height); q = [{x: 0, y: height * 0.7 + f}, {x: 0, y: height * 0.7 - f}]; while(q[1].x < width + f) draw(q[0], q[1]); } function draw(i, j) { g2d.beginPath(); g2d.moveTo(i.x, i.y); g2d.lineTo(j.x, j.y); var k = j.x + (random()*2-0.25)*f, n = line(j.y); g2d.lineTo(k, n); g2d.closePath(); r -= pi / -50; g2d.fillStyle = '#'+(cos(r)*127+128"},{"title":"","date":"2021-05-27T04:33:51.869Z","updated":"2021-05-27T04:33:51.869Z","comments":true,"path":"lib/bookmark/README.html","permalink":"http://example.com/lib/bookmark/README.html","excerpt":"","text":"Bookmark for NexT Introduce Bookmark is a plugin that allow the users save their reading position. The users could just click the bookmark icon (like üîñ) in left-top of the page to save the position. And when they visit your blog in the next time, they can continue the last reading position by clicking the bookmark icon from the home page. Installation If you want to use the CDN instead of clone this repo, please jump to the Step 3. Step 1 &rarr; Go to NexT dir Change dir to NexT directory. There must be layout, source, languages and other directories: 123$ cd themes/next$ lsbower.json _config.yml docs gulpfile.coffee languages layout LICENSE.md package.json README.md scripts source test Step 2 &rarr; Get module Install module to source/lib directory: 1$ git clone https://github.com/theme-next/theme-next-bookmark.git source/lib/bookmark Step 3 &rarr; Set it up Enable module in NexT _config.yml file: 1bookmark: true And, if you wants to use the CDN, then need to set: 123vendors: ... bookmark: https://cdn.jsdelivr.net/gh/theme-next/theme-next-bookmark@latest/bookmark.min.js Update 12$ cd themes/next/source/lib/bookmark$ git pull"},{"title":"","date":"2021-05-27T04:33:51.870Z","updated":"2021-05-27T04:33:51.870Z","comments":true,"path":"lib/bookmark/bookmark.min.js","permalink":"http://example.com/lib/bookmark/bookmark.min.js","excerpt":"","text":"!function(o){\"use strict\";var n=o.localStorage;null==n&&(n={getItem:function(){return null},setItem:function(){},removeItem:function(){},clear:function(){}});var t,e=function(){var o=n.getItem(\"bookmark\");if(null==o)return null;try{return JSON.parse(o)}catch(o){return null}},a=function(){var n=o.document.createElement(\"style\");n.type=\"text/css\";var e=\".book-mark-link{border-bottom:none;display:block;position:fixed;color:#222;font-size:26px !important;top:-10px;left:20px;transition:.3s;}.book-mark-link:hover,.book-mark-link-fixed{top:-2px}@media(max-width:1090px){.book-mark-link{display:none}}\";e=o.document.createTextNode(e),n.appendChild(e),o.document.head.appendChild(n),t=$(''),$(o.document.body).append(t);var a=0;$(o).on(\"scroll.bookmark\",function(){var n=o.document.documentElement.scrollTop;n>0?0===a&&(t.removeClass(\"book-mark-link-fixed\"),a=n):a>0&&(!t.hasClass(\"book-mark-link-fixed\")&&t.addClass(\"book-mark-link-fixed\"),a=0)})},r=function(e,a){null==a&&(a={});var r=o.document.documentElement.scrollTop;return a.lastUri=e,a[e]=r,n.setItem(\"bookmark\",JSON.stringify(a)),t.animate({top:-26},\"fast\",function(){setTimeout(function(){t.css(\"top\",\"\")},400)}),a};o.bookmark={loadBookmark:function(){var o=e();null!=o&&$(function(){a(),t.attr(\"href\",o.lastUri+\"#book:mark\")})},scrollToMark:function(n,l){var i=o.location.pathname,c=e();$(function(){var e;a(),t.click(function(){return c=r(i,c),!1}),\"auto\"===n&&o.addEventListener(\"beforeunload\",function(){r(i,c)}),null!=c&&([l,\"#comments\"].filter(function(n){return n===o.location.hash}).length>0||(e=c[i],isNaN(e)||$(function(){$(o.document.documentElement).animate({scrollTop:e},\"fast\")})))})}}}(window);"},{"title":"","date":"2021-05-27T04:33:51.870Z","updated":"2021-05-27T04:33:51.870Z","comments":true,"path":"lib/bookmark/index.js","permalink":"http://example.com/lib/bookmark/index.js","excerpt":"","text":"(function (global) { 'use strict'; var storage = global.localStorage; if (storage == null) { // if the localStorage is not exists storage = { // eslint-disable-next-line getItem: function () { return null }, setItem: function () { }, removeItem: function () { }, clear: function () { }, }; } // get the saved bookmark object var getBookmark = function () { var mark = storage.getItem('bookmark'); if (mark == null) { return null; } try { return JSON.parse(mark); } catch (e) { // invalid object saved in the storage // console.warn('Invalid bookmark object.'); return null; } }; var link; // register everything var init = function () { // bookmark-link style var style = global.document.createElement('style'); style.type = 'text/css'; var text = '.book-mark-link{' + 'border-bottom:none;' + 'display:block;' + 'position:fixed;' + 'color:#222;' + 'font-size:26px !important;' + 'top:-10px;left:20px;' + 'transition:.3s;' + '}' + '.book-mark-link:hover,.book-mark-link-fixed{top:-2px}' // do not show when the width is not enough + '@media(max-width:1090px){.book-mark-link{display:none}}'; text = global.document.createTextNode(text); style.appendChild(text); global.document.head.appendChild(style); // create a link element // eslint-disable-next-line max-len link = $(''); $(global.document.body).append(link); var currentTop = 0; // scroll event $(global).on('scroll.bookmark', function () { var top = global.document.documentElement.scrollTop; if (top > 0) { if (currentTop === 0) { link.removeClass('book-mark-link-fixed'); currentTop = top; } } else { if (currentTop > 0) { !link.hasClass('book-mark-link-fixed') && link.addClass('book-mark-link-fixed'); currentTop = 0; } } }); }; var loadBookmark = function () { var mark = getBookmark(); if (mark == null) { return; } // found the bookmark $(function () { init(); link.attr('href', mark.lastUri + '#book:mark'); }); }; var doScroll = function (top) { if (!isNaN(top)) { $(function () { // eslint-disable-next-line max-len $(global.document.documentElement).animate({ 'scrollTop': top }, 'fast'); }); } }; var doSaveScroll = function (path, mark) { if (mark == null) { mark = {}; } var top = global.document.documentElement.scrollTop; mark.lastUri = path; mark[path] = top; storage.setItem('bookmark', JSON.stringify(mark)); link.animate({ top: -26 }, 'fast', function () { setTimeout(function () { link.css('top', ''); }, 400); }); return mark; }; var scrollToMark = function (trigger, hash) { var path = global.location.pathname; var mark = getBookmark(); $(function () { init(); // save the position by clicking the icon link.click(function () { mark = doSaveScroll(path, mark); return false; }); // register beforeunload event when the trigger is auto if (trigger === 'auto') { // register beforeunload event global.addEventListener('beforeunload', function () { doSaveScroll(path, mark); }); } // auto scroll to the position if (mark == null) { return; } // and if the page opens with a specific hash, just jump out var skips = [hash, '#comments']; // eslint-disable-next-line if (skips.filter(function (h) { return h === global.location.hash }).length > 0) { return; } doScroll(mark[path]); }); }; global.bookmark = { loadBookmark: loadBookmark, scrollToMark: scrollToMark, }; })(window);"},{"title":"","date":"2021-05-27T04:33:51.871Z","updated":"2021-05-27T04:33:51.871Z","comments":true,"path":"lib/bookmark/package.json","permalink":"http://example.com/lib/bookmark/package.json","excerpt":"","text":"{\"name\":\"theme-next-bookmark\",\"version\":\"1.0.2\",\"description\":\"A plugin of local-bookmarks for NexT theme.\",\"main\":\"index.js\",\"scripts\":{\"test\":\"eslint index.js\",\"dist\":\"eslint index.js && uglifyjs --compress --mangle -o bookmark.min.js -- index.js\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/theme-next/theme-next-bookmark.git\"},\"keywords\":[\"hexo\",\"theme-next\",\"plugin\",\"bookmark\"],\"author\":\"Tsanie Lily\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/theme-next/theme-next-bookmark/issues\"},\"homepage\":\"https://github.com/theme-next/theme-next-bookmark#readme\",\"devDependencies\":{\"eslint\":\"^4.17.0\",\"eslint-config-google\":\"^0.9.1\",\"uglify-js\":\"^3.3.10\"}}"},{"title":"","date":"2021-05-27T04:33:51.871Z","updated":"2021-05-27T04:33:51.871Z","comments":true,"path":"lib/bookmark/renovate.json","permalink":"http://example.com/lib/bookmark/renovate.json","excerpt":"","text":"{\"extends\":[\"config:base\"]}"}],"posts":[{"title":"leetcode-ÊåâÊùÉÈáçÈöèÊú∫ÈÄâÊã©","slug":"leetcode-ÊåâÊùÉÈáçÈöèÊú∫ÈÄâÊã©","date":"2021-08-29T16:00:00.000Z","updated":"2021-08-30T02:41:52.735Z","comments":true,"path":"2021/08/30/leetcode-ÊåâÊùÉÈáçÈöèÊú∫ÈÄâÊã©/","link":"","permalink":"http://example.com/2021/08/30/leetcode-%E6%8C%89%E6%9D%83%E9%87%8D%E9%9A%8F%E6%9C%BA%E9%80%89%E6%8B%A9/","excerpt":"","text":"528. ÊåâÊùÉÈáçÈöèÊú∫ÈÄâÊã©ÁªôÂÆö‰∏Ä‰∏™Ê≠£Êï¥Êï∞Êï∞ÁªÑ w ÔºåÂÖ∂‰∏≠ w[i] ‰ª£Ë°®‰∏ãÊ†á i ÁöÑÊùÉÈáçÔºà‰∏ãÊ†á‰ªé 0 ÂºÄÂßãÔºâÔºåËØ∑ÂÜô‰∏Ä‰∏™ÂáΩÊï∞ pickIndex ÔºåÂÆÉÂèØ‰ª•ÈöèÊú∫Âú∞Ëé∑Âèñ‰∏ãÊ†á iÔºåÈÄâÂèñ‰∏ãÊ†á i ÁöÑÊ¶ÇÁéá‰∏é w[i] ÊàêÊ≠£ÊØî„ÄÇ ‰æãÂ¶ÇÔºåÂØπ‰∫é w = [1, 3]ÔºåÊåëÈÄâ‰∏ãÊ†á 0 ÁöÑÊ¶ÇÁéá‰∏∫ 1 / (1 + 3) = 0.25 ÔºàÂç≥Ôºå25%ÔºâÔºåËÄåÈÄâÂèñ‰∏ãÊ†á 1 ÁöÑÊ¶ÇÁéá‰∏∫ 3 / (1 + 3) = 0.75ÔºàÂç≥Ôºå75%Ôºâ„ÄÇ ‰πüÂ∞±ÊòØËØ¥ÔºåÈÄâÂèñ‰∏ãÊ†á i ÁöÑÊ¶ÇÁéá‰∏∫ w[i] / sum(w) „ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºö [‚ÄúSolution‚Äù,‚ÄùpickIndex‚Äù] [[[1]],[]] ËæìÂá∫Ôºö [null,0] Ëß£ÈáäÔºö Solution solution = new Solution([1]); solution.pickIndex(); // ËøîÂõû 0ÔºåÂõ†‰∏∫Êï∞ÁªÑ‰∏≠Âè™Êúâ‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåÊâÄ‰ª•ÂîØ‰∏ÄÁöÑÈÄâÊã©ÊòØËøîÂõû‰∏ãÊ†á 0„ÄÇ Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºö [‚ÄúSolution‚Äù,‚ÄùpickIndex‚Äù,‚ÄùpickIndex‚Äù,‚ÄùpickIndex‚Äù,‚ÄùpickIndex‚Äù,‚ÄùpickIndex‚Äù] [[[1,3]],[],[],[],[],[]] ËæìÂá∫Ôºö [null,1,1,1,1,0] Ëß£ÈáäÔºö Solution solution = new Solution([1, 3]); solution.pickIndex(); // ËøîÂõû 1ÔºåËøîÂõû‰∏ãÊ†á 1ÔºåËøîÂõûËØ•‰∏ãÊ†áÊ¶ÇÁéá‰∏∫ 3/4 „ÄÇ solution.pickIndex(); // ËøîÂõû 1 solution.pickIndex(); // ËøîÂõû 1 solution.pickIndex(); // ËøîÂõû 1 solution.pickIndex(); // ËøîÂõû 0ÔºåËøîÂõû‰∏ãÊ†á 0ÔºåËøîÂõûËØ•‰∏ãÊ†áÊ¶ÇÁéá‰∏∫ 1/4 „ÄÇ Áî±‰∫éËøôÊòØ‰∏Ä‰∏™ÈöèÊú∫ÈóÆÈ¢òÔºåÂÖÅËÆ∏Â§ö‰∏™Á≠îÊ°àÔºåÂõ†Ê≠§‰∏ãÂàóËæìÂá∫ÈÉΩÂèØ‰ª•Ë¢´ËÆ§‰∏∫ÊòØÊ≠£Á°ÆÁöÑ: [null,1,1,1,1,0] [null,1,1,1,1,1] [null,1,1,1,0,0] [null,1,1,1,0,1] [null,1,0,1,0,0] ‚Ä¶‚Ä¶ ËØ∏Ëã•Ê≠§Á±ª„ÄÇ ÊèêÁ§∫Ôºö 1 &lt;= w.length &lt;= 10000 1 &lt;= w[i] &lt;= 10^5 pickIndex Â∞ÜË¢´Ë∞ÉÁî®‰∏çË∂ÖËøá 10000 Ê¨° Áü•ËØÜÁÇπÔºöÂâçÁºÄÂíå„ÄÅ‰∫åÂàÜÊ≥ïÂàÜÊûêÔºöËøô‰∏™È¢òÁõÆÊ≤°‰ªÄ‰πàÂ•ΩÁªÜËØ¥ÁöÑÔºåÊ†∏ÂøÉÊÄùÊÉ≥ÊòØÂà©Áî®ÂâçÁºÄÂíåÂ∞ÜÊØè‰∏™ÂÖÉÁ¥†Âç†ÁöÑÊØî‰æãËøõË°åÂàíÂàÜÔºåÁÑ∂ÂêéÈááÁî®‰∫åÂàÜÊ≥ïÂØπÈöèÊú∫Êï∞ËøõË°åÂÆö‰ΩçÂç≥ÂèØ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718192021222324252627282930313233343536class Solution &#123; int[] preSum; int total; public Solution(int[] w) &#123; preSum = new int[w.length]; preSum[0] = w[0]; for(int i=1;i&lt;w.length;i++)&#123; preSum[i] = preSum[i-1]+w[i]; &#125; total = Arrays.stream(w).sum(); &#125; public int pickIndex() &#123; int x = (int)(Math.random()*total)+1; return binarySearch(x); &#125; public int binarySearch(int x)&#123; int left = 0,right = preSum.length-1; while(left&lt;right)&#123; int mid = left+(right-left)/2; if(preSum[mid]&lt;x)&#123; left = mid+1; &#125;else&#123; right = mid; &#125; &#125; return left; &#125;&#125;/** * Your Solution object will be instantiated and called as such: * Solution obj = new Solution(w); * int param_1 = obj.pickIndex(); */","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ÂâçÁºÄÂíå„ÄÅ‰∫åÂàÜÊ≥ï","slug":"ÂâçÁºÄÂíå„ÄÅ‰∫åÂàÜÊ≥ï","permalink":"http://example.com/tags/%E5%89%8D%E7%BC%80%E5%92%8C%E3%80%81%E4%BA%8C%E5%88%86%E6%B3%95/"}]},{"title":"leetcode-Êã¨Âè∑ÁªÑÂêà","slug":"leetcode-Êã¨Âè∑ÁªÑÂêà","date":"2021-08-29T16:00:00.000Z","updated":"2021-08-30T08:14:11.826Z","comments":true,"path":"2021/08/30/leetcode-Êã¨Âè∑ÁªÑÂêà/","link":"","permalink":"http://example.com/2021/08/30/leetcode-%E6%8B%AC%E5%8F%B7%E7%BB%84%E5%90%88/","excerpt":"","text":"22. Êã¨Âè∑ÁîüÊàêÊï∞Â≠ó n ‰ª£Ë°®ÁîüÊàêÊã¨Âè∑ÁöÑÂØπÊï∞ÔºåËØ∑‰Ω†ËÆæËÆ°‰∏Ä‰∏™ÂáΩÊï∞ÔºåÁî®‰∫éËÉΩÂ§üÁîüÊàêÊâÄÊúâÂèØËÉΩÁöÑÂπ∂‰∏î ÊúâÊïàÁöÑ Êã¨Âè∑ÁªÑÂêà„ÄÇ ÊúâÊïàÊã¨Âè∑ÁªÑÂêàÈúÄÊª°Ë∂≥ÔºöÂ∑¶Êã¨Âè∑ÂøÖÈ°ª‰ª•Ê≠£Á°ÆÁöÑÈ°∫Â∫èÈó≠Âêà„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºön = 3 ËæìÂá∫Ôºö[‚Äú((()))‚Äù,‚Äù(()())‚Äù,‚Äù(())()‚Äù,‚Äù()(())‚Äù,‚Äù()()()‚Äù] Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºön = 1 ËæìÂá∫Ôºö[‚Äú()‚Äù] ÊèêÁ§∫Ôºö 1 &lt;= n &lt;= 8 Áü•ËØÜÁÇπÔºöÂõûÊ∫ØÂàÜÊûêÔºöËøô‰∏™È¢òÁõÆÊòØÂõûÊ∫ØÁöÑÂ∏∏ËßÅÁî®Ê≥ïÔºåÈúÄË¶ÅÂØπÂ∑¶Âè≥Êã¨Âè∑ÁöÑÊëÜÊîæËøõË°åÂà§Êñ≠ÔºåÂπ∂Âú®Ê≠£Á°ÆÁöÑÊó∂ÂÄôËøõË°å‰∏ã‰∏ÄÊ≠•ÂõûÊ∫Ø„ÄÇ ‰∏Ä‰∏™Ê≠£Á°ÆÁöÑÊã¨Âè∑ÁªÑÂêàÈúÄË¶ÅÊª°Ë∂≥ÔºöÂ¶ÇÊûúÂ∑¶Âè≥Êã¨Âè∑ÁöÑÂâ©‰ΩôÊï∞ÈáèÂùá‰∏∫0ÔºåÈÇ£ËØ¥ÊòéÊîæÂÆå‰∫ÜÔºå‰πãÈó¥ËøîÂõûËøô‰∏™Á≠îÊ°àÔºõ Âú®Êã¨Âè∑ÁªÑÂêàÊúüÈó¥ÔºåÂ∑¶Êã¨Âè∑Ââ©‰ΩôÊï∞ÈáèÂèØ‰ª•Â∞è‰∫éÂè≥Êã¨Âè∑Ââ©‰ΩôÊï∞ÈáèÔºå‰ΩÜÂè≥Êã¨Âè∑Ââ©‰ΩôÊï∞Èáè‰∏çÂèØ‰ª•Â∞è‰∫éÂ∑¶Êã¨Âè∑Ââ©‰ΩôÊï∞Èáè„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425class Solution &#123; private List&lt;String&gt; res; public List&lt;String&gt; generateParenthesis(int n) &#123; res = new ArrayList&lt;&gt;(); generateBrackets(&quot;&quot;,n,n); return res; &#125; public void generateBrackets(String str,int left,int right)&#123; if(left==0&amp;&amp;right==0)&#123; res.add(str); return; &#125; //Â∑¶Êã¨Âè∑‰ΩôÈáèÂíåÂè≥Êã¨Âè∑‰ΩôÈáèÁõ∏Á≠âÁöÑËØùÔºåÂè™ËÉΩÂÖàÊîæÂ∑¶Êã¨Âè∑ if(left==right)&#123; generateBrackets(str+&quot;(&quot;,left-1,right); &#125; //Â¶ÇÊûúÂ∑¶Êã¨Âè∑ÊØîËæÉÂ∞ëÔºàÂè≥Êã¨Âè∑‰πü‰∏çËÉΩÊØîËæÉÂ∞ëÔºåÈÇ£ËÇØÂÆöÈîô‰∫ÜÔºâÔºåÂèØ‰ª•Êé•ÁùÄÊîæÂ∑¶Êã¨Âè∑Ôºå‰πüÂèØ‰ª•Êé•ÁùÄÊîæÂè≥Êã¨Âè∑ if(left&lt;right)&#123; if(left&gt;0)&#123; generateBrackets(str+&quot;(&quot;,left-1,right); &#125; generateBrackets(str+&quot;)&quot;,left,right-1); &#125; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ÂõûÊ∫Ø","slug":"ÂõûÊ∫Ø","permalink":"http://example.com/tags/%E5%9B%9E%E6%BA%AF/"}]},{"title":"leetcode-Êü±Áä∂ÂõæÈù¢ÁßØ","slug":"leetcode-Êü±Áä∂ÂõæÈù¢ÁßØ","date":"2021-08-29T16:00:00.000Z","updated":"2021-08-30T12:15:49.287Z","comments":true,"path":"2021/08/30/leetcode-Êü±Áä∂ÂõæÈù¢ÁßØ/","link":"","permalink":"http://example.com/2021/08/30/leetcode-%E6%9F%B1%E7%8A%B6%E5%9B%BE%E9%9D%A2%E7%A7%AF/","excerpt":"","text":"84. Êü±Áä∂Âõæ‰∏≠ÊúÄÂ§ßÁöÑÁü©ÂΩ¢ÁªôÂÆö n ‰∏™ÈùûË¥üÊï¥Êï∞ÔºåÁî®Êù•Ë°®Á§∫Êü±Áä∂Âõæ‰∏≠ÂêÑ‰∏™Êü±Â≠êÁöÑÈ´òÂ∫¶„ÄÇÊØè‰∏™Êü±Â≠êÂΩºÊ≠§Áõ∏ÈÇªÔºå‰∏îÂÆΩÂ∫¶‰∏∫ 1 „ÄÇ Ê±ÇÂú®ËØ•Êü±Áä∂Âõæ‰∏≠ÔºåËÉΩÂ§üÂãæÂãíÂá∫Êù•ÁöÑÁü©ÂΩ¢ÁöÑÊúÄÂ§ßÈù¢ÁßØ„ÄÇ Áü•ËØÜÁÇπÔºöÂçïË∞ÉÊ†àÂàÜÊûêÔºöËøô‰∏™ÈóÆÈ¢òÊúâ‰∏™È¢òËß£ËÆ≤ÁöÑÂæàÊ∏ÖÊ•öÔºåÊàë‰πüÊ≤°‰ªÄ‰πàÊõ¥Â•ΩÁöÑÂª∫ËÆÆ„ÄÇ Êö¥ÂäõËß£Ê≥ï„ÄÅÊ†àÔºàÂçïË∞ÉÊ†à„ÄÅÂì®ÂÖµÊäÄÂ∑ßÔºâ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223242526class Solution &#123; public int largestRectangleArea(int[] heights) &#123; int len = heights.length; if(len==1)&#123; return heights[0]; &#125; int res = 0; int[] newHeights = new int[len+2]; newHeights[0] = 0; System.arraycopy(heights,0,newHeights,1,len); newHeights[len+1] = 0; len += 2; heights = newHeights; Deque&lt;Integer&gt; stack = new ArrayDeque&lt;&gt;(); stack.offerLast(0); for(int i=1;i&lt;len;i++)&#123; while(heights[i]&lt;heights[stack.peekLast()])&#123; int curHeight = heights[stack.removeLast()]; int curWidth = i-stack.peekLast()-1; res = Math.max(res,curHeight*curWidth); &#125; stack.offerLast(i); &#125; return res; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ÂçïË∞ÉÊ†à","slug":"ÂçïË∞ÉÊ†à","permalink":"http://example.com/tags/%E5%8D%95%E8%B0%83%E6%A0%88/"}]},{"title":"leetcode-Â•áÊï∞ÈïøÂ∫¶ÁöÑÂ≠êÊï∞ÁªÑÁöÑÂíå","slug":"leetcode-Â•áÊï∞ÈïøÂ∫¶Â≠êÊï∞ÁªÑÁöÑÂíå","date":"2021-08-28T16:00:00.000Z","updated":"2021-08-29T02:17:17.009Z","comments":true,"path":"2021/08/29/leetcode-Â•áÊï∞ÈïøÂ∫¶Â≠êÊï∞ÁªÑÁöÑÂíå/","link":"","permalink":"http://example.com/2021/08/29/leetcode-%E5%A5%87%E6%95%B0%E9%95%BF%E5%BA%A6%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E5%92%8C/","excerpt":"","text":"1588. ÊâÄÊúâÂ•áÊï∞ÈïøÂ∫¶Â≠êÊï∞ÁªÑÁöÑÂíåÁªô‰Ω†‰∏Ä‰∏™Ê≠£Êï¥Êï∞Êï∞ÁªÑ arr ÔºåËØ∑‰Ω†ËÆ°ÁÆóÊâÄÊúâÂèØËÉΩÁöÑÂ•áÊï∞ÈïøÂ∫¶Â≠êÊï∞ÁªÑÁöÑÂíå„ÄÇ Â≠êÊï∞ÁªÑ ÂÆö‰πâ‰∏∫ÂéüÊï∞ÁªÑ‰∏≠ÁöÑ‰∏Ä‰∏™ËøûÁª≠Â≠êÂ∫èÂàó„ÄÇ ËØ∑‰Ω†ËøîÂõû arr ‰∏≠ ÊâÄÊúâÂ•áÊï∞ÈïøÂ∫¶Â≠êÊï∞ÁªÑÁöÑÂíå „ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºöarr = [1,4,2,5,3] ËæìÂá∫Ôºö58 Ëß£ÈáäÔºöÊâÄÊúâÂ•áÊï∞ÈïøÂ∫¶Â≠êÊï∞ÁªÑÂíåÂÆÉ‰ª¨ÁöÑÂíå‰∏∫Ôºö [1] = 1 [4] = 4 [2] = 2 [5] = 5 [3] = 3 [1,4,2] = 7 [4,2,5] = 11 [2,5,3] = 10 [1,4,2,5,3] = 15 Êàë‰ª¨Â∞ÜÊâÄÊúâÂÄºÊ±ÇÂíåÂæóÂà∞ 1 + 4 + 2 + 5 + 3 + 7 + 11 + 10 + 15 = 58 Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºöarr = [1,2] ËæìÂá∫Ôºö3 Ëß£ÈáäÔºöÊÄªÂÖ±Âè™Êúâ 2 ‰∏™ÈïøÂ∫¶‰∏∫Â•áÊï∞ÁöÑÂ≠êÊï∞ÁªÑÔºå[1] Âíå [2]„ÄÇÂÆÉ‰ª¨ÁöÑÂíå‰∏∫ 3 „ÄÇ Á§∫‰æã 3Ôºö ËæìÂÖ•Ôºöarr = [10,11,12] ËæìÂá∫Ôºö66 ÊèêÁ§∫Ôºö 1 &lt;= arr.length &lt;= 100 1 &lt;= arr[i] &lt;= 1000 Áü•ËØÜÁÇπÔºöÂâçÁºÄÂíå„ÄÅÊï∞Â≠¶ÂàÜÊûêÔºöÂâçÁºÄÂíåÂæàÂÆπÊòìÊÉ≥Âà∞ÔºåËøô‰∏™‰∏çÂÜçÂ§öËØ¥ÔºåËØ¶ÊÉÖËßÅ‰ª£Á†ÅÔºõ Êï∞Â≠¶ÂàÜÊûêÂ∞±‰∏çÊòØÂæàÂ•ΩÊÉ≥ÔºåÊ±ÇÈïøÂ∫¶‰∏∫Â•áÊï∞ÁöÑÂ≠êÊï∞ÁªÑÁöÑÂíåÔºåÂÖ∂ÂÆû‰πüÂ∞±ÊòØÊ±ÇÊØè‰∏™ÂÖÉÁ¥†‰ºöÂú®Â§öÂ∞ë‰∏™Â•áÊï∞ÈïøÂ∫¶ÁöÑÂ≠êÊï∞ÁªÑ‰∏≠Âá∫Áé∞ÔºåËøô‰∏™È¢òËß£ËÆ≤ÁöÑÂæàÂ•ΩÔºåÈÄöËøáÂØπÊØè‰∏™ÂÖÉÁ¥†Â∑¶Âè≥Â≠òÂú®ÂÖÉÁ¥†‰∏™Êï∞ÁöÑÂàÜÊûêÊù•Êü•ÊâæËØ•ÂÖÉÁ¥†Âá∫Áé∞ÁöÑÂ•áÊï∞ÈïøÂ∫¶ÁöÑÊï∞ÁªÑÁöÑ‰∏™Êï∞ÔºåÂæàÁÆÄÊ¥Å„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718192021222324252627282930313233343536373839//ÂâçÁºÄÂíåclass Solution &#123; public int sumOddLengthSubarrays(int[] arr) &#123; int sum = 0; int len = arr.length; //preSum[i]:Ââçi‰∏™Êï∞Â≠óÁöÑÂíå int[] preSum = new int[len+1]; for(int i=0;i&lt;len;i++)&#123; sum+=arr[i]; preSum[i+1] += sum; &#125; if(len&lt;3)&#123; return sum; &#125; int k = 3; while(k&lt;=len)&#123; for(int i=0;i&lt;=len-k;i++)&#123; sum += preSum[i+k]-preSum[i]; &#125; k += 2; &#125; return sum; &#125;&#125;//Êï∞Â≠¶ÂàÜÊûêclass Solution &#123; public int sumOddLengthSubarrays(int[] arr) &#123; int sum = 0,len = arr.length; for(int i=0;i&lt;len;i++)&#123; //leftEvenÔºöÂÖÉÁ¥†iÂ∑¶ËæπÂÖÉÁ¥†‰∏™Êï∞‰∏∫ÂÅ∂Êï∞ÁöÑÊÉÖÂÜµÔºåleftOddÔºöÂÖÉÁ¥†iÂ∑¶ËæπÂÖÉÁ¥†‰∏™Êï∞‰∏∫Â•áÊï∞ÁöÑÊÉÖÂÜµ int leftEven = (i+2)/2,leftOdd = (i+1)/2; int rightEven = (len-i+1)/2,rightOdd = (len-i)/2; sum += arr[i]*(leftEven*rightEven+leftOdd*rightOdd); &#125; return sum; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ÂâçÁºÄÂíå„ÄÅÊï∞Â≠¶","slug":"ÂâçÁºÄÂíå„ÄÅÊï∞Â≠¶","permalink":"http://example.com/tags/%E5%89%8D%E7%BC%80%E5%92%8C%E3%80%81%E6%95%B0%E5%AD%A6/"}]},{"title":"leetcode-Êï∞ÊçÆÊµÅ‰∏≠ÁöÑ‰∏≠‰ΩçÊï∞","slug":"leetcode-Êï∞ÊçÆÊµÅ‰∏≠ÁöÑ‰∏≠‰ΩçÊï∞","date":"2021-08-26T16:00:00.000Z","updated":"2021-08-27T02:40:36.824Z","comments":true,"path":"2021/08/27/leetcode-Êï∞ÊçÆÊµÅ‰∏≠ÁöÑ‰∏≠‰ΩçÊï∞/","link":"","permalink":"http://example.com/2021/08/27/leetcode-%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/","excerpt":"","text":"295. Êï∞ÊçÆÊµÅÁöÑ‰∏≠‰ΩçÊï∞‰∏≠‰ΩçÊï∞ÊòØÊúâÂ∫èÂàóË°®‰∏≠Èó¥ÁöÑÊï∞„ÄÇÂ¶ÇÊûúÂàóË°®ÈïøÂ∫¶ÊòØÂÅ∂Êï∞Ôºå‰∏≠‰ΩçÊï∞ÂàôÊòØ‰∏≠Èó¥‰∏§‰∏™Êï∞ÁöÑÂπ≥ÂùáÂÄº„ÄÇ ‰æãÂ¶ÇÔºå [2,3,4] ÁöÑ‰∏≠‰ΩçÊï∞ÊòØ 3 [2,3] ÁöÑ‰∏≠‰ΩçÊï∞ÊòØ (2 + 3) / 2 = 2.5 ËÆæËÆ°‰∏Ä‰∏™ÊîØÊåÅ‰ª•‰∏ã‰∏§ÁßçÊìç‰ΩúÁöÑÊï∞ÊçÆÁªìÊûÑÔºö void addNum(int num) - ‰ªéÊï∞ÊçÆÊµÅ‰∏≠Ê∑ªÂä†‰∏Ä‰∏™Êï¥Êï∞Âà∞Êï∞ÊçÆÁªìÊûÑ‰∏≠„ÄÇ double findMedian() - ËøîÂõûÁõÆÂâçÊâÄÊúâÂÖÉÁ¥†ÁöÑ‰∏≠‰ΩçÊï∞„ÄÇ Á§∫‰æãÔºö addNum(1) addNum(2) findMedian() -&gt; 1.5 addNum(3) findMedian() -&gt; 2 ËøõÈò∂: Â¶ÇÊûúÊï∞ÊçÆÊµÅ‰∏≠ÊâÄÊúâÊï¥Êï∞ÈÉΩÂú® 0 Âà∞ 100 ËåÉÂõ¥ÂÜÖÔºå‰Ω†Â∞ÜÂ¶Ç‰Ωï‰ºòÂåñ‰Ω†ÁöÑÁÆóÊ≥ïÔºü Â¶ÇÊûúÊï∞ÊçÆÊµÅ‰∏≠ 99% ÁöÑÊï¥Êï∞ÈÉΩÂú® 0 Âà∞ 100 ËåÉÂõ¥ÂÜÖÔºå‰Ω†Â∞ÜÂ¶Ç‰Ωï‰ºòÂåñ‰Ω†ÁöÑÁÆóÊ≥ïÔºü Áü•ËØÜÁÇπÔºöÂ†ÜÂàÜÊûêÔºöÈááÁî®‰∏§‰∏™Â†ÜÁªìÊûÑÊù•ËÆ°ÁÆó‰∏≠‰ΩçÊï∞„ÄÇ ‰∏Ä‰∏™Â§ßÈ°∂Â†ÜqueMinÁî®‰∫éÂ≠òÊîæÊâÄÊúâÂ∞è‰∫é‰∏≠‰ΩçÊï∞ÁöÑÂÖÉÁ¥†ÔºåÂ∞èÈ°∂Â†ÜqueMaxÁî®‰∫éÂ≠òÊîæÊâÄÊúâÂ§ß‰∫é‰∏≠‰ΩçÊï∞ÁöÑÂÖÉÁ¥†Ôºõ ÂÖÉÁ¥†ÊÄªÊï∞‰∏∫ÂÅ∂Êï∞Êó∂Ôºå‰∏§‰∏™Â†ÜÂêÑÂç†‰∏ÄÂçäÔºõ‰∏∫Â•áÊï∞Êó∂ÔºåÁª¥ÊåÅqueMinÁöÑÂÖÉÁ¥†‰∏™Êï∞ËæÉÂ§ö ÊèíÂÖ•ÂÖÉÁ¥†Êó∂‰øùËØÅqueMin‰∏≠ÁöÑÂÖÉÁ¥†‰∏çÂ§ß‰∫équeMax‰∏≠ÁöÑÂÖÉÁ¥†Ôºõ ÊèíÂÖ•ÁöÑÂÖÉÁ¥†Â¶ÇÊûúÂ∞è‰∫éÁ≠â‰∫équeMinÁöÑÊúÄÂ§ßÂÄºÔºåÂàôÂ∞ÜËØ•ÂÖÉÁ¥†ÊèíÂÖ•queMin‰∏≠ÔºåÂπ∂Ê†πÊçÆ‰∏§‰∏™Â†ÜÁöÑÂÖÉÁ¥†‰∏™Êï∞ÔºåËÄÉËôëÊòØÂê¶Â∞ÜqueMin‰∏≠ÁöÑÊúÄÂ§ßÂÄºÂèñÂá∫Âπ∂ÊîæÂÖ•queMax‰∏≠ ÊèíÂÖ•ÁöÑÂÖÉÁ¥†Â§ß‰∫équeMinÁöÑÊúÄÂ§ßÂÄºÔºåÂàôÂ∞ÜËØ•ÂÖÉÁ¥†ÊèíÂÖ•queMax‰∏≠ÔºåÂπ∂Ê†πÊçÆ‰∏§‰∏™Â†ÜÁöÑÂÖÉÁ¥†‰∏™Êï∞ËÄÉËôëÊòØÂê¶Â∞ÜqueMax‰∏≠ÁöÑÊúÄÂ∞èÂÄºÂèñÂá∫Âπ∂ÊîæÂÖ•queMin‰∏≠ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728293031323334353637383940class MedianFinder &#123; //queMinÂ≠òÊîæÂ∞è‰∫é‰∏≠‰ΩçÊï∞ÁöÑÂÖÉÁ¥†ÔºåÈôçÂ∫èÊéíÂàó PriorityQueue&lt;Integer&gt; queMin; //queMaxÂ≠òÊîæÂ§ß‰∫é‰∏≠‰ΩçÊï∞ÁöÑÂÖÉÁ¥†ÔºåÂçáÂ∫èÊéíÂàó PriorityQueue&lt;Integer&gt; queMax; /** initialize your data structure here. */ public MedianFinder() &#123; queMin = new PriorityQueue&lt;&gt;((a,b)-&gt;b-a); queMax = new PriorityQueue&lt;&gt;((a,b)-&gt;a-b); &#125; public void addNum(int num) &#123; if(queMin.isEmpty()||num&lt;=queMin.peek())&#123; queMin.offer(num); if(queMax.size()+1&lt;queMin.size())&#123; queMax.offer(queMin.poll()); &#125; &#125;else&#123; queMax.offer(num); if(queMax.size()&gt;queMin.size())&#123; queMin.offer(queMax.poll()); &#125; &#125; &#125; public double findMedian() &#123; if(queMin.size()&gt;queMax.size())&#123; return queMin.peek(); &#125; return (queMin.peek()+queMax.peek())/2.0; &#125;&#125;/** * Your MedianFinder object will be instantiated and called as such: * MedianFinder obj = new MedianFinder(); * obj.addNum(num); * double param_2 = obj.findMedian(); */","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Â†Ü","slug":"Â†Ü","permalink":"http://example.com/tags/%E5%A0%86/"}]},{"title":"leetcode-Ë¥™ÂøÉ","slug":"leetcode-Ë¥™ÂøÉ","date":"2021-08-25T16:00:00.000Z","updated":"2021-08-26T03:03:03.465Z","comments":true,"path":"2021/08/26/leetcode-Ë¥™ÂøÉ/","link":"","permalink":"http://example.com/2021/08/26/leetcode-%E8%B4%AA%E5%BF%83/","excerpt":"","text":"881. ÊïëÁîüËâáÁ¨¨ i ‰∏™‰∫∫ÁöÑ‰ΩìÈáç‰∏∫ people[i]ÔºåÊØèËâòËàπÂèØ‰ª•ÊâøËΩΩÁöÑÊúÄÂ§ßÈáçÈáè‰∏∫ limit„ÄÇ ÊØèËâòËàπÊúÄÂ§öÂèØÂêåÊó∂ËΩΩ‰∏§‰∫∫Ôºå‰ΩÜÊù°‰ª∂ÊòØËøô‰∫õ‰∫∫ÁöÑÈáçÈáè‰πãÂíåÊúÄÂ§ö‰∏∫ limit„ÄÇ ËøîÂõûËΩΩÂà∞ÊØè‰∏Ä‰∏™‰∫∫ÊâÄÈúÄÁöÑÊúÄÂ∞èËàπÊï∞„ÄÇ(‰øùËØÅÊØè‰∏™‰∫∫ÈÉΩËÉΩË¢´ËàπËΩΩ)„ÄÇ Áü•ËØÜÁÇπÔºöË¥™ÂøÉÂàÜÊûêÔºö‚ÄúÊØèËâòËàπÊúÄÂ§öÂèØÂêåÊó∂ËΩΩ‰∏§‰∫∫‚Äù Â¶ÇÊûúÁ≤óÂøÉÂ§ßÊÑèÁöÑÊØõÁóÖ‰∏çÊîπÔºåËøôËæàÂ≠ê‰ªÄ‰πàÈÉΩÂÅö‰∏çÂ•Ω„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415class Solution &#123; public int numRescueBoats(int[] people, int limit) &#123; int len = people.length; Arrays.sort(people); int left = 0,right = len-1,count = 0; while(left&lt;right)&#123; if(people[left]+people[right]&lt;=limit)&#123; ++left; &#125; --right; ++count; &#125; return left==right?count+1:count; &#125;&#125; 1011. Âú® D Â§©ÂÜÖÈÄÅËææÂåÖË£πÁöÑËÉΩÂäõ‰º†ÈÄÅÂ∏¶‰∏äÁöÑÂåÖË£πÂøÖÈ°ªÂú® D Â§©ÂÜÖ‰ªé‰∏Ä‰∏™Ê∏ØÂè£ËøêÈÄÅÂà∞Âè¶‰∏Ä‰∏™Ê∏ØÂè£„ÄÇ ‰º†ÈÄÅÂ∏¶‰∏äÁöÑÁ¨¨ i ‰∏™ÂåÖË£πÁöÑÈáçÈáè‰∏∫ weights[i]„ÄÇÊØè‰∏ÄÂ§©ÔºåÊàë‰ª¨ÈÉΩ‰ºöÊåâÁªôÂá∫ÈáçÈáèÁöÑÈ°∫Â∫èÂæÄ‰º†ÈÄÅÂ∏¶‰∏äË£ÖËΩΩÂåÖË£π„ÄÇÊàë‰ª¨Ë£ÖËΩΩÁöÑÈáçÈáè‰∏ç‰ºöË∂ÖËøáËàπÁöÑÊúÄÂ§ßËøêËΩΩÈáçÈáè„ÄÇ ËøîÂõûËÉΩÂú® D Â§©ÂÜÖÂ∞Ü‰º†ÈÄÅÂ∏¶‰∏äÁöÑÊâÄÊúâÂåÖË£πÈÄÅËææÁöÑËàπÁöÑÊúÄ‰ΩéËøêËΩΩËÉΩÂäõ„ÄÇ Áü•ËØÜÁÇπÔºöË¥™ÂøÉ„ÄÅ‰∫åÂàÜÂàÜÊûêÔºöÂú® D Â§©ÂÜÖÈÄÅËææÂåÖË£πÁöÑËÉΩÂäõ‰∏äÈù¢ÊòØÂÆòËß£ÔºåÂÜôÁöÑËøòÊòØÊå∫‰∏çÈîôÁöÑÔºåÂ∞ÜËøô‰∏™ÈóÆÈ¢òËΩ¨Âåñ‰∏∫‰∫åÂàÜÊ≥ïÊ±ÇÊúÄ‰ºòËß£ÔºåËøô‰∏™ÊÄùË∑ØÊå∫Â•ΩÁöÑÔºåÂ§öÂ≠¶ÁùÄÁÇπ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223242526272829303132class Solution &#123; public int shipWithinDays(int[] weights, int days) &#123; int sum = 0,max = Integer.MIN_VALUE; for(int weight:weights)&#123; sum+=weight; if(weight&gt;max)&#123; max = weight; &#125; &#125; int left = max,right = sum; while(left&lt;right)&#123; int mid = left+(right-left)/2; //countÂàùÂßãÂÄºË¶Å‰∏∫1ÔºöË°®Á§∫ÈúÄË¶ÅËøêÈÄÅÁöÑÂ§©Êï∞ int count = 1; //tmpSumÔºöÂΩìÂâçÂ∑≤ÁªèËøêÈÄÅÁöÑÈáçÈáè int tmpSum = 0; for(int weight:weights)&#123; if(tmpSum+weight&gt;mid)&#123; tmpSum = 0; count++; &#125; tmpSum+=weight; &#125; if(count&lt;=days)&#123; right = mid; &#125;else&#123; left = mid+1; &#125; &#125; return left; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Ë¥™ÂøÉ","slug":"Ë¥™ÂøÉ","permalink":"http://example.com/tags/%E8%B4%AA%E5%BF%83/"}]},{"title":"leetcode-ÂÖ®ÊéíÂàó","slug":"leetcode-ÂÖ®ÊéíÂàó","date":"2021-08-24T16:00:00.000Z","updated":"2021-08-25T12:33:41.413Z","comments":true,"path":"2021/08/25/leetcode-ÂÖ®ÊéíÂàó/","link":"","permalink":"http://example.com/2021/08/25/leetcode-%E5%85%A8%E6%8E%92%E5%88%97/","excerpt":"","text":"46. ÂÖ®ÊéíÂàóÁªôÂÆö‰∏Ä‰∏™Ê≤°ÊúâÈáçÂ§çÊï∞Â≠óÁöÑÂ∫èÂàóÔºåËøîÂõûÂÖ∂ÊâÄÊúâÂèØËÉΩÁöÑÂÖ®ÊéíÂàó„ÄÇ Á§∫‰æã: ËæìÂÖ•: [1,2,3] ËæìÂá∫: [ [1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], [3,2,1] ] Áü•ËØÜÁÇπÔºöÂõûÊ∫ØÂàÜÊûêÔºöËøô‰∏™È¢òÁõÆ‰πüÊòØ‰∏ÄÂ§ßÁü•ËØÜÁÇπÔºöÂõûÊ∫Ø„ÄÇÂõûÊ∫ØÁöÑÊÑèÊÄùÂæàÁÆÄÂçïÔºåËøôÊù°Ë∑ØËµ∞‰∏çÈÄö‰∫ÜÔºåÂÜçÂõûÂà∞ÂàöÊâçÁöÑÈÇ£‰∏™Â≤îË∑ØÂè£ÔºåÈÄâÂè¶‰∏ÄÊù°Ë∑ØËµ∞ÔºåÂÖ∑‰ΩìÂèØ‰ª•ÁúãÈ¢òÁõÆÈáåÁöÑÈ´òËµûÈ¢òËß£ÂõûÊ∫ØÁÆóÊ≥ïÂÖ•Èó®Á∫ßËØ¶Ëß£ + ÁªÉ‰π†ÔºàÊåÅÁª≠Êõ¥Êñ∞ÔºâÔºåÁ°ÆÂÆûËÆ≤ÁöÑ‰∏çÈîô„ÄÇ Ê≥®ÔºöËøô‰∏™ÊòØÊúÄÁÆÄÂçïÁöÑÂõûÊ∫ØÈ¢òÁõÆÔºå‰∏ÄÂÆöÁÜüÁªÉÊéåÊè°ÔºõËØ•ÁßçÁ±ªÂûãÈ¢òÁõÆÁöÑÂÖ≥ÈîÆÂú®‰∫éÂØπÊØè‰∏™Êï∞Â≠óËøõË°åË£ÖËøõÂéª„ÄÅÊãøÂá∫Êù•„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718192021222324252627282930class Solution &#123; public List&lt;List&lt;Integer&gt;&gt; permute(int[] nums) &#123; List&lt;List&lt;Integer&gt;&gt; resList = new ArrayList&lt;&gt;(); int len = nums.length; boolean[] used = new boolean[len]; //ÁõÆÊ†áÊï∞ÁªÑÂ≠òÊîæÁöÑ‰ΩçÁΩÆ int index = 0; //‰∏¥Êó∂ÁªìÊûúÊï∞ÁªÑ Deque&lt;Integer&gt; curList = new ArrayDeque&lt;&gt;(); dfs(nums,used,resList,curList,index,len); return resList; &#125; public void dfs(int[] nums,boolean[] used,List&lt;List&lt;Integer&gt;&gt; resList,Deque&lt;Integer&gt; curList,int index,int len)&#123; //ËØ¥ÊòéÊï∞ÁªÑÂ∑≤ÁªèÂ°´Êª°‰∫Ü if(index==len)&#123; resList.add(new ArrayList(curList)); return; &#125; //ÊâæÂà∞‰∏Ä‰∏™Êú™Áî®ËøáÁöÑÊï∞Â≠óÔºåÊ∑ªÂä†ËøõÊï∞ÁªÑ for(int i=0;i&lt;len;i++)&#123; if(!used[i])&#123; curList.offerLast(nums[i]); used[i] = true; dfs(nums,used,resList,curList,index+1,len); curList.removeLast(); used[i] = false; &#125; &#125; &#125;&#125; 47. ÂÖ®ÊéíÂàó IIÁªôÂÆö‰∏Ä‰∏™ÂèØÂåÖÂê´ÈáçÂ§çÊï∞Â≠óÁöÑÂ∫èÂàó nums ÔºåÊåâ‰ªªÊÑèÈ°∫Â∫è ËøîÂõûÊâÄÊúâ‰∏çÈáçÂ§çÁöÑÂÖ®ÊéíÂàó„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºönums = [1,1,2] ËæìÂá∫Ôºö [[1,1,2], [1,2,1], [2,1,1]] Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºönums = [1,2,3] ËæìÂá∫Ôºö[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]] Áü•ËØÜÁÇπÔºöÂõûÊ∫Ø„ÄÅdfsÂàÜÊûêÔºöÂíå‰∏äÈÅìÈ¢òÁöÑ‰∏çÂêå‰πãÂ§ÑÂú®‰∫éÔºåËøô‰∏™Â≠òÂú®ÈáçÂ§çÊï∞Â≠óÔºåÂÖ®ÊéíÂàóÂá∫Êù•ÁöÑÁªìÊûúÂ≠òÂú®ÈáçÂ§çÁöÑÂèØËÉΩÊÄß„ÄÇÈÅøÂÖçÈáçÂ§çÁöÑÊñπÊ≥ïÂú®‰∫éÂâ™ÊûùÔºåÂç≥Âú®ÂõûÊ∫Ø‰πãÂâçÔºåÂà§Êñ≠‰∏ãÊ¨°dfsÊòØÂê¶‰∏∫ÈáçÂ§çÊÉÖÂÜµÔºåÂ¶ÇÊûúÈáçÂ§çÂàôÁªìÊùüËØ•ÂõûÊ∫ØÔºåËøõË°å‰∏ã‰∏ÄËΩÆÊü•ËØ¢ÔºåÂÖ∑‰ΩìËßÅ‰ª£Á†Å„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718192021222324252627282930class Solution &#123; public List&lt;List&lt;Integer&gt;&gt; permuteUnique(int[] nums) &#123; int len = nums.length; boolean[] used = new boolean[len]; List&lt;List&lt;Integer&gt;&gt; resList = new ArrayList&lt;&gt;(); Deque&lt;Integer&gt; curList = new ArrayDeque&lt;&gt;(); int index = 0; Arrays.sort(nums); dfs(resList,curList,used,nums,index,len); return resList; &#125; public void dfs(List&lt;List&lt;Integer&gt;&gt; resList,Deque&lt;Integer&gt; curList,boolean[] used,int[] nums,int index,int len)&#123; if(index==len)&#123; resList.add(new ArrayList(curList)); &#125; for(int i=0;i&lt;len;i++)&#123; if(used[i])&#123; continue; &#125; if(i&gt;0&amp;&amp;nums[i]==nums[i-1]&amp;&amp;!used[i-1])&#123; continue; &#125; curList.offerLast(nums[i]); used[i] = true; dfs(resList,curList,used,nums,index+1,len); used[i] = false; curList.removeLast(); &#125; &#125;&#125; 60. ÊéíÂàóÂ∫èÂàóÁªôÂá∫ÈõÜÂêà [1,2,3,‚Ä¶,n]ÔºåÂÖ∂ÊâÄÊúâÂÖÉÁ¥†ÂÖ±Êúâ n! ÁßçÊéíÂàó„ÄÇ ÊåâÂ§ßÂ∞èÈ°∫Â∫èÂàóÂá∫ÊâÄÊúâÊéíÂàóÊÉÖÂÜµÔºåÂπ∂‰∏Ä‰∏ÄÊ†áËÆ∞ÔºåÂΩì n = 3 Êó∂, ÊâÄÊúâÊéíÂàóÂ¶Ç‰∏ãÔºö ‚Äú123‚Äù ‚Äú132‚Äù ‚Äú213‚Äù ‚Äú231‚Äù ‚Äú312‚Äù ‚Äú321‚Äù ÁªôÂÆö n Âíå kÔºåËøîÂõûÁ¨¨ k ‰∏™ÊéíÂàó„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºön = 3, k = 3 ËæìÂá∫Ôºö‚Äù213‚Äù Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºön = 4, k = 9 ËæìÂá∫Ôºö‚Äù2314‚Äù Áü•ËØÜÁÇπÔºöÂõûÊ∫ØÂàÜÊûêÔºöÈÉΩÊòØÂõûÊ∫ØÁÆóÊ≥ïÔºåËøô‰∏™ÂõûÊ∫ØÁî±‰∫éÁü•ÈÅìÊòØÂì™‰∏Ä‰∏™ÁªÑÂêàÔºåÊâÄ‰ª•‰∏çÂøÖ‰∏Ä‰∏™‰∏™Êü•ÊâæÔºåÊ†πÊçÆÈ°∫Â∫èÂíåÂ∫èÂè∑Áõ¥Êé•ÊâæÂà∞ÁõÆÊ†áÁªÑÂêàÔºõ Ê†∏ÂøÉÊÄùÊÉ≥ÔºöÂ¶ÇÊûún‰∏∫3ÔºåÂÖ∂ÂÆûÊÄªÁöÑÊéíÂàóÊï∞ÊòØÂàÜ‰∏∫3ÁªÑÁöÑÔºåÊØèÁªÑÁöÑ‰∏™Êï∞‰∏∫2ÔºÅ‰∏™Ôºå‰ª•Ê≠§Á±ªÊé®ÔºàÁîª‰∏™Ê†ëÁä∂ÂõæÂ∞±Áü•ÈÅì‰∫ÜÔºâ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223242526272829303132333435363738394041424344class Solution &#123; private int[] factorial; private int n; private int k; private StringBuilder sb; public String getPermutation(int n, int k) &#123; this.n = n; this.k = k; //factorial[i]:iÁöÑÈò∂‰πò calculate(n); sb = new StringBuilder(); boolean[] used = new boolean[n+1]; dfs(0,used); return sb.toString(); &#125; public void dfs(int index,boolean[] used)&#123; if(index==n)&#123; return; &#125; int count = factorial[n-index-1]; for(int i=1;i&lt;=n;i++)&#123; if(used[i])&#123; continue; &#125; if(k&gt;count)&#123; k -= count; continue; &#125; sb.append(i); used[i] = true; dfs(index+1,used); return; &#125; &#125; //Áî®‰∫éËÆ°ÁÆóÈò∂‰πò private void calculate(int n)&#123; factorial = new int[n+1]; factorial[0] = 1; for(int i=1;i&lt;=n;i++)&#123; factorial[i] = factorial[i-1]*i; &#125; &#125;&#125; 31. ‰∏ã‰∏Ä‰∏™ÊéíÂàóÂÆûÁé∞Ëé∑Âèñ ‰∏ã‰∏Ä‰∏™ÊéíÂàó ÁöÑÂáΩÊï∞ÔºåÁÆóÊ≥ïÈúÄË¶ÅÂ∞ÜÁªôÂÆöÊï∞Â≠óÂ∫èÂàóÈáçÊñ∞ÊéíÂàóÊàêÂ≠óÂÖ∏Â∫è‰∏≠‰∏ã‰∏Ä‰∏™Êõ¥Â§ßÁöÑÊéíÂàó„ÄÇ Â¶ÇÊûú‰∏çÂ≠òÂú®‰∏ã‰∏Ä‰∏™Êõ¥Â§ßÁöÑÊéíÂàóÔºåÂàôÂ∞ÜÊï∞Â≠óÈáçÊñ∞ÊéíÂàóÊàêÊúÄÂ∞èÁöÑÊéíÂàóÔºàÂç≥ÂçáÂ∫èÊéíÂàóÔºâ„ÄÇ ÂøÖÈ°ª ÂéüÂú∞ ‰øÆÊîπÔºåÂè™ÂÖÅËÆ∏‰ΩøÁî®È¢ùÂ§ñÂ∏∏Êï∞Á©∫Èó¥„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºönums = [1,2,3] ËæìÂá∫Ôºö[1,3,2] Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºönums = [3,2,1] ËæìÂá∫Ôºö[1,2,3] Áü•ËØÜÁÇπÔºöÊï∞ÁªÑÂàÜÊûêÔºöËøô‰∏™ÂèØÊúâÊÑèÊÄù‰∫Ü„ÄÇ‰∏ã‰∏Ä‰∏™Â≠óÂÖ∏Â∫èÊéíÂàóÔºåÈÇ£Â∞±ÊòØ‰∏ã‰∏Ä‰∏™Êõ¥Â§ßÁöÑÂÄºÔºåÂØπÊï∞ÁªÑ‰ªéÂêéÂæÄÂâçÔºåÊâæÂà∞Á¨¨‰∏Ä‰∏™Áõ∏ÈÇªÁöÑÂçáÂ∫èÂÖÉÁ¥†ÂØπÔºà‰ΩéËäÇÁÇπÔºåÈ´òËäÇÁÇπÔºâÔºõÁÑ∂Âêé‰ªéÈ´òËäÇÁÇπÂºÄÂßã‰∏ÄÁõ¥Âà∞Êú´Â∞æÂ∞ÜËøô‰∫õËäÇÁÇπËøõË°åÂçáÂ∫èÊéíÂ∫èÔºõÊé•ÁùÄÔºåÂú®Ëøô‰∫õÂçáÂ∫èÊéíÂ∫èÁöÑÂÖÉÁ¥†ÈáåÈù¢ÔºåÊâæÂà∞Á¨¨‰∏Ä‰∏™Â§ß‰∫é‰ΩéËäÇÁÇπÁöÑÂÖÉÁ¥†ÔºåÂíå‰ΩéËäÇÁÇπËøõË°å‰∫§Êç¢Âç≥ÂèØ„ÄÇÊ≥®ÊÑèÔºåÊàë‰ª¨ÁöÑÊü•ÊâæÊòØÂü∫‰∫éÊï∞ÁªÑÂÜÖÂ≠òÂú®ÂçáÂ∫èÂØπÔºåÂ¶ÇÊûúÊâÄÊúâÂÖÉÁ¥†‰∏∫ÈôçÂ∫èÊéíÂàóÔºåÈÇ£ËÇØÂÆöÂ∞±‰∏çËÉΩÁî®‰∫ÜÔºåËøôÊòØ‰∏™‰∏™‰æãÔºåÊàë‰ª¨Áõ¥Êé•ËøîÂõûÂ∞ÜÊï∞ÁªÑÂÖÉÁ¥†ÂÖ®ÈÉ®ÈáçÊéíÂç≥ÂèØ„ÄÇËøô‰∏™È¢òËß£‰πü‰∏çÈîôÔºö‰∏ã‰∏Ä‰∏™ÊéíÂàóÁÆóÊ≥ïËØ¶Ëß£ÔºöÊÄùË∑Ø+Êé®ÂØº+Ê≠•È™§ÔºåÁúã‰∏çÊáÇÁÆóÊàëËæìÔºÅ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920class Solution &#123; public void nextPermutation(int[] nums) &#123; int len = nums.length; for(int i=len-1;i&gt;0;i--)&#123; if(nums[i]&gt;nums[i-1])&#123; Arrays.sort(nums,i,len); for(int j=i;j&lt;len;j++)&#123; if(nums[j]&gt;nums[i-1])&#123; int tmp = nums[j]; nums[j] = nums[i-1]; nums[i-1] = tmp; return; &#125; &#125; &#125; &#125; Arrays.sort(nums); return; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ÂõûÊ∫Ø","slug":"ÂõûÊ∫Ø","permalink":"http://example.com/tags/%E5%9B%9E%E6%BA%AF/"}]},{"title":"leetcode-ÂõæÔºöËäÇÁÇπ‰πãÈó¥ÁöÑÊúÄÂ∞èÂÄº","slug":"leetcode-ÂõæÔºöËäÇÁÇπÈó¥ÁöÑÊúÄÂ∞èÂÄº","date":"2021-08-23T16:00:00.000Z","updated":"2021-08-25T02:46:03.245Z","comments":true,"path":"2021/08/24/leetcode-ÂõæÔºöËäÇÁÇπÈó¥ÁöÑÊúÄÂ∞èÂÄº/","link":"","permalink":"http://example.com/2021/08/24/leetcode-%E5%9B%BE%EF%BC%9A%E8%8A%82%E7%82%B9%E9%97%B4%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC/","excerpt":"","text":"787. K Á´ô‰∏≠ËΩ¨ÂÜÖÊúÄ‰æøÂÆúÁöÑËà™Áè≠Êúâ n ‰∏™ÂüéÂ∏ÇÈÄöËøá‰∏Ä‰∫õËà™Áè≠ËøûÊé•„ÄÇÁªô‰Ω†‰∏Ä‰∏™Êï∞ÁªÑ flights ÔºåÂÖ∂‰∏≠ flights[i] = [fromi, toi, pricei] ÔºåË°®Á§∫ËØ•Ëà™Áè≠ÈÉΩ‰ªéÂüéÂ∏Ç fromi ÂºÄÂßãÔºåÊäµËæætoi Ëä±Ë¥π pricei„ÄÇ Áé∞Âú®ÁªôÂÆöÊâÄÊúâÁöÑÂüéÂ∏ÇÂíåËà™Áè≠Ôºå‰ª•ÂèäÂá∫ÂèëÂüéÂ∏Ç src ÂíåÁõÆÁöÑÂú∞ dstÔºå‰Ω†ÁöÑ‰ªªÂä°ÊòØÊâæÂà∞Âá∫‰∏ÄÊù°ÊúÄÂ§öÁªèËøá k Á´ô‰∏≠ËΩ¨ÁöÑË∑ØÁ∫øÔºå‰ΩøÂæó‰ªé src Âà∞ dst ÁöÑ ‰ª∑Ê†ºÊúÄ‰æøÂÆú ÔºåÂπ∂ËøîÂõûËØ•‰ª∑Ê†º„ÄÇ Â¶ÇÊûú‰∏çÂ≠òÂú®ËøôÊ†∑ÁöÑË∑ØÁ∫øÔºåÂàôËæìÂá∫ -1„ÄÇ ÊèêÁ§∫Ôºö 1 &lt;= n &lt;= 100 0 &lt;= flights.length &lt;= (n * (n - 1) / 2) flights[i].length == 3 0 &lt;= fromi, toi &lt; n fromi != toi 1 &lt;= pricei &lt;= 104 Ëà™Áè≠Ê≤°ÊúâÈáçÂ§çÔºå‰∏î‰∏çÂ≠òÂú®Ëá™ÁéØ 0 &lt;= src, dst, k &lt; n src != dst Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàíÂàÜÊûêÔºöÂõ†‰∏∫Ë¶ÅÊ±ÇÊòØÊúÄÂ§öÁªèËøákÁ´ô‰∏≠ËΩ¨Ôºå‰πüÂ∞±ÊòØËØ¥ÊúÄÂ§öÁªèËøáK+1‰∏™Á´ôÔºõÂèØ‰ª•ÂØπÁªèËøáÁöÑÁ´ôÊï∞ÈáèÂíåÊ≠§Êó∂ËÉΩÂà∞ËææÁõÆÁöÑÂú∞ÁöÑËä±Ë¥πËøõË°åÂä®ÊÄÅËßÑÂàíÔºõÁî±‰∫éÈ¢òÁõÆË¶ÅÊ±ÇÊó†Á¨¶ÂêàÊù°‰ª∂Êó∂ËøîÂõû-1ÔºåÊïÖÈúÄË¶Å‰∫ãÂÖàÂØπËøîÂõûÁªìÊûúËµã‰∏Ä‰∏™‰∏çÂèØËÉΩÁöÑÂÄº ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122class Solution &#123; public int findCheapestPrice(int n, int[][] flights, int src, int dst, int k) &#123; //final int INF = 10000*101+1; final int INF = Integer.MAX_VALUE/2; int[][] dp = new int[k+2][n];//dp[i][j]:‰πòÊê≠iÊ¨°Ëà™Áè≠ÔºåÂà∞ËææÂüéÂ∏ÇjÁöÑËä±Ë¥π for(int[] array:dp)&#123; Arrays.fill(array,INF); &#125; dp[0][src] = 0; for(int i=1;i&lt;=k+1;i++)&#123; for(int[] flight:flights)&#123; dp[i][flight[1]] = Math.min(dp[i-1][flight[0]]+flight[2],dp[i][flight[1]]); &#125; &#125; int min = INF; for(int i=1;i&lt;=k+1;i++)&#123; min = Math.min(min,dp[i][dst]); &#125; return min==INF?-1:min; &#125;&#125; 797. ÊâÄÊúâÂèØËÉΩÁöÑË∑ØÂæÑÁªô‰Ω†‰∏Ä‰∏™Êúâ n ‰∏™ËäÇÁÇπÁöÑ ÊúâÂêëÊó†ÁéØÂõæÔºàDAGÔºâÔºåËØ∑‰Ω†ÊâæÂá∫ÊâÄÊúâ‰ªéËäÇÁÇπ 0 Âà∞ËäÇÁÇπ n-1 ÁöÑË∑ØÂæÑÂπ∂ËæìÂá∫Ôºà‰∏çË¶ÅÊ±ÇÊåâÁâπÂÆöÈ°∫Â∫èÔºâ ‰∫åÁª¥Êï∞ÁªÑÁöÑÁ¨¨ i ‰∏™Êï∞ÁªÑ‰∏≠ÁöÑÂçïÂÖÉÈÉΩË°®Á§∫ÊúâÂêëÂõæ‰∏≠ i Âè∑ËäÇÁÇπÊâÄËÉΩÂà∞ËææÁöÑ‰∏ã‰∏Ä‰∫õËäÇÁÇπÔºåÁ©∫Â∞±ÊòØÊ≤°Êúâ‰∏ã‰∏Ä‰∏™ÁªìÁÇπ‰∫Ü„ÄÇ ËØëËÄÖÊ≥®ÔºöÊúâÂêëÂõæÊòØÊúâÊñπÂêëÁöÑÔºåÂç≥ËßÑÂÆö‰∫Ü a‚Üíb ‰Ω†Â∞±‰∏çËÉΩ‰ªé b‚Üía „ÄÇ Áü•ËØÜÁÇπÔºöÂõûÊ∫Ø„ÄÅdfsÂàÜÊûêÔºöËøô‰∏™È¢òÁõÆÂæàÁÆÄÂçïÔºåÊâæÂà∞‰ªé0Âà∞Êú´Â∞æËäÇÁÇπÁöÑË∑ØÂæÑÔºåÂèØÈááÁî®dfsËøõË°åÊü•ÊâæÔºåÂπ∂ÈúÄË¶ÅÈááÁî®ÂõûÊ∫ØÂØπÊØè‰∏™ÂèØËÉΩ‰ºöÁªèËøáÁöÑÊØè‰∏™ËäÇÁÇπËøõË°åÊü•ÊâæÔºõÂÖ∑‰ΩìÊÄùË∑ØÊòØÔºöÂõ†‰∏∫‰ªé0ÂºÄÂßãÔºåÊâÄ‰ª•‰ªé0ÂºÄÂßãÂØπÁ¨¨‰∏Ä‰∏™Êï∞ÁªÑÂÜÖÁöÑÊØè‰∏™Êï∞Â≠óËøõË°åÈÅçÂéÜÔºåÂ∞ÜÂΩìÂâçÂÖÉÁ¥†Ê∑ªÂä†Ëøõ‰∏¥Êó∂ÈòüÂàóÈáåÔºåÂπ∂ÂØπËØ•ÂÖÉÁ¥†ÂèØÂà∞ËææÁöÑËäÇÁÇπËøõË°åÊ∑±Â∫¶‰ºòÂÖàÈÅçÂéÜÔºåËã•ÂèØÂà∞ËææÁªàÁÇπÔºåÂàôÂ∞ÜËØ•ÈòüÂàóÊ∑ªÂä†ËøõÁªìÊûúÈòüÂàóÔºåÂê¶ÂàôÁªßÁª≠dfsÁõ¥Âà∞ËØ•ËäÇÁÇπÊó†Ë∑ØÂèØËµ∞„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718192021222324252627class Solution &#123; public List&lt;List&lt;Integer&gt;&gt; allPathsSourceTarget(int[][] graph) &#123; List&lt;List&lt;Integer&gt;&gt; resLists = new ArrayList&lt;&gt;(); int n = graph.length; int end = n-1; Deque&lt;Integer&gt; curList = new ArrayDeque&lt;&gt;(); dfs(graph,curList, resLists, 0, end); return resLists; &#125; private void dfs(int[][] graph, Deque&lt;Integer&gt; curList, List&lt;List&lt;Integer&gt;&gt; resLists, int num, int end) &#123; if(num==end)&#123; curList.offerLast(num); resLists.add(new ArrayList&lt;&gt;(curList)); curList.removeLast(); return; &#125; if(graph[num].length==0)&#123; return; &#125; curList.offerLast(num); for(int number:graph[num])&#123; dfs(graph, curList, resLists, number, end); &#125; curList.removeLast(); &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Âõæ","slug":"Âõæ","permalink":"http://example.com/tags/%E5%9B%BE/"}]},{"title":"leetcode-ÈÄÉËÑ±ËÄÖ","slug":"leetcode-ÈÄÉËÑ±ËÄÖ","date":"2021-08-21T16:00:00.000Z","updated":"2021-08-22T03:06:10.826Z","comments":true,"path":"2021/08/22/leetcode-ÈÄÉËÑ±ËÄÖ/","link":"","permalink":"http://example.com/2021/08/22/leetcode-%E9%80%83%E8%84%B1%E8%80%85/","excerpt":"","text":"789. ÈÄÉËÑ±ÈòªÁ¢çËÄÖ‰Ω†Âú®ËøõË°å‰∏Ä‰∏™ÁÆÄÂåñÁâàÁöÑÂêÉË±Ü‰∫∫Ê∏∏Êàè„ÄÇ‰Ω†‰ªé [0, 0] ÁÇπÂºÄÂßãÂá∫ÂèëÔºå‰Ω†ÁöÑÁõÆÁöÑÂú∞ÊòØ target = [xtarget, ytarget] „ÄÇÂú∞Âõæ‰∏äÊúâ‰∏Ä‰∫õÈòªÁ¢çËÄÖÔºå‰ª•Êï∞ÁªÑ ghosts ÁªôÂá∫ÔºåÁ¨¨ i ‰∏™ÈòªÁ¢çËÄÖ‰ªé ghosts[i] = [xi, yi] Âá∫Âèë„ÄÇÊâÄÊúâËæìÂÖ•Âùá‰∏∫ Êï¥Êï∞ÂùêÊ†á „ÄÇ ÊØè‰∏ÄÂõûÂêàÔºå‰Ω†ÂíåÈòªÁ¢çËÄÖ‰ª¨ÂèØ‰ª•ÂêåÊó∂Âêë‰∏úÔºåË•øÔºåÂçóÔºåÂåóÂõõ‰∏™ÊñπÂêëÁßªÂä®ÔºåÊØèÊ¨°ÂèØ‰ª•ÁßªÂä®Âà∞Ë∑ùÁ¶ªÂéü‰ΩçÁΩÆ 1 ‰∏™Âçï‰Ωç ÁöÑÊñ∞‰ΩçÁΩÆ„ÄÇÂΩìÁÑ∂Ôºå‰πüÂèØ‰ª•ÈÄâÊã© ‰∏çÂä® „ÄÇÊâÄÊúâÂä®‰Ωú ÂêåÊó∂ ÂèëÁîü„ÄÇ Â¶ÇÊûú‰Ω†ÂèØ‰ª•Âú®‰ªª‰ΩïÈòªÁ¢çËÄÖÊäì‰Ωè‰Ω† ‰πãÂâç Âà∞ËææÁõÆÁöÑÂú∞ÔºàÈòªÁ¢çËÄÖÂèØ‰ª•ÈááÂèñ‰ªªÊÑèË°åÂä®ÊñπÂºèÔºâÔºåÂàôË¢´ËßÜ‰∏∫ÈÄÉËÑ±ÊàêÂäü„ÄÇÂ¶ÇÊûú‰Ω†ÂíåÈòªÁ¢çËÄÖÂêåÊó∂Âà∞Ëææ‰∫Ü‰∏Ä‰∏™‰ΩçÁΩÆÔºàÂåÖÊã¨ÁõÆÁöÑÂú∞ÔºâÈÉΩ‰∏çÁÆóÊòØÈÄÉËÑ±ÊàêÂäü„ÄÇ Âè™ÊúâÂú®‰Ω†ÊúâÂèØËÉΩÊàêÂäüÈÄÉËÑ±Êó∂ÔºåËæìÂá∫ true ÔºõÂê¶ÂàôÔºåËæìÂá∫ false „ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºöghosts = [[1,0],[0,3]], target = [0,1] ËæìÂá∫Ôºötrue Ëß£ÈáäÔºö‰Ω†ÂèØ‰ª•Áõ¥Êé•‰∏ÄÊ≠•Âà∞ËææÁõÆÁöÑÂú∞ (0,1) ÔºåÂú® (1, 0) ÊàñËÄÖ (0, 3) ‰ΩçÁΩÆÁöÑÈòªÁ¢çËÄÖÈÉΩ‰∏çÂèØËÉΩÊäì‰Ωè‰Ω†„ÄÇ Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºöghosts = [[1,0]], target = [2,0] ËæìÂá∫Ôºöfalse Ëß£ÈáäÔºö‰Ω†ÈúÄË¶ÅËµ∞Âà∞‰Ωç‰∫é (2, 0) ÁöÑÁõÆÁöÑÂú∞Ôºå‰ΩÜÊòØÂú® (1, 0) ÁöÑÈòªÁ¢çËÄÖ‰Ωç‰∫é‰Ω†ÂíåÁõÆÁöÑÂú∞‰πãÈó¥„ÄÇ Á§∫‰æã 3Ôºö ËæìÂÖ•Ôºöghosts = [[2,0]], target = [1,0] ËæìÂá∫Ôºöfalse Ëß£ÈáäÔºöÈòªÁ¢çËÄÖÂèØ‰ª•Âíå‰Ω†ÂêåÊó∂ËææÂà∞ÁõÆÁöÑÂú∞„ÄÇ Á§∫‰æã 4Ôºö ËæìÂÖ•Ôºöghosts = [[5,0],[-10,-2],[0,-5],[-2,-2],[-7,1]], target = [7,7] ËæìÂá∫Ôºöfalse Á§∫‰æã 5Ôºö ËæìÂÖ•Ôºöghosts = [[-1,0],[0,1],[-1,0],[0,1],[-1,0]], target = [0,0] ËæìÂá∫Ôºötrue ÊèêÁ§∫Ôºö 1 &lt;= ghosts.length &lt;= 100 ghosts[i].length == 2 -104 &lt;= xi, yi &lt;= 104 Âêå‰∏Ä‰ΩçÁΩÆÂèØËÉΩÊúâ Â§ö‰∏™ÈòªÁ¢çËÄÖ „ÄÇ target.length == 2 -104 &lt;= xtarget, ytarget &lt;= 104 Áü•ËØÜÁÇπÔºöÊï∞ÁªÑÂàÜÊûêÔºöÊÉ≥Ë¶ÅÊàêÂäüÈÄÉËÑ±ÔºåË¶Å‰øùËØÅËá™Ë∫´ÂíåÁõÆÁöÑÂú∞ÁöÑÊõºÂìàÈ°øË∑ùÁ¶ªÂ∞è‰∫é‰ªª‰Ωï‰∏Ä‰∏™ÈòªÁ¢çËÄÖÂíåÁõÆÁöÑÂú∞ÁöÑÊõºÂìàÈ°øË∑ùÁ¶ªÔºõÊïÖÂÅö‰∏Ä‰∏™ÈÅçÂéÜÂç≥ÂèØ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516class Solution &#123; public boolean escapeGhosts(int[][] ghosts, int[] target) &#123; int[] source = &#123;0,0&#125;; int distance = manhattanceDistance(source,target); for(int[] ghost:ghosts)&#123; int ghostDistance = manhattanceDistance(ghost,target); if(ghostDistance&lt;=distance)&#123; return false; &#125; &#125; return true; &#125; public int manhattanceDistance(int[] source,int[] target)&#123; return Math.abs(source[0]-target[0])+Math.abs(source[1]-target[1]); &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Êï∞ÁªÑ","slug":"Êï∞ÁªÑ","permalink":"http://example.com/tags/%E6%95%B0%E7%BB%84/"}]},{"title":"leetcode-ÂçïËØçÊãÜÂàÜ","slug":"leetcode-ÂçïËØçÊãÜÂàÜ","date":"2021-08-20T16:00:00.000Z","updated":"2021-08-21T08:11:09.679Z","comments":true,"path":"2021/08/21/leetcode-ÂçïËØçÊãÜÂàÜ/","link":"","permalink":"http://example.com/2021/08/21/leetcode-%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86/","excerpt":"","text":"139. ÂçïËØçÊãÜÂàÜÁªôÂÆö‰∏Ä‰∏™ÈùûÁ©∫Â≠óÁ¨¶‰∏≤ s Âíå‰∏Ä‰∏™ÂåÖÂê´ÈùûÁ©∫ÂçïËØçÁöÑÂàóË°® wordDictÔºåÂà§ÂÆö s ÊòØÂê¶ÂèØ‰ª•Ë¢´Á©∫Ê†ºÊãÜÂàÜ‰∏∫‰∏Ä‰∏™ÊàñÂ§ö‰∏™Âú®Â≠óÂÖ∏‰∏≠Âá∫Áé∞ÁöÑÂçïËØç„ÄÇ ËØ¥ÊòéÔºö ÊãÜÂàÜÊó∂ÂèØ‰ª•ÈáçÂ§ç‰ΩøÁî®Â≠óÂÖ∏‰∏≠ÁöÑÂçïËØç„ÄÇ ‰Ω†ÂèØ‰ª•ÂÅáËÆæÂ≠óÂÖ∏‰∏≠Ê≤°ÊúâÈáçÂ§çÁöÑÂçïËØç„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•: s = ‚Äúleetcode‚Äù, wordDict = [‚Äúleet‚Äù, ‚Äúcode‚Äù] ËæìÂá∫: true Ëß£Èáä: ËøîÂõû true Âõ†‰∏∫ ‚Äúleetcode‚Äù ÂèØ‰ª•Ë¢´ÊãÜÂàÜÊàê ‚Äúleet code‚Äù„ÄÇ Á§∫‰æã 2Ôºö ËæìÂÖ•: s = ‚Äúapplepenapple‚Äù, wordDict = [‚Äúapple‚Äù, ‚Äúpen‚Äù] ËæìÂá∫: true Ëß£Èáä: ËøîÂõû true Âõ†‰∏∫ ‚Äúapplepenapple‚Äù ÂèØ‰ª•Ë¢´ÊãÜÂàÜÊàê ‚Äúapple pen apple‚Äù„ÄÇ Ê≥®ÊÑè‰Ω†ÂèØ‰ª•ÈáçÂ§ç‰ΩøÁî®Â≠óÂÖ∏‰∏≠ÁöÑÂçïËØç„ÄÇ Á§∫‰æã 3Ôºö ËæìÂÖ•: s = ‚Äúcatsandog‚Äù, wordDict = [‚Äúcats‚Äù, ‚Äúdog‚Äù, ‚Äúsand‚Äù, ‚Äúand‚Äù, ‚Äúcat‚Äù] ËæìÂá∫: false Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàíÂàÜÊûêÔºö‰ª£Á†ÅÂæàÁÆÄÊ¥ÅÔºå‰∏ÄÁúãÂ∞±ÊáÇ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819class Solution &#123; public boolean wordBreak(String s, List&lt;String&gt; wordDict) &#123; int len = s.length(); boolean[] dp = new boolean[len+1]; Arrays.fill(dp,false); dp[0] = true; for(int i=0;i&lt;len;i++)&#123; if(!dp[i])&#123; continue; &#125; for(String word:wordDict)&#123; if(i+word.length()&lt;=len&amp;&amp;s.startsWith(word,i))&#123; dp[i+word.length()] = true; &#125; &#125; &#125; return dp[len]; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"}]},{"title":"leetcode-ÂéãÁº©Â≠óÁ¨¶‰∏≤","slug":"leetcode-ÂéãÁº©Â≠óÁ¨¶‰∏≤","date":"2021-08-20T16:00:00.000Z","updated":"2021-08-21T02:48:29.905Z","comments":true,"path":"2021/08/21/leetcode-ÂéãÁº©Â≠óÁ¨¶‰∏≤/","link":"","permalink":"http://example.com/2021/08/21/leetcode-%E5%8E%8B%E7%BC%A9%E5%AD%97%E7%AC%A6%E4%B8%B2/","excerpt":"","text":"443. ÂéãÁº©Â≠óÁ¨¶‰∏≤ÁªôÂÆö‰∏ÄÁªÑÂ≠óÁ¨¶Ôºå‰ΩøÁî®ÂéüÂú∞ÁÆóÊ≥ïÂ∞ÜÂÖ∂ÂéãÁº©„ÄÇ ÂéãÁº©ÂêéÁöÑÈïøÂ∫¶ÂøÖÈ°ªÂßãÁªàÂ∞è‰∫éÊàñÁ≠â‰∫éÂéüÊï∞ÁªÑÈïøÂ∫¶„ÄÇ Êï∞ÁªÑÁöÑÊØè‰∏™ÂÖÉÁ¥†Â∫îËØ•ÊòØÈïøÂ∫¶‰∏∫1 ÁöÑÂ≠óÁ¨¶Ôºà‰∏çÊòØ int Êï¥Êï∞Á±ªÂûãÔºâ„ÄÇ Âú®ÂÆåÊàêÂéüÂú∞‰øÆÊîπËæìÂÖ•Êï∞ÁªÑÂêéÔºåËøîÂõûÊï∞ÁªÑÁöÑÊñ∞ÈïøÂ∫¶„ÄÇ ËøõÈò∂Ôºö ‰Ω†ËÉΩÂê¶‰ªÖ‰ΩøÁî®O(1) Á©∫Èó¥Ëß£ÂÜ≥ÈóÆÈ¢òÔºü Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºö [‚Äúa‚Äù,‚Äùa‚Äù,‚Äùb‚Äù,‚Äùb‚Äù,‚Äùc‚Äù,‚Äùc‚Äù,‚Äùc‚Äù] ËæìÂá∫Ôºö ËøîÂõû 6 ÔºåËæìÂÖ•Êï∞ÁªÑÁöÑÂâç 6 ‰∏™Â≠óÁ¨¶Â∫îËØ•ÊòØÔºö[‚Äúa‚Äù,‚Äù2‚Äù,‚Äùb‚Äù,‚Äù2‚Äù,‚Äùc‚Äù,‚Äù3‚Äù] ËØ¥ÊòéÔºö ‚Äúaa‚Äù Ë¢´ ‚Äúa2‚Äù Êõø‰ª£„ÄÇ‚Äùbb‚Äù Ë¢´ ‚Äúb2‚Äù Êõø‰ª£„ÄÇ‚Äùccc‚Äù Ë¢´ ‚Äúc3‚Äù Êõø‰ª£„ÄÇ Áü•ËØÜÁÇπÔºöÂ≠óÁ¨¶‰∏≤ÂàÜÊûêÔºöÂèà‰∏Ä‰∏™ÂéüÂú∞‰øÆÊîπÔºåÂÅö‰∫ÜÂ•ΩÂá†ÈÅìÂéüÂú∞‰øÆÊîπÁöÑÈ¢òÁõÆ‰∫ÜÔºåÊÑüËßâÂéüÂú∞‰øÆÊîπÁöÑÂÖ≥ÈîÆÂú®‰∫éÂØπ‰∏ãÊ†áÁöÑÊéåÊéßÔºå‰Ω†ÁúãËøô‰∏™„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718class Solution &#123; public int compress(char[] chars) &#123; int write = 0,anchor = 0; int len = chars.length; for(int read = 0;read&lt;len;read++)&#123; if(read+1==len||chars[read]!=chars[read+1])&#123;//‰∏çÁõ∏Á≠âÊó∂ËøõË°åÈáçÂÜô chars[write++] = chars[anchor]; if(read&gt;anchor)&#123; for(char c:(&quot;&quot;+(read-anchor+1)).toCharArray())&#123; chars[write++]=c; &#125; &#125; anchor = read+1; &#125; &#125; return write; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ÂèåÊåáÈíà","slug":"ÂèåÊåáÈíà","permalink":"http://example.com/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"}]},{"title":"leetcode-NÁöáÂêé","slug":"leetcode-NÁöáÂêé","date":"2021-08-19T16:00:00.000Z","updated":"2021-08-30T06:47:40.745Z","comments":true,"path":"2021/08/20/leetcode-NÁöáÂêé/","link":"","permalink":"http://example.com/2021/08/20/leetcode-N%E7%9A%87%E5%90%8E/","excerpt":"","text":"51. N ÁöáÂêén ÁöáÂêéÈóÆÈ¢ò Á†îÁ©∂ÁöÑÊòØÂ¶Ç‰ΩïÂ∞Ü n ‰∏™ÁöáÂêéÊîæÁΩÆÂú® n√ón ÁöÑÊ£ãÁõò‰∏äÔºåÂπ∂‰∏î‰ΩøÁöáÂêéÂΩºÊ≠§‰πãÈó¥‰∏çËÉΩÁõ∏‰∫íÊîªÂáª„ÄÇ Áªô‰Ω†‰∏Ä‰∏™Êï¥Êï∞ n ÔºåËøîÂõûÊâÄÊúâ‰∏çÂêåÁöÑ n ÁöáÂêéÈóÆÈ¢ò ÁöÑËß£ÂÜ≥ÊñπÊ°à„ÄÇ ÊØè‰∏ÄÁßçËß£Ê≥ïÂåÖÂê´‰∏Ä‰∏™‰∏çÂêåÁöÑ n ÁöáÂêéÈóÆÈ¢ò ÁöÑÊ£ãÂ≠êÊîæÁΩÆÊñπÊ°àÔºåËØ•ÊñπÊ°à‰∏≠ ‚ÄòQ‚Äô Âíå ‚Äò.‚Äô ÂàÜÂà´‰ª£Ë°®‰∫ÜÁöáÂêéÂíåÁ©∫‰Ωç„ÄÇ Áü•ËØÜÁÇπÔºöÂõûÊ∫ØÂàÜÊûêÔºöÁöáÂêé‰πãÈó¥‰∏çÂèØ‰Ωç‰∫éÂêå‰∏ÄË°åÊàñËÄÖÂêå‰∏ÄÂàóÊàñËÄÖÊñúÁéá‰∏∫1/-1ÁöÑÊñúÁ∫ø‰πã‰∏äÔºåÊàë‰ª¨ÊåâÁÖßÊØèË°åËøõË°åÈÅçÂéÜÔºåÊïÖÈúÄË¶ÅÂØπÂΩìÂâçÂàó„ÄÅÂΩìÂâç-1ÊñúÁ∫ø„ÄÅÂΩìÂâç1ÊñúÁ∫øËøõË°åÊü•ËØ¢„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859class Solution &#123; public List&lt;List&lt;String&gt;&gt; solveNQueens(int n) &#123; List&lt;List&lt;String&gt;&gt; res = new ArrayList&lt;&gt;(); Set&lt;Integer&gt; diagonals1 = new HashSet&lt;&gt;(); Set&lt;Integer&gt; diagonals2 = new HashSet&lt;&gt;(); Set&lt;Integer&gt; columns = new HashSet&lt;&gt;(); int[] queens = new int[n]; //‰∏∫‰ªÄ‰πàË¶ÅÂ°´ÂÖÖ‰∏∫-1------Âõ†‰∏∫ÂèØËÉΩÂΩìÂâç‰ΩçÁΩÆÂú®Ëøô‰∏ÄËΩÆÁöÑÊó∂ÂÄôÁî®Âà∞‰∫Ü‰ΩÜ‰∏ã‰∏ÄËΩÆÊ≤°Áî®Âà∞ÔºåÁî±‰∫éÊ≤°ÈáçÁΩÆ‰∏∫-1ÔºåÊâÄ‰ª•‰∏ã‰∏ÄËΩÆÊâî‰øùÊåÅ‰πãÂâçÁöÑÂ§ßÂ∞è Arrays.fill(queens, -1); backtrack(res,columns,diagonals1,diagonals2,n,0,queens); return res; &#125; private void backtrack(List&lt;List&lt;String&gt;&gt; res, Set&lt;Integer&gt; columns, Set&lt;Integer&gt; diagonals1, Set&lt;Integer&gt; diagonals2, int n, int row, int[] queens) &#123; if(row==n)&#123; res.add(generate(queens,n)); &#125;else&#123; for(int col=0;col&lt;n;col++)&#123; //Âà§Êñ≠ÊòØÂê¶Âú®Âêå‰∏ÄÂàó if(columns.contains(col))&#123; continue; &#125; //Âà§Êñ≠ÊòØÂê¶Âú®ÊñúÁéá‰∏∫1ÁöÑÊñúÁ∫ø‰∏ä int diagonal1 = row-col; if(diagonals1.contains(diagonal1))&#123; continue; &#125; //Âà§Êñ≠ÊòØÂê¶Âú®ÊñúÁéá‰∏∫-1ÁöÑÊñúÁ∫ø‰∏ä int diagonal2 = row+col; if(diagonals2.contains(diagonal2))&#123; continue; &#125; //Ëøô‰∏™‰ΩçÁΩÆÊª°Ë∂≥Êù°‰ª∂ queens[row] = col; columns.add(col); diagonals1.add(diagonal1); diagonals2.add(diagonal2); //Âú®Ëøô‰∏™ÁÇπÂ∑≤ÁªèË¢´ÊîæÁΩÆ‰∫ÜÁöáÂêéÁöÑÂü∫Á°Ä‰∏äËøõË°åÂõûÊ∫Ø backtrack(res, columns, diagonals1, diagonals2, n, row+1, queens); //ÂÜçÊ¨°ÈáçÁΩÆ‰∏∫-1 queens[row] = -1; columns.remove(col); diagonals1.remove(diagonal1); diagonals2.remove(diagonal2); &#125; &#125; &#125; private List&lt;String&gt; generate(int[] queens, int n) &#123; List&lt;String&gt; board = new ArrayList&lt;&gt;(); for(int i=0;i&lt;n;i++)&#123; char[] chars = new char[n]; Arrays.fill(chars, &#x27;.&#x27;); chars[queens[i]] = &#x27;Q&#x27;; board.add(new String(chars)); &#125; return board; &#125;&#125; 52. NÁöáÂêé IIn ÁöáÂêéÈóÆÈ¢ò Á†îÁ©∂ÁöÑÊòØÂ¶Ç‰ΩïÂ∞Ü n ‰∏™ÁöáÂêéÊîæÁΩÆÂú® n√ón ÁöÑÊ£ãÁõò‰∏äÔºåÂπ∂‰∏î‰ΩøÁöáÂêéÂΩºÊ≠§‰πãÈó¥‰∏çËÉΩÁõ∏‰∫íÊîªÂáª„ÄÇ Áªô‰Ω†‰∏Ä‰∏™Êï¥Êï∞ n ÔºåËøîÂõû n ÁöáÂêéÈóÆÈ¢ò ‰∏çÂêåÁöÑËß£ÂÜ≥ÊñπÊ°àÁöÑÊï∞Èáè„ÄÇ ÊèêÁ§∫Ôºö 1 &lt;= n &lt;= 9 ÁöáÂêéÂΩºÊ≠§‰∏çËÉΩÁõ∏‰∫íÊîªÂáªÔºå‰πüÂ∞±ÊòØËØ¥Ôºö‰ªª‰Ωï‰∏§‰∏™ÁöáÂêéÈÉΩ‰∏çËÉΩÂ§Ñ‰∫éÂêå‰∏ÄÊù°Ê®™Ë°å„ÄÅÁ∫µË°åÊàñÊñúÁ∫ø‰∏ä„ÄÇ Áü•ËØÜÁÇπÔºöÂõûÊ∫ØÂàÜÊûêÔºöÂíåNÁöáÂêéÂ∑Æ‰∏çÂ§öÔºåËøô‰∏™‰∏çÁî®ËÆ∞ÂΩïÊØè‰∏™ÊñπÂºèÔºåÂè™ÈúÄË¶ÅËÆ∞ÂΩïÊï∞ÈáèÂç≥ÂèØ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718192021222324252627282930313233343536373839404142class Solution &#123; int count = 0; public int totalNQueens(int n) &#123; Set&lt;Integer&gt; diagonals1 = new HashSet&lt;&gt;(); Set&lt;Integer&gt; diagonals2 = new HashSet&lt;&gt;(); Set&lt;Integer&gt; columns = new HashSet&lt;&gt;(); backtrack(columns,diagonals1,diagonals2,n,0); return count; &#125; private void backtrack(Set&lt;Integer&gt; columns, Set&lt;Integer&gt; diagonals1, Set&lt;Integer&gt; diagonals2,int n, int row) &#123; if(row==n)&#123; count++; &#125;else&#123; for(int col=0;col&lt;n;col++)&#123; //Âà§Êñ≠ÊòØÂê¶Âú®Âêå‰∏ÄÂàó if(columns.contains(col))&#123; continue; &#125; //Âà§Êñ≠ÊòØÂê¶Âú®ÊñúÁéá‰∏∫1ÁöÑÊñúÁ∫ø‰∏ä int diagonal1 = row-col; if(diagonals1.contains(diagonal1))&#123; continue; &#125; //Âà§Êñ≠ÊòØÂê¶Âú®ÊñúÁéá‰∏∫-1ÁöÑÊñúÁ∫ø‰∏ä int diagonal2 = row+col; if(diagonals2.contains(diagonal2))&#123; continue; &#125; //Ëøô‰∏™‰ΩçÁΩÆÊª°Ë∂≥Êù°‰ª∂ columns.add(col); diagonals1.add(diagonal1); diagonals2.add(diagonal2); //Âú®Ëøô‰∏™ÁÇπÂ∑≤ÁªèË¢´ÊîæÁΩÆ‰∫ÜÁöáÂêéÁöÑÂü∫Á°Ä‰∏äËøõË°åÂõûÊ∫Ø backtrack(columns, diagonals1, diagonals2, n, row+1); columns.remove(col); diagonals1.remove(diagonal1); diagonals2.remove(diagonal2); &#125; &#125; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ÂõûÊ∫Ø","slug":"ÂõûÊ∫Ø","permalink":"http://example.com/tags/%E5%9B%9E%E6%BA%AF/"}]},{"title":"leetcode-ÊúÄÈïøËøûÁª≠Â∫èÂàó","slug":"leetcode-ÊúÄÈïøËøûÁª≠Â∫èÂàó","date":"2021-08-19T16:00:00.000Z","updated":"2021-08-20T08:39:51.556Z","comments":true,"path":"2021/08/20/leetcode-ÊúÄÈïøËøûÁª≠Â∫èÂàó/","link":"","permalink":"http://example.com/2021/08/20/leetcode-%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/","excerpt":"","text":"128. ÊúÄÈïøËøûÁª≠Â∫èÂàóÁªôÂÆö‰∏Ä‰∏™Êú™ÊéíÂ∫èÁöÑÊï¥Êï∞Êï∞ÁªÑ nums ÔºåÊâæÂá∫Êï∞Â≠óËøûÁª≠ÁöÑÊúÄÈïøÂ∫èÂàóÔºà‰∏çË¶ÅÊ±ÇÂ∫èÂàóÂÖÉÁ¥†Âú®ÂéüÊï∞ÁªÑ‰∏≠ËøûÁª≠ÔºâÁöÑÈïøÂ∫¶„ÄÇ ËØ∑‰Ω†ËÆæËÆ°Âπ∂ÂÆûÁé∞Êó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ O(n) ÁöÑÁÆóÊ≥ïËß£ÂÜ≥Ê≠§ÈóÆÈ¢ò„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºönums = [100,4,200,1,3,2] ËæìÂá∫Ôºö4 Ëß£ÈáäÔºöÊúÄÈïøÊï∞Â≠óËøûÁª≠Â∫èÂàóÊòØ [1, 2, 3, 4]„ÄÇÂÆÉÁöÑÈïøÂ∫¶‰∏∫ 4„ÄÇ Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºönums = [0,3,7,2,5,8,4,6,0,1] ËæìÂá∫Ôºö9 ÊèêÁ§∫Ôºö 0 &lt;= nums.length &lt;= 105 -109 &lt;= nums[i] &lt;= 109 Áü•ËØÜÁÇπÔºöÊï∞ÁªÑÂàÜÊûêÔºöÁúãÈ¢òËß£ÂêßÔºå‰∫∫ÂÆ∂ÂÜôÁöÑÊå∫Â•ΩÁöÑ„ÄÇ Ê≠£Â∏∏ÊÄùË∑ØÁöÑËØùÔºåÊàë‰ª¨ÈÅçÂéÜÊØè‰∏™ÂÖÉÁ¥†ÔºåÊØîÂ¶ÇXÔºåÁúãÁúãÊòØÂê¶Â≠òÂú®X+1ÔºåX+2‚Ä¶.X+YÔºåÂèØÊòØËøôÁßçÊñπÂºèÊúÄÂùèËÉΩËææÂà∞OÔºàn2Ôºâ ‰ΩÜÊòØËÄÉËôë‰∏Ä‰∏ãÔºåÂ¶ÇÊûúXËøô‰∏™ÂÖÉÁ¥†ÁöÑÊúÄÈïøËøûÁª≠Â∫èÂàó‰∏çÊòØÊúÄÈïøÁöÑÔºåÈÇ£‰πàX+1Â∞±Êõ¥‰∏ç‰ºö‰∫ÜÔºåÊâÄ‰ª•ÂØπÊØè‰∏™ÂÖÉÁ¥†Âà§Êñ≠‰∏ãÊòØÂê¶Âê´ÊúâÊØîËØ•ÂÖÉÁ¥†Â∞è1ÁöÑÂÖÉÁ¥†Âç≥ÂèØ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920class Solution &#123; public int longestConsecutive(int[] nums) &#123; Set&lt;Integer&gt; set = new HashSet&lt;&gt;(); for(int num:nums)&#123; set.add(num); &#125; int max = 0; for(int num:nums)&#123; if(!set.contains(num-1))&#123; int curSum = 1,curNum = num; while(set.contains(curNum+1))&#123; ++curNum; ++curSum; &#125; max = Math.max(max,curSum); &#125; &#125; return max; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Êï∞ÁªÑ","slug":"Êï∞ÁªÑ","permalink":"http://example.com/tags/%E6%95%B0%E7%BB%84/"}]},{"title":"leetcode-Âπ∂Êü•ÈõÜ","slug":"leetcode-Âπ∂Êü•ÈõÜ","date":"2021-08-19T16:00:00.000Z","updated":"2021-08-21T07:37:53.465Z","comments":true,"path":"2021/08/20/leetcode-Âπ∂Êü•ÈõÜ/","link":"","permalink":"http://example.com/2021/08/20/leetcode-%E5%B9%B6%E6%9F%A5%E9%9B%86/","excerpt":"","text":"684. ÂÜó‰ΩôËøûÊé•Ê†ëÂèØ‰ª•ÁúãÊàêÊòØ‰∏Ä‰∏™ËøûÈÄö‰∏î Êó†ÁéØ ÁöÑ Êó†Âêë Âõæ„ÄÇ ÁªôÂÆöÂæÄ‰∏ÄÊ£µ n ‰∏™ËäÇÁÇπ (ËäÇÁÇπÂÄº 1ÔΩûn) ÁöÑÊ†ë‰∏≠Ê∑ªÂä†‰∏ÄÊù°ËæπÂêéÁöÑÂõæ„ÄÇÊ∑ªÂä†ÁöÑËæπÁöÑ‰∏§‰∏™È°∂ÁÇπÂåÖÂê´Âú® 1 Âà∞ n ‰∏≠Èó¥Ôºå‰∏îËøôÊù°ÈôÑÂä†ÁöÑËæπ‰∏çÂ±û‰∫éÊ†ë‰∏≠Â∑≤Â≠òÂú®ÁöÑËæπ„ÄÇÂõæÁöÑ‰ø°ÊÅØËÆ∞ÂΩï‰∫éÈïøÂ∫¶‰∏∫ n ÁöÑ‰∫åÁª¥Êï∞ÁªÑ edges Ôºåedges[i] = [ai, bi] Ë°®Á§∫Âõæ‰∏≠Âú® ai Âíå bi ‰πãÈó¥Â≠òÂú®‰∏ÄÊù°Ëæπ„ÄÇ ËØ∑ÊâæÂá∫‰∏ÄÊù°ÂèØ‰ª•Âà†ÂéªÁöÑËæπÔºåÂà†Èô§ÂêéÂèØ‰ΩøÂæóÂâ©‰ΩôÈÉ®ÂàÜÊòØ‰∏Ä‰∏™ÊúâÁùÄ n ‰∏™ËäÇÁÇπÁöÑÊ†ë„ÄÇÂ¶ÇÊûúÊúâÂ§ö‰∏™Á≠îÊ°àÔºåÂàôËøîÂõûÊï∞ÁªÑ edges ‰∏≠ÊúÄÂêéÂá∫Áé∞ÁöÑËæπ„ÄÇ ÊèêÁ§∫: n == edges.length 3 &lt;= n &lt;= 1000 edges[i].length == 2 1 &lt;= ai &lt; bi &lt;= edges.length ai != bi edges ‰∏≠Êó†ÈáçÂ§çÂÖÉÁ¥† ÁªôÂÆöÁöÑÂõæÊòØËøûÈÄöÁöÑ Áü•ËØÜÁÇπÔºöÂπ∂Êü•ÈõÜÂàÜÊûêÔºöËøô‰∏™È¢òËß£ÂÜôÁöÑÊØîËæÉÁªÜËá¥ÔºåÂª∫ËÆÆÂèÇËÄÉ‰∏ã„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718192021222324252627class Solution &#123; public int[] findRedundantConnection(int[][] edges) &#123; int nodesCount = edges.length; int[] parent = new int[nodesCount+1]; for(int i=1;i&lt;=nodesCount;i++)&#123; parent[i] = i; &#125; for(int i=0;i&lt;nodesCount;i++)&#123; int edge1 = edges[i][0],edge2 = edges[i][1]; if(find(parent,edge1)!=find(parent,edge2))&#123; union(parent,edge1,edge2); &#125;else&#123; return edges[i]; &#125; &#125; return new int[0]; &#125; public void union(int[] parent,int i,int j)&#123; parent[find(parent,i)] = find(parent,j); &#125; public int find(int[] parent ,int index)&#123; if(parent[index]!=index)&#123; parent[index] = find(parent,parent[index]); &#125; return parent[index]; &#125;&#125; 547. ÁúÅ‰ªΩÊï∞ÈáèÊúâ n ‰∏™ÂüéÂ∏ÇÔºåÂÖ∂‰∏≠‰∏Ä‰∫õÂΩºÊ≠§Áõ∏ËøûÔºåÂè¶‰∏Ä‰∫õÊ≤°ÊúâÁõ∏Ëøû„ÄÇÂ¶ÇÊûúÂüéÂ∏Ç a ‰∏éÂüéÂ∏Ç b Áõ¥Êé•Áõ∏ËøûÔºå‰∏îÂüéÂ∏Ç b ‰∏éÂüéÂ∏Ç c Áõ¥Êé•Áõ∏ËøûÔºåÈÇ£‰πàÂüéÂ∏Ç a ‰∏éÂüéÂ∏Ç c Èó¥Êé•Áõ∏Ëøû„ÄÇ ÁúÅ‰ªΩ ÊòØ‰∏ÄÁªÑÁõ¥Êé•ÊàñÈó¥Êé•Áõ∏ËøûÁöÑÂüéÂ∏ÇÔºåÁªÑÂÜÖ‰∏çÂê´ÂÖ∂‰ªñÊ≤°ÊúâÁõ∏ËøûÁöÑÂüéÂ∏Ç„ÄÇ Áªô‰Ω†‰∏Ä‰∏™ n x n ÁöÑÁü©Èòµ isConnected ÔºåÂÖ∂‰∏≠ isConnected[i][j] = 1 Ë°®Á§∫Á¨¨ i ‰∏™ÂüéÂ∏ÇÂíåÁ¨¨ j ‰∏™ÂüéÂ∏ÇÁõ¥Êé•Áõ∏ËøûÔºåËÄå isConnected[i][j] = 0 Ë°®Á§∫‰∫åËÄÖ‰∏çÁõ¥Êé•Áõ∏Ëøû„ÄÇ ËøîÂõûÁü©Èòµ‰∏≠ ÁúÅ‰ªΩ ÁöÑÊï∞Èáè„ÄÇ 1 &lt;= n &lt;= 200 n == isConnected.length n == isConnected[i].length isConnected[i][j] ‰∏∫ 1 Êàñ 0 isConnected[i][i] == 1 isConnected[i][j] == isConnected[j][i] Áü•ËØÜÁÇπÔºöÂπ∂Êü•ÈõÜ„ÄÅdfsÂàÜÊûêÔºö‰∏§ÁßçËß£Ê≥ïÔºå‰∏ÄÁßçÊòØdfsÔºàÂÖ∂ÂÆû‰πüÂèØ‰ª•ÂÜôÊàêbfsÔºâÔºõ‰∏ÄÁßçÊòØÂπ∂Êü•ÈõÜ„ÄÇ dfs‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718192021public int findCircleNum(int[][] isConnected) &#123; int length = isConnected.length; boolean[] isVisited = new boolean[length]; int count=0; for(int i=0;i&lt;length;i++)&#123; if(!isVisited[i])&#123; dfs(isConnected,isVisited,i); count++; &#125; &#125; return count; &#125; public void dfs(int[][] isConnected,boolean[] isVisited,int i)&#123; for(int j=0;j&lt;isConnected.length;j++)&#123; if(isConnected[i][j]==1&amp;&amp;!isVisited[j])&#123; isVisited[j] = true; dfs(isConnected,isVisited,j); &#125; &#125; &#125;&#125; Âπ∂Êü•ÈõÜ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728293031323334353637383940public int findCircleNum(int[][] isConnected) &#123; int len = isConnected.length; int[] parent = new int[len]; for(int i=0;i&lt;len;i++)&#123; parent[i] = i; &#125; for(int i=0;i&lt;len;i++)&#123; for(int j=i+1;j&lt;len;j++)&#123; if(isConnected[i][j]==1)&#123; union(parent,i,j); &#125; &#125; &#125; int count = 0; for(int i=0;i&lt;len;i++)&#123; if(parent[i]==i)&#123; ++count; &#125; &#125; return count; &#125; //Ëøô‰∏§‰∏™ÂáΩÊï∞ÁöÑÊú¨Ë¥®ÊòØÂ∞Ü‰∏§‰∏™‰∫íÁõ∏ËøûÊé•ÁöÑÂüéÂ∏ÇÂú®parentËÆ∞ÂΩï‰∏ãÊù• //‰∏§‰∏™ÂüéÂ∏ÇÁöÑÂùêÊ†áËÇØÂÆö‰∏ÄÂ∞è‰∏ÄÂ§ß //parent[Â∞è]=Â§ß //Â¶ÇÊûúaÂíåbÔºåaÂíåcËøûÊé•ÔºåaÔºåbÔºåc‰æùÊ¨°Â¢ûÂ§ß //ÈÇ£‰πàÊúÄÁªàÁªìÊûúÊòØparent[a]=b,parent[b]=c,parent[c]=c //ËÅîÂêà‰∏§‰∏™ÂüéÂ∏ÇÔºåÂ∞Ü‰∏ãÊ†áÂ∞èÁöÑÂüéÂ∏ÇÁöÑparentÊåáÂêë‰∏ãÊ†áÂ§ßÁöÑÂüéÂ∏Ç private void union(int[] parent, int i, int j) &#123; parent[find(parent,i)] = find(parent,j); &#125; //ÊâæÂà∞parent[index]ÊåáÂêëÁöÑÂüéÂ∏Ç private int find(int[] parent, int index) &#123; if(parent[index]!=index)&#123; parent[index] = find(parent, parent[index]); &#125; return parent[index]; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Âπ∂Êü•ÈõÜ","slug":"Âπ∂Êü•ÈõÜ","permalink":"http://example.com/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"}]},{"title":"leetcode-ÊªëÂä®Á™óÂè£ÁöÑÊúÄÂ§ßÂÄº","slug":"leetcode-ÊªëÂä®Á™óÂè£ÊúÄÂ§ßÂÄº","date":"2021-08-18T16:00:00.000Z","updated":"2021-08-19T08:38:10.596Z","comments":true,"path":"2021/08/19/leetcode-ÊªëÂä®Á™óÂè£ÊúÄÂ§ßÂÄº/","link":"","permalink":"http://example.com/2021/08/19/leetcode-%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC/","excerpt":"","text":"239. ÊªëÂä®Á™óÂè£ÊúÄÂ§ßÂÄºÁªô‰Ω†‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑ numsÔºåÊúâ‰∏Ä‰∏™Â§ßÂ∞è‰∏∫ k ÁöÑÊªëÂä®Á™óÂè£‰ªéÊï∞ÁªÑÁöÑÊúÄÂ∑¶‰æßÁßªÂä®Âà∞Êï∞ÁªÑÁöÑÊúÄÂè≥‰æß„ÄÇ‰Ω†Âè™ÂèØ‰ª•ÁúãÂà∞Âú®ÊªëÂä®Á™óÂè£ÂÜÖÁöÑ k ‰∏™Êï∞Â≠ó„ÄÇÊªëÂä®Á™óÂè£ÊØèÊ¨°Âè™ÂêëÂè≥ÁßªÂä®‰∏Ä‰Ωç„ÄÇ ËøîÂõûÊªëÂä®Á™óÂè£‰∏≠ÁöÑÊúÄÂ§ßÂÄº„ÄÇ Áü•ËØÜÁÇπÔºöÂ†Ü„ÄÅÊªëÂä®Á™óÂè£ÂàÜÊûêÔºöÂÉèÁª¥ÊåÅ‰∏Ä‰∏™ËåÉÂõ¥ÂÜÖÁöÑÊúÄÂ§ßÂÄºËøôÁßçÈ¢òÁõÆÔºåÊàë‰ª¨ÂèØ‰ª•ÂàõÂª∫‰∏Ä‰∏™Â§ßÈ°∂Â†ÜÊù•Áª¥ÊåÅÔºåÈÄöËøáËá™ÂÆö‰πâcomparatorÊù•ÂÆûÁé∞Ëá™ÂÆö‰πâÊØîËæÉÊñπÊ≥ï„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718192021222324252627class Solution &#123; public int[] maxSlidingWindow(int[] nums, int k) &#123; PriorityQueue&lt;int[]&gt; pq = new PriorityQueue&lt;&gt;(new Comparator&lt;int[]&gt;() &#123; @Override public int compare(int[] nums1, int[] nums2) &#123; //Á¨¨‰∏ÄÊéíÂ∫èÊåâÁÖßÊï∞ÂÄºÂ§ßÂ∞èËøõË°åÈôçÂ∫èÊéíÂàó //Á¨¨‰∫åÊéíÂ∫èÊåâÁÖßÁ¥¢ÂºïÂ§ßÂ∞èËøõË°åÂçáÂ∫èÊéíÂàó return nums1[0]!=nums2[0]?nums2[0]-nums1[0]:nums1[1]-nums2[1]; &#125; &#125;); int len = nums.length; int[] ans = new int[len-k+1]; for(int i=0;i&lt;k;i++)&#123; pq.offer(new int[]&#123;nums[i],i&#125;); &#125; ans[0] = pq.peek()[0]; for(int i=k;i&lt;len;i++)&#123; pq.offer(new int[]&#123;nums[i],i&#125;); //Âà§Êñ≠ÊúÄÂ§ßÂÄºÊòØÂê¶‰Ωç‰∫éÊªëÂä®Á™óÂè£ÁöÑÂ∑¶‰æß while(pq.peek()[1]&lt;=i-k)&#123; pq.poll(); &#125; ans[i-k+1] = pq.peek()[0]; &#125; return ans; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ÊªëÂä®Á™óÂè£","slug":"ÊªëÂä®Á™óÂè£","permalink":"http://example.com/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"}]},{"title":"leetcode-Â≠¶ÁîüÂá∫Âã§ËÆ∞ÂΩï","slug":"leetcode-Â≠¶ÁîüÂá∫Âã§ËÆ∞ÂΩï","date":"2021-08-17T16:00:00.000Z","updated":"2021-08-18T02:41:01.781Z","comments":true,"path":"2021/08/18/leetcode-Â≠¶ÁîüÂá∫Âã§ËÆ∞ÂΩï/","link":"","permalink":"http://example.com/2021/08/18/leetcode-%E5%AD%A6%E7%94%9F%E5%87%BA%E5%8B%A4%E8%AE%B0%E5%BD%95/","excerpt":"","text":"552. Â≠¶ÁîüÂá∫Âã§ËÆ∞ÂΩï IIÂèØ‰ª•Áî®Â≠óÁ¨¶‰∏≤Ë°®Á§∫‰∏Ä‰∏™Â≠¶ÁîüÁöÑÂá∫Âã§ËÆ∞ÂΩïÔºåÂÖ∂‰∏≠ÁöÑÊØè‰∏™Â≠óÁ¨¶Áî®Êù•Ê†áËÆ∞ÂΩìÂ§©ÁöÑÂá∫Âã§ÊÉÖÂÜµÔºàÁº∫Âã§„ÄÅËøüÂà∞„ÄÅÂà∞Âú∫Ôºâ„ÄÇËÆ∞ÂΩï‰∏≠Âè™Âê´‰∏ãÈù¢‰∏âÁßçÂ≠óÁ¨¶Ôºö ‚ÄòA‚ÄôÔºöAbsentÔºåÁº∫Âã§ ‚ÄòL‚ÄôÔºöLateÔºåËøüÂà∞ ‚ÄòP‚ÄôÔºöPresentÔºåÂà∞Âú∫ Â¶ÇÊûúÂ≠¶ÁîüËÉΩÂ§ü ÂêåÊó∂ Êª°Ë∂≥‰∏ãÈù¢‰∏§‰∏™Êù°‰ª∂ÔºåÂàôÂèØ‰ª•Ëé∑ÂæóÂá∫Âã§Â•ñÂä±Ôºö Êåâ ÊÄªÂá∫Âã§ ËÆ°ÔºåÂ≠¶ÁîüÁº∫Âã§Ôºà‚ÄôA‚ÄôÔºâ‰∏•Ê†º Â∞ë‰∫é‰∏§Â§©„ÄÇ Â≠¶Áîü ‰∏ç‰ºö Â≠òÂú® ËøûÁª≠ 3 Â§©Êàñ ËøûÁª≠ 3 Â§©‰ª•‰∏äÁöÑËøüÂà∞Ôºà‚ÄôL‚ÄôÔºâËÆ∞ÂΩï„ÄÇ Áªô‰Ω†‰∏Ä‰∏™Êï¥Êï∞ n ÔºåË°®Á§∫Âá∫Âã§ËÆ∞ÂΩïÁöÑÈïøÂ∫¶ÔºàÊ¨°Êï∞Ôºâ„ÄÇËØ∑‰Ω†ËøîÂõûËÆ∞ÂΩïÈïøÂ∫¶‰∏∫ n Êó∂ÔºåÂèØËÉΩËé∑ÂæóÂá∫Âã§Â•ñÂä±ÁöÑËÆ∞ÂΩïÊÉÖÂÜµ Êï∞Èáè „ÄÇÁ≠îÊ°àÂèØËÉΩÂæàÂ§ßÔºåÊâÄ‰ª•ËøîÂõûÂØπ 109 + 7 Âèñ‰Ωô ÁöÑÁªìÊûú„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºön = 2 ËæìÂá∫Ôºö8 Ëß£ÈáäÔºö Êúâ 8 ÁßçÈïøÂ∫¶‰∏∫ 2 ÁöÑËÆ∞ÂΩïÂ∞ÜË¢´ËßÜ‰∏∫ÂèØÂ•ñÂä±Ôºö ‚ÄúPP‚Äù , ‚ÄúAP‚Äù, ‚ÄúPA‚Äù, ‚ÄúLP‚Äù, ‚ÄúPL‚Äù, ‚ÄúAL‚Äù, ‚ÄúLA‚Äù, ‚ÄúLL‚Äù Âè™Êúâ‚ÄùAA‚Äù‰∏ç‰ºöË¢´ËßÜ‰∏∫ÂèØÂ•ñÂä±ÔºåÂõ†‰∏∫Áº∫Âã§Ê¨°Êï∞‰∏∫ 2 Ê¨°ÔºàÈúÄË¶ÅÂ∞ë‰∫é 2 Ê¨°Ôºâ„ÄÇ Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºön = 1 ËæìÂá∫Ôºö3 Á§∫‰æã 3Ôºö ËæìÂÖ•Ôºön = 10101 ËæìÂá∫Ôºö183236316 ÊèêÁ§∫Ôºö 1 &lt;= n &lt;= 105 Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàíÂàÜÊûêÔºöÂä®ÊÄÅËßÑÂàíËß£ÂÜ≥ÔºåËØ¶ÊÉÖËßÅ‰ª£Á†Å„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223242526272829303132class Solution &#123; public int checkRecord(int n) &#123; int MOD = 1000000007,sum = 0; int[][][] dp = new int[n+1][2][3]; //dp[i][j][k]ÔºöÁ¨¨iÂ§©Êó∂ÔºåAÁöÑÊï∞Èáè‰∏∫j„ÄÅLÁöÑÊï∞Èáè‰∏∫kÊó∂ÁöÑËÉΩËé∑Â•ñÁöÑÂá∫Âã§ËÆ∞ÂΩïÊï∞Èáè dp[0][0][0] = 1; for(int i=1;i&lt;=n;i++)&#123; //ÂΩìÂâç‰∏∫PÁöÑÊÉÖÂÜµ for(int j=0;j&lt;=1;j++)&#123; for(int k=0;k&lt;=2;k++)&#123; dp[i][j][0] = (dp[i][j][0]+dp[i-1][j][k])%MOD; &#125; &#125; //ÂΩìÂâç‰∏∫AÁöÑÊÉÖÂÜµ for(int k = 0;k&lt;=2;k++)&#123; dp[i][1][0] = (dp[i][1][0]+dp[i-1][0][k])%MOD; &#125; //ÂΩìÂâç‰∏∫LÁöÑÊÉÖÂÜµ for(int j=0;j&lt;=1;j++)&#123; for(int k=1;k&lt;=2;k++)&#123; dp[i][j][k] = (dp[i][j][k]+dp[i-1][j][k-1])%MOD; &#125; &#125; &#125; for(int j=0;j&lt;2;j++)&#123; for(int k=0;k&lt;3;k++)&#123; sum = (sum+dp[n][j][k])%MOD; &#125; &#125; return sum; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"}]},{"title":"leetcode-Â≠êÂ∫èÂíåÈóÆÈ¢ò","slug":"leetcode-Â≠êÂ∫èÂíåÈóÆÈ¢ò","date":"2021-08-17T16:00:00.000Z","updated":"2021-08-18T09:19:34.725Z","comments":true,"path":"2021/08/18/leetcode-Â≠êÂ∫èÂíåÈóÆÈ¢ò/","link":"","permalink":"http://example.com/2021/08/18/leetcode-%E5%AD%90%E5%BA%8F%E5%92%8C%E9%97%AE%E9%A2%98/","excerpt":"","text":"53. ÊúÄÂ§ßÂ≠êÂ∫èÂíåÁªôÂÆö‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑ nums ÔºåÊâæÂà∞‰∏Ä‰∏™ÂÖ∑ÊúâÊúÄÂ§ßÂíåÁöÑËøûÁª≠Â≠êÊï∞ÁªÑÔºàÂ≠êÊï∞ÁªÑÊúÄÂ∞ëÂåÖÂê´‰∏Ä‰∏™ÂÖÉÁ¥†ÔºâÔºåËøîÂõûÂÖ∂ÊúÄÂ§ßÂíå„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºönums = [-2,1,-3,4,-1,2,1,-5,4] ËæìÂá∫Ôºö6 Ëß£ÈáäÔºöËøûÁª≠Â≠êÊï∞ÁªÑ [4,-1,2,1] ÁöÑÂíåÊúÄÂ§ßÔºå‰∏∫ 6 „ÄÇ Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàí„ÄÅÁ∫øÊÆµÊ†ëÔºàÊÑüËßâÊúâÁÇπÂÉèÂΩíÂπ∂ÈÇ£ÁßçÔºâÂàÜÊûêÔºöËøôÈÅìÈ¢òÊúâ‰∏§ÁßçËß£Ê≥ï Á¨¨‰∏ÄÔºöÂÅö‰∏™Âä®ÊÄÅËßÑÂàíÔºåf(i)Ë°®Á§∫0~i‰πãÈó¥ÁöÑÊúÄÂ§ßÂ≠êÂ∫èÂíåÔºåf(i+1)=max(f(i)+nums[i],nums[i]),Ê≠§Â§ÑË¶ÅÊ≥®ÊÑèËΩ¨ÁßªÊñπÁ®ãÔºåÂõ†‰∏∫ÊòØÂ≠êÂ∫èÂíåÔºåÊâÄ‰ª•Â¶ÇÊûúnums[i]‰∏çË¶ÅÁöÑËØùÔºåÂâçÈù¢ÁöÑÊâÄÊúâÂíåÈÉΩËàçÂºÉÔºõÁÑ∂ÂêéËÆ∞ÂΩï‰∏ãÊúÄÂ§ßÂÄºÂç≥ÂèØ„ÄÇ ‰ª£Á†ÅÂÖ•‰∏ãÔºö1234567891011class Solution &#123; public int maxSubArray(int[] nums) &#123; int len = nums.length; int sum = 0,max = nums[0]; for(int i=0;i&lt;len;i++)&#123; sum = Math.max(nums[i],sum+nums[i]); max = Math.max(max,sum); &#125; return max; &#125;&#125; 304. ‰∫åÁª¥Âå∫ÂüüÂíåÊ£ÄÁ¥¢ - Áü©Èòµ‰∏çÂèØÂèòÁªôÂÆö‰∏Ä‰∏™‰∫åÁª¥Áü©ÈòµÔºåËÆ°ÁÆóÂÖ∂Â≠êÁü©ÂΩ¢ËåÉÂõ¥ÂÜÖÂÖÉÁ¥†ÁöÑÊÄªÂíåÔºåËØ•Â≠êÁü©ÈòµÁöÑÂ∑¶‰∏äËßí‰∏∫ (row1, col1) ÔºåÂè≥‰∏ãËßí‰∏∫ (row2, col2) „ÄÇ ‰∏äÂõæÂ≠êÁü©ÈòµÂ∑¶‰∏äËßí (row1, col1) = (2, 1) ÔºåÂè≥‰∏ãËßí(row2, col2) = (4, 3)ÔºåËØ•Â≠êÁü©ÂΩ¢ÂÜÖÂÖÉÁ¥†ÁöÑÊÄªÂíå‰∏∫ 8„ÄÇ Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàí„ÄÅÂâçÁºÄÂíåÂàÜÊûêÔºöÂ¶ÇÊûúÊØèÊ¨°ÈÉΩÊå®‰∏™Áõ∏Âä†ÔºåÈÇ£‰πüÂ§™È∫ªÁÉ¶‰∫ÜÔºõÂÅö‰∏™ÂâçÁºÄÂíåÔºåÁªô‰Ω†Ë¥¥‰∏™ÂõæÔºå Ëøô‰∏ãÂè™ÈúÄË¶ÅÂØπÊï¥‰ΩìÁü©ÈòµÂÅö‰∏ÄÊ¨°Ê±ÇÂíåÔºåÂ∞ÜÁªìÊûú‰øùÂ≠ò‰∏ãÊù•Ôºå‰πãÂêéÊØèÊ¨°‰æøÂèØÈÉΩÁõ¥Êé•‰ª•O(1)ÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶ÁÆóÂá∫„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415class NumMatrix &#123; int[][] preSum; public NumMatrix(int[][] matrix) &#123; preSum = new int[matrix.length+1][matrix[0].length+1]; for(int i=0;i&lt;matrix.length;i++)&#123; for(int j=0;j&lt;matrix[0].length;j++)&#123; preSum[i+1][j+1] = preSum[i+1][j]+preSum[i][j+1]-preSum[i][j]+matrix[i][j]; &#125; &#125; &#125; public int sumRegion(int row1, int col1, int row2, int col2) &#123; return preSum[row2+1][col2+1]-preSum[row2+1][col1]-preSum[row1][col2+1]+preSum[row1][col1]; &#125;&#125; 363. Áü©ÂΩ¢Âå∫Âüü‰∏çË∂ÖËøá K ÁöÑÊúÄÂ§ßÊï∞ÂÄºÂíåÁªô‰Ω†‰∏Ä‰∏™ m x n ÁöÑÁü©Èòµ matrix Âíå‰∏Ä‰∏™Êï¥Êï∞ k ÔºåÊâæÂá∫Âπ∂ËøîÂõûÁü©ÈòµÂÜÖÈÉ®Áü©ÂΩ¢Âå∫ÂüüÁöÑ‰∏çË∂ÖËøá k ÁöÑÊúÄÂ§ßÊï∞ÂÄºÂíå„ÄÇ È¢òÁõÆÊï∞ÊçÆ‰øùËØÅÊÄª‰ºöÂ≠òÂú®‰∏Ä‰∏™Êï∞ÂÄºÂíå‰∏çË∂ÖËøá k ÁöÑÁü©ÂΩ¢Âå∫Âüü„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºömatrix = [[1,0,1],[0,-2,3]], k = 2 ËæìÂá∫Ôºö2 Ëß£ÈáäÔºöËìùËâ≤ËæπÊ°ÜÂúàÂá∫Êù•ÁöÑÁü©ÂΩ¢Âå∫Âüü [[0, 1], [-2, 3]] ÁöÑÊï∞ÂÄºÂíåÊòØ 2Ôºå‰∏î 2 ÊòØ‰∏çË∂ÖËøá k ÁöÑÊúÄÂ§ßÊï∞Â≠óÔºàk = 2Ôºâ„ÄÇ Áü•ËØÜÁÇπÔºödp„ÄÅÂâçÁºÄÂíåÂàÜÊûêÔºöËøô‰∏™Ë∑ü‰∏ä‰∏™È¢òÁõÆÔºà304ÔºâÂ∑Æ‰∏çÂ§öÔºå Âè™ÊòØËß£Ê≥ï‰∏çÂêå„ÄÇÂÖàÂ∞ÜÁî®ÂèåÊåáÈíàÂ∞ÜÁü©Èòµ‰ª•Âàó‰∏∫Âçï‰ΩçËøõË°åÈÅçÂéÜÔºåÊ±ÇÂá∫ÂΩìÂâçÂàóÁöÑÊúÄÂ§ßÂ≠êÂ∫èÂàóÂíåÔºõÁÑ∂ÂêéÂÜç‰ª•Ë°å‰∏∫Âçï‰ΩçÔºåÂ∞ÜÊØè‰∏Ä‰∏™Ë°åÁõ∏Âä†ÔºåËØ¶ÊÉÖËßÅ‰ª£Á†Å„ÄÇË¥¥‰∏™È¢òËß£Ôºö‰ªéÊö¥ÂäõÂºÄÂßã‰ºòÂåñÔºåÈÖçÂõæÈÖçÊ≥®Èáä ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152class Solution &#123; public int maxSumSubmatrix(int[][] matrix, int k) &#123; int rows = matrix.length,cols = matrix[0].length; int max = Integer.MIN_VALUE; for(int left = 0;left&lt;cols;left++)&#123; int[] rowSum = new int[rows]; for(int right = left;right&lt;cols;right++)&#123; for(int i=0;i&lt;rows;i++)&#123; rowSum[i] += matrix[i][right]; &#125; max = Math.max(max,myMax(rowSum,k)); if(max==k)&#123; return k; &#125; &#125; &#125; return max; &#125; //‰∏∫‰ªÄ‰πà‰ºöÂá∫Èîô----Ëøô‰∏™ÊòØË¶ÅÊ±Ç‰∏çË∂ÖËøákÔºåÂ¶ÇÊûúÂêéÈù¢ÁöÑÊüê‰∏™Êï∞Â≠óÂú®Âä†‰∏äsum‰πãÂêéÔºåsumÁõ¥Êé•ÂèòÊàêk‰∫Ü // public int myMax(int[] nums,int k)&#123; // int sum = 0,max = Integer.MIN_VALUE; // for(int num:nums)&#123; // sum = Math.max(num,sum+num); // if(sum&gt;max&amp;&amp;sum&lt;k)&#123; // max = sum; // &#125; // if(sum==k)&#123; // return k; // &#125; // &#125; // return max; // &#125; public int myMax(int[] nums,int k)&#123; int len = nums.length,max = Integer.MIN_VALUE; for(int left = 0;left&lt;len;left++)&#123; int sum = 0; for(int right = left;right&lt;len;right++)&#123; sum+=nums[right]; if(sum&gt;max&amp;&amp;sum&lt;k)&#123; max = sum; &#125; if(sum==k)&#123; return k; &#125; &#125; &#125; return max; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"}]},{"title":"leetcode-LRUÁºìÂ≠òÊú∫Âà∂","slug":"leetcode-LRUÁºìÂ≠òÊú∫Âà∂","date":"2021-08-17T16:00:00.000Z","updated":"2021-08-18T09:20:31.767Z","comments":true,"path":"2021/08/18/leetcode-LRUÁºìÂ≠òÊú∫Âà∂/","link":"","permalink":"http://example.com/2021/08/18/leetcode-LRU%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/","excerpt":"","text":"146. LRU ÁºìÂ≠òÊú∫Âà∂ËøêÁî®‰Ω†ÊâÄÊéåÊè°ÁöÑÊï∞ÊçÆÁªìÊûÑÔºåËÆæËÆ°ÂíåÂÆûÁé∞‰∏Ä‰∏™ LRU (ÊúÄËøëÊúÄÂ∞ë‰ΩøÁî®) ÁºìÂ≠òÊú∫Âà∂ „ÄÇ ÂÆûÁé∞ LRUCache Á±ªÔºö LRUCache(int capacity) ‰ª•Ê≠£Êï¥Êï∞‰Ωú‰∏∫ÂÆπÈáè capacity ÂàùÂßãÂåñ LRU ÁºìÂ≠ò int get(int key) Â¶ÇÊûúÂÖ≥ÈîÆÂ≠ó key Â≠òÂú®‰∫éÁºìÂ≠ò‰∏≠ÔºåÂàôËøîÂõûÂÖ≥ÈîÆÂ≠óÁöÑÂÄºÔºåÂê¶ÂàôËøîÂõû -1 „ÄÇ void put(int key, int value) Â¶ÇÊûúÂÖ≥ÈîÆÂ≠óÂ∑≤ÁªèÂ≠òÂú®ÔºåÂàôÂèòÊõ¥ÂÖ∂Êï∞ÊçÆÂÄºÔºõÂ¶ÇÊûúÂÖ≥ÈîÆÂ≠ó‰∏çÂ≠òÂú®ÔºåÂàôÊèíÂÖ•ËØ•ÁªÑ„ÄåÂÖ≥ÈîÆÂ≠ó-ÂÄº„Äç„ÄÇÂΩìÁºìÂ≠òÂÆπÈáèËææÂà∞‰∏äÈôêÊó∂ÔºåÂÆÉÂ∫îËØ•Âú®ÂÜôÂÖ•Êñ∞Êï∞ÊçÆ‰πãÂâçÂà†Èô§ÊúÄ‰πÖÊú™‰ΩøÁî®ÁöÑÊï∞ÊçÆÂÄºÔºå‰ªéËÄå‰∏∫Êñ∞ÁöÑÊï∞ÊçÆÂÄºÁïôÂá∫Á©∫Èó¥„ÄÇ ËøõÈò∂Ôºö‰Ω†ÊòØÂê¶ÂèØ‰ª•Âú® O(1) Êó∂Èó¥Â§çÊùÇÂ∫¶ÂÜÖÂÆåÊàêËøô‰∏§ÁßçÊìç‰ΩúÔºü Áü•ËØÜÁÇπÔºöLRUÂàÜÊûêÔºöLRU(Least Recently Used)ÁöÑËÆæËÆ°ÂéüÁêÜÂ∞±ÊòØÔºåÂΩìÊï∞ÊçÆÂú®ÊúÄËøë‰∏ÄÊÆµÊó∂Èó¥ÁªèÂ∏∏Ë¢´ËÆøÈóÆÔºåÈÇ£‰πàÂÆÉÂú®‰ª•Âêé‰πü‰ºöÁªèÂ∏∏Ë¢´ËÆøÈóÆ„ÄÇËøôÂ∞±ÊÑèÂë≥ÁùÄÔºåÂ¶ÇÊûúÁªèÂ∏∏ËÆøÈóÆÁöÑÊï∞ÊçÆÔºåÊàë‰ª¨ÈúÄË¶ÅÁÑ∂ÂÖ∂ËÉΩÂ§üÂø´ÈÄüÂëΩ‰∏≠ÔºåËÄå‰∏çÂ∏∏ËÆøÈóÆÁöÑÊï∞ÊçÆÔºåÊàë‰ª¨Âú®ÂÆπÈáèË∂ÖÂá∫ÈôêÂà∂ÂÜÖÔºåË¶ÅÂ∞ÜÂÖ∂Ê∑òÊ±∞„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192class LRUCache &#123; class MyNode&#123; int value; int key; MyNode pre; MyNode next; public MyNode()&#123;&#125; public MyNode(int k,int v)&#123; this.value = v; this.key = k; &#125; &#125; //Â≠òÂÇ®Â∑≤ÁªèÊîæ‰∫ÜÂì™‰∫õÊï∞ÊçÆ private Map&lt;Integer,MyNode&gt; cache = new HashMap&lt;&gt;(); //ÂΩìÂâçÂÆπÈáè private int size; //ÂÖÅËÆ∏ÊúÄÂ§ßÂÆπÈáè private int capacity; private MyNode dummyHead,dummyTail; public LRUCache(int capacity) &#123; this.capacity = capacity; this.size = 0; dummyHead = new MyNode(); dummyTail = new MyNode(); dummyHead.next = dummyTail; dummyTail.pre = dummyHead; &#125; public int get(int key) &#123; MyNode node = cache.get(key); if(node==null)&#123; return -1; &#125;else&#123; moveToHead(node); return node.value; &#125; &#125; public void put(int key, int value) &#123; MyNode node = cache.get(key); if(node==null)&#123; MyNode newNode = new MyNode(key,value); cache.put(key,newNode); addToHead(newNode); ++size; if(size&gt;capacity)&#123; MyNode delNode = removeTail(); cache.remove(delNode.key); --size; &#125; &#125;else&#123; node.value = value; moveToHead(node); &#125; &#125; //Âà†Èô§Â∞æÈÉ®ËäÇÁÇπ public MyNode removeTail()&#123; MyNode node = dummyTail.pre; removeNode(node); return node; &#125; //Â∞ÜËäÇÁÇπÁßªÂä®Ëá≥ÊúÄÂâçÁ´Ø public void moveToHead(MyNode node)&#123; removeNode(node); addToHead(node); &#125; //Âà†Èô§ËäÇÁÇπ public void removeNode(MyNode node)&#123; node.pre.next = node.next; node.next.pre = node.pre; &#125; //Â∞ÜËäÇÁÇπÊ∑ªÂä†Ëá≥Â§¥ÈÉ® public void addToHead(MyNode node)&#123; node.pre = dummyHead; node.next = dummyHead.next; dummyHead.next.pre = node; dummyHead.next = node; &#125;&#125;/** * Your LRUCache object will be instantiated and called as such: * LRUCache obj = new LRUCache(capacity); * int param_1 = obj.get(key); * obj.put(key,value); */","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ÈìæË°®","slug":"ÈìæË°®","permalink":"http://example.com/tags/%E9%93%BE%E8%A1%A8/"}]},{"title":"JavaÂÖ≥ÈîÆÂ≠óÊÄªÁªì","slug":"JavaÂÖ≥ÈîÆÂ≠óÊÄªÁªì","date":"2021-08-16T16:00:00.000Z","updated":"2021-08-17T10:03:16.416Z","comments":true,"path":"2021/08/17/JavaÂÖ≥ÈîÆÂ≠óÊÄªÁªì/","link":"","permalink":"http://example.com/2021/08/17/Java%E5%85%B3%E9%94%AE%E5%AD%97%E6%80%BB%E7%BB%93/","excerpt":"","text":"Transient‰∏Ä„ÄÅÊ¶ÇË¶Å‰ªãÁªç Êú¨ÊñáË¶Å‰ªãÁªçÁöÑÊòØJava‰∏≠ÁöÑtransientÂÖ≥ÈîÆÂ≠óÔºåtransientÊòØÁü≠ÊöÇÁöÑÊÑèÊÄù„ÄÇÂØπ‰∫étransient ‰øÆÈ•∞ÁöÑÊàêÂëòÂèòÈáèÔºåÂú®Á±ªÁöÑÂÆû‰æãÂØπË±°ÁöÑÂ∫èÂàóÂåñÂ§ÑÁêÜËøáÁ®ã‰∏≠‰ºöË¢´ÂøΩÁï•„ÄÇ Âõ†Ê≠§ÔºåtransientÂèòÈáè‰∏ç‰ºöË¥ØÁ©øÂØπË±°ÁöÑÂ∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñÔºåÁîüÂëΩÂë®Êúü‰ªÖÂ≠ò‰∫éË∞ÉÁî®ËÄÖÁöÑÂÜÖÂ≠ò‰∏≠ËÄå‰∏ç‰ºöÂÜôÂà∞Á£ÅÁõòÈáåËøõË°åÊåÅ‰πÖÂåñ„ÄÇ Ôºà1ÔºâÂ∫èÂàóÂåñ Java‰∏≠ÂØπË±°ÁöÑÂ∫èÂàóÂåñÊåáÁöÑÊòØÂ∞ÜÂØπË±°ËΩ¨Êç¢Êàê‰ª•Â≠óËäÇÂ∫èÂàóÁöÑÂΩ¢ÂºèÊù•Ë°®Á§∫ÔºåËøô‰∫õÂ≠óËäÇÂ∫èÂàóÂåÖÂê´‰∫ÜÂØπË±°ÁöÑÊï∞ÊçÆÂíå‰ø°ÊÅØÔºå‰∏Ä‰∏™Â∫èÂàóÂåñÂêéÁöÑÂØπË±°ÂèØ‰ª•Ë¢´ÂÜôÂà∞Êï∞ÊçÆÂ∫ìÊàñÊñá‰ª∂‰∏≠Ôºå‰πüÂèØÁî®‰∫éÁΩëÁªú‰º†Ëæì„ÄÇ‰∏ÄËà¨Âú∞ÔºåÂΩìÊàë‰ª¨‰ΩøÁî®ÁºìÂ≠òcacheÔºàÂÜÖÂ≠òÁ©∫Èó¥‰∏çÂ§üÊúâÂèØËÉΩ‰ºöÊú¨Âú∞Â≠òÂÇ®Âà∞Á°¨ÁõòÔºâÊàñËøúÁ®ãË∞ÉÁî®rpcÔºàÁΩëÁªú‰º†ËæìÔºâÁöÑÊó∂ÂÄôÔºåÁªèÂ∏∏ÈúÄË¶ÅËÆ©ÂÆû‰ΩìÁ±ªÂÆûÁé∞SerializableÊé•Âè£ÔºåÁõÆÁöÑÂ∞±ÊòØ‰∏∫‰∫ÜËÆ©ÂÖ∂ÂèØÂ∫èÂàóÂåñ„ÄÇÂΩìÁÑ∂ÔºåÂ∫èÂàóÂåñÂêéÁöÑÊúÄÁªàÁõÆÁöÑÊòØ‰∏∫‰∫ÜÂèçÂ∫èÂàóÂåñÔºåÊÅ¢Â§çÊàêÂéüÂÖàÁöÑJavaÂØπË±°ÂÆû‰æã„ÄÇÊâÄ‰ª•Â∫èÂàóÂåñÂêéÁöÑÂ≠óËäÇÂ∫èÂàóÈÉΩÊòØÂèØ‰ª•ÊÅ¢Â§çÊàêJavaÂØπË±°ÁöÑÔºåËøô‰∏™ËøáÁ®ãÂ∞±ÊòØÂèçÂ∫èÂàóÂåñ„ÄÇ Ôºà2Ôºâ‰∏∫‰ªÄ‰πàË¶ÅÁî®transientÂÖ≥ÈîÆÂ≠óÔºü Âú®ÊåÅ‰πÖÂåñÂØπË±°Êó∂ÔºåÂØπ‰∫é‰∏Ä‰∫õÁâπÊÆäÁöÑÊï∞ÊçÆÊàêÂëòÔºàÂ¶ÇÁî®Êà∑ÁöÑÂØÜÁ†ÅÔºåÈì∂Ë°åÂç°Âè∑Á≠âÔºâÔºåÊàë‰ª¨‰∏çÊÉ≥Áî®Â∫èÂàóÂåñÊú∫Âà∂Êù•‰øùÂ≠òÂÆÉ„ÄÇ‰∏∫‰∫ÜÂú®‰∏Ä‰∏™ÁâπÂÆöÂØπË±°ÁöÑ‰∏Ä‰∏™ÊàêÂëòÂèòÈáè‰∏äÂÖ≥Èó≠Â∫èÂàóÂåñÔºåÂèØ‰ª•Âú®Ëøô‰∏™ÊàêÂëòÂèòÈáèÂâçÂä†‰∏äÂÖ≥ÈîÆÂ≠ótransient„ÄÇ Ôºà3ÔºâtransientÁöÑ‰ΩúÁî® transientÊòØJavaËØ≠Ë®ÄÁöÑÂÖ≥ÈîÆÂ≠óÔºåÁî®Êù•Ë°®Á§∫‰∏Ä‰∏™ÊàêÂëòÂèòÈáè‰∏çÊòØËØ•ÂØπË±°Â∫èÂàóÂåñÁöÑ‰∏ÄÈÉ®ÂàÜ„ÄÇÂΩì‰∏Ä‰∏™ÂØπË±°Ë¢´Â∫èÂàóÂåñÁöÑÊó∂ÂÄôÔºåtransientÂûãÂèòÈáèÁöÑÂÄº‰∏çÂåÖÊã¨Âú®Â∫èÂàóÂåñÁöÑÁªìÊûú‰∏≠„ÄÇËÄåÈùûtransientÂûãÁöÑÂèòÈáèÊòØË¢´ÂåÖÊã¨ËøõÂéªÁöÑ„ÄÇ Ê≥®ÊÑèstatic‰øÆÈ•∞ÁöÑÈùôÊÄÅÂèòÈáèÂ§©ÁÑ∂Â∞±ÊòØ‰∏çÂèØÂ∫èÂàóÂåñÁöÑ„ÄÇ 1234567891011121314151617181920212223242526package serializationLearn;import java.io.Serializable;public class User implements Serializable &#123; private static final long serialVersionUID =6849794492644667710L; private String userName; private transient String pwd; public String getUserName() &#123; return userName; &#125; public void setUserName(String userName) &#123; this.userName = userName; &#125; public String getPwd() &#123; return pwd; &#125; public void setPwd(String pwd) &#123; this.pwd = pwd; &#125;&#125; 12345678910111213141516171819202122232425262728293031323334353637package serializationLearn;import java.io.*;public class SerializationLearn &#123; public static void main(String[] args) &#123; User user = new User(); user.setUserName(&quot;Jack&quot;); user.setPwd(&quot;123456&quot;); System.out.println(&quot;before Serializable:&quot;); System.out.println(&quot;userName:&quot;+user.getUserName()); System.out.println(&quot;userPwd:&quot;+user.getPwd()); try &#123; ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(&quot;C:/Users/Mithrandir/Desktop/user.txt&quot;)); //Â∞ÜuserÂØπË±°ÂÜôËøõÊñá‰ª∂ oos.writeObject(user); oos.flush(); oos.close(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; try &#123; ObjectInputStream ois = new ObjectInputStream(new FileInputStream(&quot;C:/Users/Mithrandir/Desktop/user.txt&quot;)); //‰ªéÊµÅ‰∏≠ËØªÂèñÊï∞ÊçÆ user = (User)ois.readObject(); ois.close(); System.out.println(&quot;after Serializable&quot;); System.out.println(&quot;userName:&quot;+user.getUserName());//Jack System.out.println(&quot;userPwd:&quot;+user.getPwd());//null &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125; ‰∫å„ÄÅtransient‰ΩøÁî®ÊÄªÁªìÔºà1Ôºâ‰∏ÄÊó¶ÂèòÈáèË¢´transient‰øÆÈ•∞ÔºåÂèòÈáèÂ∞Ü‰∏çÂÜçÊòØÂØπË±°ÊåÅ‰πÖÂåñÁöÑ‰∏ÄÈÉ®ÂàÜÔºåËØ•ÂèòÈáèÂÜÖÂÆπÂú®Â∫èÂàóÂåñÂêéÊó†Ê≥ïË¢´ËÆøÈóÆ„ÄÇ Ôºà2Ôºâ transientÂÖ≥ÈîÆÂ≠óÂè™ËÉΩ‰øÆÈ•∞ÂèòÈáèÔºåËÄå‰∏çËÉΩ‰øÆÈ•∞ÊñπÊ≥ïÂíåÁ±ª„ÄÇÊ≥®ÊÑèÔºåÊú¨Âú∞ÂèòÈáèÊòØ‰∏çËÉΩË¢´transientÂÖ≥ÈîÆÂ≠ó‰øÆÈ•∞ÁöÑ„ÄÇÂèòÈáèÂ¶ÇÊûúÊòØÁî®Êà∑Ëá™ÂÆö‰πâÁ±ªÂèòÈáèÔºåÂàôËØ•Á±ªÈúÄË¶ÅÂÆûÁé∞SerializableÊé•Âè£„ÄÇ Ôºà3Ôºâ‰∏Ä‰∏™ÈùôÊÄÅÂèòÈáè‰∏çÁÆ°ÊòØÂê¶Ë¢´transient‰øÆÈ•∞ÔºåÂùá‰∏çËÉΩË¢´Â∫èÂàóÂåñ(Â¶ÇÊûúÂèçÂ∫èÂàóÂåñÂêéÁ±ª‰∏≠staticÂèòÈáèËøòÊúâÂÄºÔºåÂàôÂÄº‰∏∫ÂΩìÂâçJVM‰∏≠ÂØπÂ∫îstaticÂèòÈáèÁöÑÂÄº)„ÄÇÂ∫èÂàóÂåñ‰øùÂ≠òÁöÑÊòØÂØπË±°Áä∂ÊÄÅÔºåÈùôÊÄÅÂèòÈáè‰øùÂ≠òÁöÑÊòØÁ±ªÁä∂ÊÄÅÔºåÂõ†Ê≠§Â∫èÂàóÂåñÂπ∂‰∏ç‰øùÂ≠òÈùôÊÄÅÂèòÈáè„ÄÇ","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"Â∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñ","slug":"Â∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñ","date":"2021-08-16T16:00:00.000Z","updated":"2021-08-17T10:00:30.473Z","comments":true,"path":"2021/08/17/Â∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñ/","link":"","permalink":"http://example.com/2021/08/17/%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/","excerpt":"","text":"‰∏Ä„ÄÅÂü∫Êú¨Ê¶ÇÂøµ1„ÄÅÂ∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñÁöÑÂÆö‰πâÔºö (1)JavaÂ∫èÂàóÂåñÂ∞±ÊòØÊåáÊääJavaÂØπË±°ËΩ¨Êç¢‰∏∫Â≠óËäÇÂ∫èÂàóÁöÑËøáÁ®ã ‚Äã JavaÂèçÂ∫èÂàóÂåñÂ∞±ÊòØÊåáÊääÂ≠óËäÇÂ∫èÂàóÊÅ¢Â§ç‰∏∫JavaÂØπË±°ÁöÑËøáÁ®ã„ÄÇ (2)Â∫èÂàóÂåñÊúÄÈáçË¶ÅÁöÑ‰ΩúÁî®ÔºöÂú®‰º†ÈÄíÂíå‰øùÂ≠òÂØπË±°Êó∂.‰øùËØÅÂØπË±°ÁöÑÂÆåÊï¥ÊÄßÂíåÂèØ‰º†ÈÄíÊÄß„ÄÇÂØπË±°ËΩ¨Êç¢‰∏∫ÊúâÂ∫èÂ≠óËäÇÊµÅ,‰ª•‰æøÂú®ÁΩëÁªú‰∏ä‰º†ËæìÊàñËÄÖ‰øùÂ≠òÂú®Êú¨Âú∞Êñá‰ª∂‰∏≠„ÄÇ ‚Äã ÂèçÂ∫èÂàóÂåñÁöÑÊúÄÈáçË¶ÅÁöÑ‰ΩúÁî®ÔºöÊ†πÊçÆÂ≠óËäÇÊµÅ‰∏≠‰øùÂ≠òÁöÑÂØπË±°Áä∂ÊÄÅÂèäÊèèËø∞‰ø°ÊÅØÔºåÈÄöËøáÂèçÂ∫èÂàóÂåñÈáçÂª∫ÂØπË±°„ÄÇ ÊÄªÁªìÔºöÊ†∏ÂøÉ‰ΩúÁî®Â∞±ÊòØÂØπË±°Áä∂ÊÄÅÁöÑ‰øùÂ≠òÂíåÈáçÂª∫„ÄÇÔºàÊï¥‰∏™ËøáÁ®ãÊ†∏ÂøÉÁÇπÂ∞±ÊòØÂ≠óËäÇÊµÅ‰∏≠ÊâÄ‰øùÂ≠òÁöÑÂØπË±°Áä∂ÊÄÅÂèäÊèèËø∞‰ø°ÊÅØÔºâ 2„ÄÅjson/xmlÁöÑÊï∞ÊçÆ‰º†ÈÄíÔºö Âú®Êï∞ÊçÆ‰º†Ëæì(‰πüÂèØÁß∞‰∏∫ÁΩëÁªú‰º†Ëæì)ÂâçÔºåÂÖàÈÄöËøáÂ∫èÂàóÂåñÂ∑•ÂÖ∑Á±ªÂ∞ÜJavaÂØπË±°Â∫èÂàóÂåñ‰∏∫json/xmlÊñá‰ª∂„ÄÇ Âú®Êï∞ÊçÆ‰º†Ëæì(‰πüÂèØÁß∞‰∏∫ÁΩëÁªú‰º†Ëæì)ÂêéÔºåÂÜçÂ∞Üjson/xmlÊñá‰ª∂ÂèçÂ∫èÂàóÂåñ‰∏∫ÂØπÂ∫îËØ≠Ë®ÄÁöÑÂØπË±° 3„ÄÅÂ∫èÂàóÂåñ‰ºòÁÇπÔºö ‚ë†Â∞ÜÂØπË±°ËΩ¨‰∏∫Â≠óËäÇÊµÅÂ≠òÂÇ®Âà∞Á°¨Áõò‰∏äÔºåÂ¶ÇÊûúJVMÂÅúÊú∫ÁöÑËØùÔºåÂ≠óËäÇÊµÅËøò‰ºöÂú®Á°¨Áõò‰∏äÈªòÈªòÁ≠âÂæÖÔºåÁ≠âÂæÖ‰∏ã‰∏ÄÊ¨°JVMÁöÑÂêØÂä®ÔºåÊääÂ∫èÂàóÂåñÁöÑÂØπË±°ÔºåÈÄöËøáÂèçÂ∫èÂàóÂåñ‰∏∫ÂéüÊù•ÁöÑÂØπË±°ÔºåÂπ∂‰∏îÂ∫èÂàóÂåñÁöÑ‰∫åËøõÂà∂Â∫èÂàóËÉΩÂ§üÂáèÂ∞ëÂ≠òÂÇ®Á©∫Èó¥ÔºàÊ∞∏‰πÖÊÄß‰øùÂ≠òÂØπË±°Ôºâ„ÄÇ ‚ë°Â∫èÂàóÂåñÊàêÂ≠óËäÇÊµÅÂΩ¢ÂºèÁöÑÂØπË±°ÂèØ‰ª•ËøõË°åÁΩëÁªú‰º†Ëæì(‰∫åËøõÂà∂ÂΩ¢Âºè)ÔºåÊñπ‰æø‰∫ÜÁΩëÁªú‰º†Ëæì„ÄÇ ‚ë¢ÈÄöËøáÂ∫èÂàóÂåñÂèØ‰ª•Âú®ËøõÁ®ãÈó¥‰º†ÈÄíÂØπË±°„ÄÇ 4„ÄÅÂ∫èÂàóÂåñÁÆóÊ≥ïÈúÄË¶ÅÂÅöÁöÑ‰∫ãÔºö ‚ë† Â∞ÜÂØπË±°ÂÆû‰æãÁõ∏ÂÖ≥ÁöÑÁ±ªÂÖÉÊï∞ÊçÆËæìÂá∫„ÄÇ ‚ë° ÈÄíÂΩíÂú∞ËæìÂá∫Á±ªÁöÑË∂ÖÁ±ªÊèèËø∞Áõ¥Âà∞‰∏çÂÜçÊúâË∂ÖÁ±ª„ÄÇ ‚ë¢ Á±ªÂÖÉÊï∞ÊçÆËæìÂá∫ÂÆåÊØïÂêéÔºå‰ªéÊúÄÈ°∂Á´ØÁöÑË∂ÖÁ±ªÂºÄÂßãËæìÂá∫ÂØπË±°ÂÆû‰æãÁöÑÂÆûÈôÖÊï∞ÊçÆÂÄº„ÄÇ ‚ë£ ‰ªé‰∏äËá≥‰∏ãÈÄíÂΩíËæìÂá∫ÂÆû‰æãÁöÑÊï∞ÊçÆ„ÄÇ ‰∫å„ÄÅJavaÂÆûÁé∞Â∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñÁöÑËøáÁ®ã1„ÄÅÂÆûÁé∞Â∫èÂàóÂåñÁöÑÂøÖÂ§áË¶ÅÊ±ÇÔºö‚Äã Âè™ÊúâÂÆûÁé∞‰∫ÜSerializableÊàñËÄÖExternalizableÊé•Âè£ÁöÑÁ±ªÁöÑÂØπË±°ÊâçËÉΩË¢´Â∫èÂàóÂåñ‰∏∫Â≠óËäÇÂ∫èÂàó„ÄÇÔºà‰∏çÊòØÂàô‰ºöÊäõÂá∫ÂºÇÂ∏∏Ôºâ 2„ÄÅJDK‰∏≠Â∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñÁöÑAPIÔºö ‚ë†java.io.ObjectInputStreamÔºöÂØπË±°ËæìÂÖ•ÊµÅ„ÄÇ ‚Äã ËØ•Á±ªÁöÑreadObject()ÊñπÊ≥ï‰ªéËæìÂÖ•ÊµÅ‰∏≠ËØªÂèñÂ≠óËäÇÂ∫èÂàóÔºåÁÑ∂ÂêéÂ∞ÜÂ≠óËäÇÂ∫èÂàóÂèçÂ∫èÂàóÂåñ‰∏∫‰∏Ä‰∏™ÂØπË±°Âπ∂ËøîÂõû„ÄÇ ‚ë°java.io.ObjectOutputStreamÔºöÂØπË±°ËæìÂá∫ÊµÅ„ÄÇ ‚Äã ËØ•Á±ªÁöÑwriteObject(Object obj)ÊñπÊ≥ïÂ∞ÜÂ∞Ü‰º†ÂÖ•ÁöÑobjÂØπË±°ËøõË°åÂ∫èÂàóÂåñÔºåÊääÂæóÂà∞ÁöÑÂ≠óËäÇÂ∫èÂàóÂÜôÂÖ•Âà∞ÁõÆÊ†áËæìÂá∫ÊµÅ‰∏≠ËøõË°åËæìÂá∫„ÄÇ 3„ÄÅÂÆûÁé∞Â∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñÁöÑ‰∏âÁßçÂÆûÁé∞Ôºö ‚ë†Ëã•StudentÁ±ª‰ªÖ‰ªÖÂÆûÁé∞‰∫ÜSerializableÊé•Âè£ÔºåÂàôÂèØ‰ª•ÊåâÁÖß‰ª•‰∏ãÊñπÂºèËøõË°åÂ∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñ„ÄÇ ‚Äã ObjectOutputStreamÈááÁî®ÈªòËÆ§ÁöÑÂ∫èÂàóÂåñÊñπÂºèÔºåÂØπStudentÂØπË±°ÁöÑÈùûtransientÁöÑÂÆû‰æãÂèòÈáèËøõË°åÂ∫èÂàóÂåñ„ÄÇ ‚Äã ObjcetInputStreamÈááÁî®ÈªòËÆ§ÁöÑÂèçÂ∫èÂàóÂåñÊñπÂºèÔºåÂØπStudentÂØπË±°ÁöÑÈùûtransientÁöÑÂÆû‰æãÂèòÈáèËøõË°åÂèçÂ∫èÂàóÂåñ„ÄÇ ‚ë°Ëã•StudentÁ±ª‰ªÖ‰ªÖÂÆûÁé∞‰∫ÜSerializableÊé•Âè£ÔºåÂπ∂‰∏îËøòÂÆö‰πâ‰∫ÜreadObject(ObjectInputStream in)ÂíåwriteObject(ObjectOutputSteam out)ÔºåÂàôÈááÁî®‰ª•‰∏ãÊñπÂºèËøõË°åÂ∫èÂàóÂåñ‰∏éÂèçÂ∫èÂàóÂåñ„ÄÇ ‚Äã ObjectOutputStreamË∞ÉÁî®StudentÂØπË±°ÁöÑwriteObject(ObjectOutputStream out)ÁöÑÊñπÊ≥ïËøõË°åÂ∫èÂàóÂåñ„ÄÇ ‚Äã ObjectInputStream‰ºöË∞ÉÁî®StudentÂØπË±°ÁöÑreadObject(ObjectInputStream in)ÁöÑÊñπÊ≥ïËøõË°åÂèçÂ∫èÂàóÂåñ„ÄÇ ‰∏â„ÄÅÂ∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñÁöÑÊ≥®ÊÑèÁÇπÔºö ‚ë†Â∫èÂàóÂåñÊó∂ÔºåÂè™ÂØπÂØπË±°ÁöÑÁä∂ÊÄÅËøõË°å‰øùÂ≠òÔºåËÄå‰∏çÁÆ°ÂØπË±°ÁöÑÊñπÊ≥ïÔºõ ‚ë°ÂΩì‰∏Ä‰∏™Áà∂Á±ªÂÆûÁé∞Â∫èÂàóÂåñÔºåÂ≠êÁ±ªËá™Âä®ÂÆûÁé∞Â∫èÂàóÂåñÔºå‰∏çÈúÄË¶ÅÊòæÂºèÂÆûÁé∞SerializableÊé•Âè£Ôºõ ‚ë¢ÂΩì‰∏Ä‰∏™ÂØπË±°ÁöÑÂÆû‰æãÂèòÈáèÂºïÁî®ÂÖ∂‰ªñÂØπË±°ÔºåÂ∫èÂàóÂåñËØ•ÂØπË±°Êó∂‰πüÊääÂºïÁî®ÂØπË±°ËøõË°åÂ∫èÂàóÂåñÔºõ ‚ë£Âπ∂ÈùûÊâÄÊúâÁöÑÂØπË±°ÈÉΩÂèØ‰ª•Â∫èÂàóÂåñÔºåËá≥‰∫é‰∏∫‰ªÄ‰πà‰∏çÂèØ‰ª•ÔºåÊúâÂæàÂ§öÂéüÂõ†‰∫ÜÔºåÊØîÂ¶ÇÔºö ÂÆâÂÖ®ÊñπÈù¢ÁöÑÂéüÂõ†ÔºåÊØîÂ¶Ç‰∏Ä‰∏™ÂØπË±°Êã•ÊúâprivateÔºåpublicÁ≠âfieldÔºåÂØπ‰∫é‰∏Ä‰∏™Ë¶Å‰º†ËæìÁöÑÂØπË±°ÔºåÊØîÂ¶ÇÂÜôÂà∞Êñá‰ª∂ÔºåÊàñËÄÖËøõË°åRMI‰º†ËæìÁ≠âÁ≠âÔºåÂú®Â∫èÂàóÂåñËøõË°å‰º†ËæìÁöÑËøáÁ®ã‰∏≠ÔºåËøô‰∏™ÂØπË±°ÁöÑprivateÁ≠âÂüüÊòØ‰∏çÂèó‰øùÊä§ÁöÑÔºõ ËµÑÊ∫êÂàÜÈÖçÊñπÈù¢ÁöÑÂéüÂõ†ÔºåÊØîÂ¶ÇsocketÔºåthreadÁ±ªÔºåÂ¶ÇÊûúÂèØ‰ª•Â∫èÂàóÂåñÔºåËøõË°å‰º†ËæìÊàñËÄÖ‰øùÂ≠òÔºå‰πüÊó†Ê≥ïÂØπ‰ªñ‰ª¨ËøõË°åÈáçÊñ∞ÁöÑËµÑÊ∫êÂàÜÈÖçÔºåËÄå‰∏îÔºå‰πüÊòØÊ≤°ÊúâÂøÖË¶ÅËøôÊ†∑ÂÆûÁé∞Ôºõ ‚ë§Â£∞Êòé‰∏∫staticÂíåtransientÁ±ªÂûãÁöÑÊàêÂëòÊï∞ÊçÆ‰∏çËÉΩË¢´Â∫èÂàóÂåñ„ÄÇÂõ†‰∏∫static‰ª£Ë°®Á±ªÁöÑÁä∂ÊÄÅÔºåtransient‰ª£Ë°®ÂØπË±°ÁöÑ‰∏¥Êó∂Êï∞ÊçÆ„ÄÇ ‚ë•Â∫èÂàóÂåñËøêË°åÊó∂‰ΩøÁî®‰∏Ä‰∏™Áß∞‰∏∫ serialVersionUID ÁöÑÁâàÊú¨Âè∑‰∏éÊØè‰∏™ÂèØÂ∫èÂàóÂåñÁ±ªÁõ∏ÂÖ≥ËÅîÔºåËØ•Â∫èÂàóÂè∑Âú®ÂèçÂ∫èÂàóÂåñËøáÁ®ã‰∏≠Áî®‰∫éÈ™åËØÅÂ∫èÂàóÂåñÂØπË±°ÁöÑÂèëÈÄÅËÄÖÂíåÊé•Êî∂ËÄÖÊòØÂê¶‰∏∫ËØ•ÂØπË±°Âä†ËΩΩ‰∫Ü‰∏éÂ∫èÂàóÂåñÂÖºÂÆπÁöÑÁ±ª„ÄÇ‰∏∫ÂÆÉËµã‰∫àÊòéÁ°ÆÁöÑÂÄº„ÄÇÊòæÂºèÂú∞ÂÆö‰πâserialVersionUIDÊúâ‰∏§ÁßçÁî®ÈÄîÔºö Âú®Êüê‰∫õÂú∫ÂêàÔºåÂ∏åÊúõÁ±ªÁöÑ‰∏çÂêåÁâàÊú¨ÂØπÂ∫èÂàóÂåñÂÖºÂÆπÔºåÂõ†Ê≠§ÈúÄË¶ÅÁ°Æ‰øùÁ±ªÁöÑ‰∏çÂêåÁâàÊú¨ÂÖ∑ÊúâÁõ∏ÂêåÁöÑserialVersionUIDÔºõ Âú®Êüê‰∫õÂú∫ÂêàÔºå‰∏çÂ∏åÊúõÁ±ªÁöÑ‰∏çÂêåÁâàÊú¨ÂØπÂ∫èÂàóÂåñÂÖºÂÆπÔºåÂõ†Ê≠§ÈúÄË¶ÅÁ°Æ‰øùÁ±ªÁöÑ‰∏çÂêåÁâàÊú¨ÂÖ∑Êúâ‰∏çÂêåÁöÑserialVersionUID„ÄÇ ‚ë¶JavaÊúâÂæàÂ§öÂü∫Á°ÄÁ±ªÂ∑≤ÁªèÂÆûÁé∞‰∫ÜserializableÊé•Âè£ÔºåÊØîÂ¶ÇString,VectorÁ≠â„ÄÇ‰ΩÜÊòØ‰πüÊúâ‰∏Ä‰∫õÊ≤°ÊúâÂÆûÁé∞serializableÊé•Âè£ÁöÑÔºõ ‚ëßÂ¶ÇÊûú‰∏Ä‰∏™ÂØπË±°ÁöÑÊàêÂëòÂèòÈáèÊòØ‰∏Ä‰∏™ÂØπË±°ÔºåÈÇ£‰πàËøô‰∏™ÂØπË±°ÁöÑÊï∞ÊçÆÊàêÂëò‰πü‰ºöË¢´‰øùÂ≠òÔºÅËøôÊòØËÉΩÁî®Â∫èÂàóÂåñËß£ÂÜ≥Ê∑±Êã∑Ë¥ùÁöÑÈáçË¶ÅÂéüÂõ†Ôºõ ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî ÁâàÊùÉÂ£∞ÊòéÔºöÊú¨Êñá‰∏∫CSDNÂçö‰∏ª„Äåtree_ifconfig„ÄçÁöÑÂéüÂàõÊñáÁ´†ÔºåÈÅµÂæ™CC 4.0 BY-SAÁâàÊùÉÂçèËÆÆÔºåËΩ¨ËΩΩËØ∑ÈôÑ‰∏äÂéüÊñáÂá∫Â§ÑÈìæÊé•ÂèäÊú¨Â£∞Êòé„ÄÇ ÂéüÊñáÈìæÊé•Ôºöhttps://blog.csdn.net/tree_ifconfig/article/details/82766587","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"leetcode-ÊéíÂàóÈóÆÈ¢ò","slug":"leetcode-ÊéíÂàóÈóÆÈ¢ò","date":"2021-08-15T16:00:00.000Z","updated":"2021-08-17T07:08:00.100Z","comments":true,"path":"2021/08/16/leetcode-ÊéíÂàóÈóÆÈ¢ò/","link":"","permalink":"http://example.com/2021/08/16/leetcode-%E6%8E%92%E5%88%97%E9%97%AE%E9%A2%98/","excerpt":"","text":"526. ‰ºòÁæéÁöÑÊéíÂàóÂÅáËÆæÊúâ‰ªé 1 Âà∞ N ÁöÑ N ‰∏™Êï¥Êï∞ÔºåÂ¶ÇÊûú‰ªéËøô N ‰∏™Êï∞Â≠ó‰∏≠ÊàêÂäüÊûÑÈÄ†Âá∫‰∏Ä‰∏™Êï∞ÁªÑÔºå‰ΩøÂæóÊï∞ÁªÑÁöÑÁ¨¨ i ‰Ωç (1 &lt;= i &lt;= N) Êª°Ë∂≥Â¶Ç‰∏ã‰∏§‰∏™Êù°‰ª∂‰∏≠ÁöÑ‰∏Ä‰∏™ÔºåÊàë‰ª¨Â∞±Áß∞Ëøô‰∏™Êï∞ÁªÑ‰∏∫‰∏Ä‰∏™‰ºòÁæéÁöÑÊéíÂàó„ÄÇÊù°‰ª∂Ôºö Á¨¨ i ‰ΩçÁöÑÊï∞Â≠óËÉΩË¢´ i Êï¥Èô§ i ËÉΩË¢´Á¨¨ i ‰Ωç‰∏äÁöÑÊï∞Â≠óÊï¥Èô§ Áé∞Âú®ÁªôÂÆö‰∏Ä‰∏™Êï¥Êï∞ NÔºåËØ∑ÈóÆÂèØ‰ª•ÊûÑÈÄ†Â§öÂ∞ë‰∏™‰ºòÁæéÁöÑÊéíÂàóÔºü Á§∫‰æã1: ËæìÂÖ•: 2 ËæìÂá∫: 2 Ëß£Èáä: Á¨¨ 1 ‰∏™‰ºòÁæéÁöÑÊéíÂàóÊòØ [1, 2]: Á¨¨ 1 ‰∏™‰ΩçÁΩÆÔºài=1Ôºâ‰∏äÁöÑÊï∞Â≠óÊòØ1Ôºå1ËÉΩË¢´ iÔºài=1ÔºâÊï¥Èô§ Á¨¨ 2 ‰∏™‰ΩçÁΩÆÔºài=2Ôºâ‰∏äÁöÑÊï∞Â≠óÊòØ2Ôºå2ËÉΩË¢´ iÔºài=2ÔºâÊï¥Èô§ Á¨¨ 2 ‰∏™‰ºòÁæéÁöÑÊéíÂàóÊòØ [2, 1]: Á¨¨ 1 ‰∏™‰ΩçÁΩÆÔºài=1Ôºâ‰∏äÁöÑÊï∞Â≠óÊòØ2Ôºå2ËÉΩË¢´ iÔºài=1ÔºâÊï¥Èô§ Á¨¨ 2 ‰∏™‰ΩçÁΩÆÔºài=2Ôºâ‰∏äÁöÑÊï∞Â≠óÊòØ1ÔºåiÔºài=2ÔºâËÉΩË¢´ 1 Êï¥Èô§ ËØ¥Êòé: N ÊòØ‰∏Ä‰∏™Ê≠£Êï¥Êï∞ÔºåÂπ∂‰∏î‰∏ç‰ºöË∂ÖËøá15„ÄÇ Áü•ËØÜÁÇπÔºöÂõûÊ∫ØÂàÜÊûêÔºöÈ¢òÁõÆÁöÑÊÑèÊÄùÊòØÔºå‰ªªÊÑè‰ΩçÁΩÆÁöÑÁ¨¨i‰ΩçÔºåÈÉΩË¶ÅÊª°Ë∂≥‰∏§‰∏™Êù°‰ª∂‰πã‰∏ÄÔºõ ÈááÁî®ÂõûÊ∫ØÂØπÊú¨È¢òËøõË°åËß£Á≠îÔºàËøòÊúâÁä∂ÊÄÅÂéãÁº©ÔºåËøô‰∏™ÊàëËøòÊ≤°ÊéåÊè°ÔºâÔºåÊàë‰ª¨‰ªéÁ¨¨‰∏Ä‰∏™‰ΩçÁΩÆÂºÄÂßãÊâæÔºåÂú®Á¨¨‰∏Ä‰∏™‰ΩçÁΩÆÊó∂ÈÅçÂéÜÊØè‰∏™Êï∞Â≠óÔºåÂ¶ÇÊûúÂΩìÂâçÊï∞Â≠óÊª°Ë∂≥Ë¶ÅÊ±ÇÔºåÂ∞±Â∞ÜÂΩìÂâçÊï∞Â≠óÁöÑÁä∂ÊÄÅËÆ∞‰∏∫Â∑≤‰ΩøÁî®ÔºåÁÑ∂ÂêéÂú®Ê≠§Âü∫Á°Ä‰πã‰∏äÂØπ‰∏ã‰∏Ä‰∏™‰ΩçÁΩÆËøõË°åÈÄíÂΩíÊü•ÊâæÔºõÂú®ÂΩìÂâçÈÅçÂéÜÁöÑÊï∞Â≠óÊó∂ÔºåÂú®ÂØπ‰∏ã‰∏Ä‰∏™‰ΩçÁΩÆËøõË°åÈÄíÂΩíÊü•Êâæ‰πãÂêéÔºåÂÜçÂ∞ÜÂΩìÂâçÊï∞Â≠óÁä∂ÊÄÅÊîπ‰∏∫Êú™‰ΩøÁî®„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819class Solution &#123; public int countArrangement(int n) &#123; return dfs(1,n,new boolean[n+1]); &#125; public int dfs(int index,int n,boolean[] vis)&#123; if(index&gt;n)&#123; return 1; &#125; int res = 0; for(int i=1;i&lt;=n;i++)&#123; if(!vis[i]&amp;&amp;(i%index==0||index%i==0))&#123; vis[i] = true; res+=dfs(index+1,n,vis); vis[i] = false; &#125; &#125; return res; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ÂõûÊ∫Ø","slug":"ÂõûÊ∫Ø","permalink":"http://example.com/tags/%E5%9B%9E%E6%BA%AF/"}]},{"title":"leetcode‰∏çÂºÄÂøÉÁöÑ‰∫∫","slug":"leetcode-‰∏çÂºÄÂøÉÁöÑ‰∫∫","date":"2021-08-13T16:00:00.000Z","updated":"2021-08-14T02:23:49.885Z","comments":true,"path":"2021/08/14/leetcode-‰∏çÂºÄÂøÉÁöÑ‰∫∫/","link":"","permalink":"http://example.com/2021/08/14/leetcode-%E4%B8%8D%E5%BC%80%E5%BF%83%E7%9A%84%E4%BA%BA/","excerpt":"","text":"Áªô‰Ω†‰∏Ä‰ªΩ n ‰ΩçÊúãÂèãÁöÑ‰∫≤ËøëÁ®ãÂ∫¶ÂàóË°®ÔºåÂÖ∂‰∏≠ n ÊÄªÊòØ ÂÅ∂Êï∞ „ÄÇ ÂØπÊØè‰ΩçÊúãÂèã iÔºåpreferences[i] ÂåÖÂê´‰∏Ä‰ªΩ Êåâ‰∫≤ËøëÁ®ãÂ∫¶‰ªéÈ´òÂà∞‰ΩéÊéíÂàó ÁöÑÊúãÂèãÂàóË°®„ÄÇÊç¢Âè•ËØùËØ¥ÔºåÊéíÂú®ÂàóË°®ÂâçÈù¢ÁöÑÊúãÂèã‰∏é i ÁöÑ‰∫≤ËøëÁ®ãÂ∫¶ÊØîÊéíÂú®ÂàóË°®ÂêéÈù¢ÁöÑÊúãÂèãÊõ¥È´ò„ÄÇÊØè‰∏™ÂàóË°®‰∏≠ÁöÑÊúãÂèãÂùá‰ª• 0 Âà∞ n-1 ‰πãÈó¥ÁöÑÊï¥Êï∞Ë°®Á§∫„ÄÇ ÊâÄÊúâÁöÑÊúãÂèãË¢´ÂàÜÊàêÂá†ÂØπÔºåÈÖçÂØπÊÉÖÂÜµ‰ª•ÂàóË°® pairs ÁªôÂá∫ÔºåÂÖ∂‰∏≠ pairs[i] = [xi, yi] Ë°®Á§∫ xi ‰∏é yi ÈÖçÂØπÔºå‰∏î yi ‰∏é xi ÈÖçÂØπ„ÄÇ ‰ΩÜÊòØÔºåËøôÊ†∑ÁöÑÈÖçÂØπÊÉÖÂÜµÂèØËÉΩ‰ºöÊòØÂÖ∂‰∏≠ÈÉ®ÂàÜÊúãÂèãÊÑüÂà∞‰∏çÂºÄÂøÉ„ÄÇÂú® x ‰∏é y ÈÖçÂØπ‰∏î u ‰∏é v ÈÖçÂØπÁöÑÊÉÖÂÜµ‰∏ãÔºåÂ¶ÇÊûúÂêåÊó∂Êª°Ë∂≥‰∏ãËø∞‰∏§‰∏™Êù°‰ª∂Ôºåx Â∞±‰ºö‰∏çÂºÄÂøÉÔºö x ‰∏é u ÁöÑ‰∫≤ËøëÁ®ãÂ∫¶ËÉúËøá x ‰∏é yÔºå‰∏î u ‰∏é x ÁöÑ‰∫≤ËøëÁ®ãÂ∫¶ËÉúËøá u ‰∏é v ËøîÂõû ‰∏çÂºÄÂøÉÁöÑÊúãÂèãÁöÑÊï∞ÁõÆ „ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºön = 4, preferences = [[1, 2, 3], [3, 2, 0], [3, 1, 0], [1, 2, 0]], pairs = [[0, 1], [2, 3]] ËæìÂá∫Ôºö2 Ëß£ÈáäÔºö ÊúãÂèã 1 ‰∏çÂºÄÂøÉÔºåÂõ†‰∏∫Ôºö - 1 ‰∏é 0 ÈÖçÂØπÔºå‰ΩÜ 1 ‰∏é 3 ÁöÑ‰∫≤ËøëÁ®ãÂ∫¶ÊØî 1 ‰∏é 0 È´òÔºå‰∏î - 3 ‰∏é 1 ÁöÑ‰∫≤ËøëÁ®ãÂ∫¶ÊØî 3 ‰∏é 2 È´ò„ÄÇ ÊúãÂèã 3 ‰∏çÂºÄÂøÉÔºåÂõ†‰∏∫Ôºö - 3 ‰∏é 2 ÈÖçÂØπÔºå‰ΩÜ 3 ‰∏é 1 ÁöÑ‰∫≤ËøëÁ®ãÂ∫¶ÊØî 3 ‰∏é 2 È´òÔºå‰∏î - 1 ‰∏é 3 ÁöÑ‰∫≤ËøëÁ®ãÂ∫¶ÊØî 1 ‰∏é 0 È´ò„ÄÇ ÊúãÂèã 0 Âíå 2 ÈÉΩÊòØÂºÄÂøÉÁöÑ„ÄÇ Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºön = 2, preferences = [[1], [0]], pairs = [[1, 0]] ËæìÂá∫Ôºö0 Ëß£ÈáäÔºöÊúãÂèã 0 Âíå 1 ÈÉΩÂºÄÂøÉ„ÄÇ Á§∫‰æã 3Ôºö ËæìÂÖ•Ôºön = 4, preferences = [[1, 3, 2], [2, 3, 0], [1, 3, 0], [0, 2, 1]], pairs = [[1, 3], [0, 2]] ËæìÂá∫Ôºö4 Áü•ËØÜÁÇπÔºöÊ®°ÊãüÂàÜÊûêÔºö‰ªÄ‰πàÊòØ‰∏çÂºÄÂøÉÁöÑ‰∫∫ÔºöÂ∞èaÂíåÂ∞èbÈÖçÂØπÔºåÂ∞ècÂíåÂ∞èdÈÖçÂØπÔºå‰ΩÜÊòØÔºåac‰∫≤ÂØÜÂ∫¶È´ò‰∫éabÔºå‰∏îac‰∫≤ÂØÜÂ∫¶È´ò‰∫écdÔºåÈÇ£‰πàÔºåaÂ∞±‰∏çÂºÄÂøÉ„ÄÇÈúÄË¶ÅÈ¢ÑÂÖàÂáÜÂ§áÁöÑÊï∞ÊçÆÔºöÈúÄË¶Å‰ª•OÔºà1ÔºâÁöÑÂ§çÊùÇÂ∫¶Áü•ÈÅìÂíåxÈÖçÂØπÁöÑ‰∫∫ÊòØË∞ÅÔºõÈúÄË¶ÅÁü•ÈÅìabÁöÑ‰∫≤ÂØÜÁ®ãÂ∫¶„ÄÇ ÂÖ∑‰ΩìÂÅöÊ≥ïÔºöÂØπ‰∫éÊØè‰∏™‰∫∫ÔºåÂ≠òÂÇ®ÂÖ∂‰ªñ‰∫∫ÂØπ‰ªñËÄåË®ÄÁöÑ‰∫≤ÂØÜÂ∫¶‰∏ãÊ†áÔºå‰∏ãÊ†áË∂äÂ∞èË∂ä‰∫≤ÂØÜÔºõËÆ∞ÂΩïÊØè‰∏™‰∫∫ÁöÑÈÖçÂØπÊÉÖÂÜµ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718192021222324252627282930class Solution &#123; public int unhappyFriends(int n, int[][] preferences, int[][] pairs) &#123; int[][] order = new int[n][n]; for(int i=0;i&lt;n;i++)&#123; for(int j = 0;j&lt;n-1;j++)&#123; order[i][preferences[i][j]] = j; &#125; &#125; int[] match = new int[n]; for(int[] pair:pairs)&#123; int p1 = pair[0],p2 = pair[1]; match[p1] = p2; match[p2] = p1; &#125; int count = 0; for(int x=0;x&lt;n;x++)&#123; int y = match[x]; int index = order[x][y]; for(int i=0;i&lt;index;i++)&#123; int u = preferences[x][i]; int v = match[u]; if(order[u][x]&lt;order[u][v])&#123; count++; break; &#125; &#125; &#125; return count; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://example.com/tags/%E6%A8%A1%E6%8B%9F/"}]},{"title":"leetcodeÊï∞Â≠ó1ÁöÑ‰∏™Êï∞","slug":"leetcode-Êï∞Â≠ó1ÁöÑ‰∏™Êï∞","date":"2021-08-12T16:00:00.000Z","updated":"2021-08-13T02:22:16.866Z","comments":true,"path":"2021/08/13/leetcode-Êï∞Â≠ó1ÁöÑ‰∏™Êï∞/","link":"","permalink":"http://example.com/2021/08/13/leetcode-%E6%95%B0%E5%AD%971%E7%9A%84%E4%B8%AA%E6%95%B0/","excerpt":"","text":"ÁªôÂÆö‰∏Ä‰∏™Êï¥Êï∞ nÔºåËÆ°ÁÆóÊâÄÊúâÂ∞è‰∫éÁ≠â‰∫é n ÁöÑÈùûË¥üÊï¥Êï∞‰∏≠Êï∞Â≠ó 1 Âá∫Áé∞ÁöÑ‰∏™Êï∞„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºön = 13 ËæìÂá∫Ôºö6 Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºön = 0 ËæìÂá∫Ôºö0 Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàíÂàÜÊûêÔºöÈ¢òËß£‰ªéÊØè‰∏™Êï∞‰ΩçÂèØËÉΩÂá∫Áé∞1ÁöÑÊÉÖÂÜµÂÅö‰∫ÜÂàÜÊûêÔºåËøõËÄåÊé®ÂπøÂà∞ÊØè‰∏™Êï∞‰ΩçÔºõÊúÄÂêéÂ∞ÜÊØè‰∏™Êï∞‰ΩçÂá∫Áé∞1ÁöÑ‰∏™Êï∞Áõ∏Âä†Ëµ∑Êù•„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011class Solution &#123; public int countDigitOne(int n) &#123; long mulk = 1; int ans = 0; for(int k =0;n&gt;=mulk;k++)&#123; ans += (n/(mulk*10))*mulk+Math.min(Math.max(n%(mulk*10)-mulk+1,0),mulk); mulk*=10; &#125; return ans; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"}]},{"title":"leetcode-‰∫åÂèâÊ†ëÁöÑÂè≥ËßÜÂõæ","slug":"leetcode-‰∫åÂèâÊ†ëÁöÑÂè≥ËßÜÂõæ","date":"2021-08-10T16:00:00.000Z","updated":"2021-08-11T01:52:50.780Z","comments":true,"path":"2021/08/11/leetcode-‰∫åÂèâÊ†ëÁöÑÂè≥ËßÜÂõæ/","link":"","permalink":"http://example.com/2021/08/11/leetcode-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%8F%B3%E8%A7%86%E5%9B%BE/","excerpt":"","text":"ÁªôÂÆö‰∏ÄÊ£µ‰∫åÂèâÊ†ëÔºåÊÉ≥Ë±°Ëá™Â∑±Á´ôÂú®ÂÆÉÁöÑÂè≥‰æßÔºåÊåâÁÖß‰ªéÈ°∂ÈÉ®Âà∞Â∫ïÈÉ®ÁöÑÈ°∫Â∫èÔºåËøîÂõû‰ªéÂè≥‰æßÊâÄËÉΩÁúãÂà∞ÁöÑËäÇÁÇπÂÄº„ÄÇ Áü•ËØÜÁÇπÔºöbfs„ÄÅdfs„ÄÅÊ†ëÂàÜÊûêÔºöÊú¨È¢òÂèØÁî®dfsÊàñbfs‰∏§ÁßçËß£Ê≥ïÔºåbfsÁöÑËØùÔºåÂ∞±ÊòØÊØèÂ±ÇÈÅçÂéÜÂà∞ÊúÄÂêé‰∏Ä‰∏™ËäÇÁÇπÁöÑÊó∂ÂÄôÔºåÂ∞ÜËØ•ËäÇÁÇπÁöÑÂÄºÂä†ÂÖ•ËøîÂõûÈòüÂàóÔºõdfsÁöÑËØùÔºåÊåâÁÖßÊ†π-&gt;Âè≥Â≠êÊ†ë-&gt;Â∑¶Â≠êÊ†ëÁöÑÈ°∫Â∫èÊù•ÔºåÊØèÂΩìÊ∑±Â∫¶Êõ¥Êñ∞Êó∂ÔºåÂ∞±ÊääÁ¨¨‰∏Ä‰∏™ÈÅçÂéÜÂà∞ÁöÑËäÇÁÇπÁöÑÂÄºÂä†ÂÖ•ËøîÂõûÂÄº„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364/** * Definition for a binary tree node. * public class TreeNode &#123; * int val; * TreeNode left; * TreeNode right; * TreeNode() &#123;&#125; * TreeNode(int val) &#123; this.val = val; &#125; * TreeNode(int val, TreeNode left, TreeNode right) &#123; * this.val = val; * this.left = left; * this.right = right; * &#125; * &#125; *///BFSclass Solution &#123; public List&lt;Integer&gt; rightSideView(TreeNode root) &#123; List&lt;Integer&gt; res= new ArrayList&lt;&gt;(); Queue&lt;TreeNode&gt; nodes=new LinkedList&lt;&gt;(); if(root!=null)&#123; nodes.add(root); &#125; while(!nodes.isEmpty())&#123; int size=nodes.size(); for(int i=0;i&lt;size;i++)&#123; TreeNode tmpNode=nodes.poll(); if(tmpNode.left!=null)&#123; nodes.offer(tmpNode.left); &#125; if(tmpNode.right!=null)&#123; nodes.offer(tmpNode.right); &#125; if(i==size-1)&#123; res.add(tmpNode.val); &#125; &#125; &#125; return res; &#125;&#125;//DFSclass Solution &#123; List&lt;Integer&gt; res=new ArrayList&lt;&gt;(); public List&lt;Integer&gt; rightSideView(TreeNode root) &#123; int dept=0; dfs(root,0); return res; &#125; public void dfs(TreeNode node,int dept)&#123; if(node==null)&#123; return; &#125; if(dept==res.size())&#123;//Â¶ÇÊûúÂΩìÂâçÊ∑±Â∫¶ÂíåËøîÂõûÂÄºÊï∞ÈáèÁõ∏Á≠âÔºåËØ¥ÊòéÊú™ÂåÖÂê´ËØ•Â±Ç res.add(node.val); &#125; dept++; dfs(node.right,dept); dfs(node.left,dept); &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"dfs„ÄÅbfs","slug":"dfs„ÄÅbfs","permalink":"http://example.com/tags/dfs%E3%80%81bfs/"}]},{"title":"leetcode-Á≠âÂ∑ÆÊï∞Âàó","slug":"leetcode-Á≠âÂ∑ÆÊï∞Âàó","date":"2021-08-09T16:00:00.000Z","updated":"2021-08-11T01:38:52.419Z","comments":true,"path":"2021/08/10/leetcode-Á≠âÂ∑ÆÊï∞Âàó/","link":"","permalink":"http://example.com/2021/08/10/leetcode-%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97/","excerpt":"","text":"413. Á≠âÂ∑ÆÊï∞ÂàóÂàíÂàÜÂ¶ÇÊûú‰∏Ä‰∏™Êï∞Âàó Ëá≥Â∞ëÊúâ‰∏â‰∏™ÂÖÉÁ¥† ÔºåÂπ∂‰∏î‰ªªÊÑè‰∏§‰∏™Áõ∏ÈÇªÂÖÉÁ¥†‰πãÂ∑ÆÁõ∏ÂêåÔºåÂàôÁß∞ËØ•Êï∞Âàó‰∏∫Á≠âÂ∑ÆÊï∞Âàó„ÄÇ ‰æãÂ¶ÇÔºå[1,3,5,7,9]„ÄÅ[7,7,7,7] Âíå [3,-1,-5,-9] ÈÉΩÊòØÁ≠âÂ∑ÆÊï∞Âàó„ÄÇ Áªô‰Ω†‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑ nums ÔºåËøîÂõûÊï∞ÁªÑ nums ‰∏≠ÊâÄÊúâ‰∏∫Á≠âÂ∑ÆÊï∞ÁªÑÁöÑÂ≠êÊï∞ÁªÑ‰∏™Êï∞„ÄÇ Â≠êÊï∞ÁªÑ ÊòØÊï∞ÁªÑ‰∏≠ÁöÑ‰∏Ä‰∏™ËøûÁª≠Â∫èÂàó„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºönums = [1,2,3,4] ËæìÂá∫Ôºö3 Ëß£ÈáäÔºönums ‰∏≠Êúâ‰∏â‰∏™Â≠êÁ≠âÂ∑ÆÊï∞ÁªÑÔºö[1, 2, 3]„ÄÅ[2, 3, 4] Âíå [1,2,3,4] Ëá™Ë∫´„ÄÇ Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºönums = [1] ËæìÂá∫Ôºö0 ÊèêÁ§∫Ôºö 1 &lt;= nums.length &lt;= 5000 -1000 &lt;= nums[i] &lt;= 1000 Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàíÂàÜÊûêÔºöËøô‰∏™ÁúãÁúãÈ¢òËß£ÂêßÔºåÊàëÊ≤°ÊúâÈúÄË¶ÅË°•ÂÖÖÁöÑ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718class Solution &#123; public int numberOfArithmeticSlices(int[] nums) &#123; int len = nums.length; if(len&lt;3)&#123; return 0; &#125; int dp = 0,count = 0; for(int i=2;i&lt;len;i++)&#123; if(nums[i-2]-nums[i-1]==nums[i-1]-nums[i])&#123; ++dp; &#125;else&#123; dp = 0; &#125; count += dp; &#125; return count; &#125;&#125; 446. Á≠âÂ∑ÆÊï∞ÂàóÂàíÂàÜ II - Â≠êÂ∫èÂàóÁªô‰Ω†‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑ nums ÔºåËøîÂõû nums ‰∏≠ÊâÄÊúâ Á≠âÂ∑ÆÂ≠êÂ∫èÂàó ÁöÑÊï∞ÁõÆ„ÄÇ Â¶ÇÊûú‰∏Ä‰∏™Â∫èÂàó‰∏≠ Ëá≥Â∞ëÊúâ‰∏â‰∏™ÂÖÉÁ¥† ÔºåÂπ∂‰∏î‰ªªÊÑè‰∏§‰∏™Áõ∏ÈÇªÂÖÉÁ¥†‰πãÂ∑ÆÁõ∏ÂêåÔºåÂàôÁß∞ËØ•Â∫èÂàó‰∏∫Á≠âÂ∑ÆÂ∫èÂàó„ÄÇ ‰æãÂ¶ÇÔºå[1, 3, 5, 7, 9]„ÄÅ[7, 7, 7, 7] Âíå [3, -1, -5, -9] ÈÉΩÊòØÁ≠âÂ∑ÆÂ∫èÂàó„ÄÇ ÂÜç‰æãÂ¶ÇÔºå[1, 1, 2, 5, 7] ‰∏çÊòØÁ≠âÂ∑ÆÂ∫èÂàó„ÄÇ Êï∞ÁªÑ‰∏≠ÁöÑÂ≠êÂ∫èÂàóÊòØ‰ªéÊï∞ÁªÑ‰∏≠Âà†Èô§‰∏Ä‰∫õÂÖÉÁ¥†Ôºà‰πüÂèØËÉΩ‰∏çÂà†Èô§ÔºâÂæóÂà∞ÁöÑ‰∏Ä‰∏™Â∫èÂàó„ÄÇ ‰æãÂ¶ÇÔºå[2,5,10] ÊòØ [1,2,1,2,4,1,5,10] ÁöÑ‰∏Ä‰∏™Â≠êÂ∫èÂàó„ÄÇ È¢òÁõÆÊï∞ÊçÆ‰øùËØÅÁ≠îÊ°àÊòØ‰∏Ä‰∏™ 32-bit Êï¥Êï∞„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºönums = [2,4,6,8,10] ËæìÂá∫Ôºö7 Ëß£ÈáäÔºöÊâÄÊúâÁöÑÁ≠âÂ∑ÆÂ≠êÂ∫èÂàó‰∏∫Ôºö [2,4,6] [4,6,8] [6,8,10] [2,4,6,8] [4,6,8,10] [2,4,6,8,10] [2,6,10] Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºönums = [7,7,7,7,7] ËæìÂá∫Ôºö16 Ëß£ÈáäÔºöÊï∞ÁªÑ‰∏≠ÁöÑ‰ªªÊÑèÂ≠êÂ∫èÂàóÈÉΩÊòØÁ≠âÂ∑ÆÂ≠êÂ∫èÂàó„ÄÇ ÊèêÁ§∫Ôºö 1 &lt;= nums.length &lt;= 1000 -231 &lt;= nums[i] &lt;= 231 - 1 Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàíÂàÜÊûêÔºöËøôÊòØ‰∏ä‰∏ÄÈÅìÈ¢òÁõÆÁöÑËøõÈò∂ÁâàÔºöÂ≠êÂ∫èÂàóÂèØ‰ª•ÊòØ‰∏çËøûÁª≠ÁöÑ„ÄÇÊå∫Â§çÊùÇÁöÑÔºåÁúãÁúãÈ¢òËß£Âêß„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718class Solution &#123; public int numberOfArithmeticSlices(int[] nums) &#123; int ans = 0,len = nums.length; Map&lt;Long,Integer&gt;[] hash = new Map[len]; for(int i=0;i&lt;len;i++)&#123; hash[i] = new HashMap&lt;Long,Integer&gt;(); &#125; for(int i=0;i&lt;len;i++)&#123; for(int j = 0;j&lt;i;j++)&#123; long d = 1L*nums[i]-nums[j]; int count = hash[j].getOrDefault(d, 0); ans+=count; hash[i].put(d,hash[i].getOrDefault(d, 0)+count+1); &#125; &#125; return ans; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"}]},{"title":"leetcode-‰∏ëÊï∞","slug":"leetcode-‰∏ëÊï∞","date":"2021-08-08T16:00:00.000Z","updated":"2021-08-09T02:57:43.989Z","comments":true,"path":"2021/08/09/leetcode-‰∏ëÊï∞/","link":"","permalink":"http://example.com/2021/08/09/leetcode-%E4%B8%91%E6%95%B0/","excerpt":"","text":"263. ‰∏ëÊï∞Áªô‰Ω†‰∏Ä‰∏™Êï¥Êï∞ n ÔºåËØ∑‰Ω†Âà§Êñ≠ n ÊòØÂê¶‰∏∫ ‰∏ëÊï∞ „ÄÇÂ¶ÇÊûúÊòØÔºåËøîÂõû true ÔºõÂê¶ÂàôÔºåËøîÂõû false „ÄÇ ‰∏ëÊï∞ Â∞±ÊòØÂè™ÂåÖÂê´Ë¥®Âõ†Êï∞ 2„ÄÅ3 Âíå/Êàñ 5 ÁöÑÊ≠£Êï¥Êï∞„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºön = 6 ËæìÂá∫Ôºötrue Ëß£ÈáäÔºö6 = 2 √ó 3 Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºön = 8 ËæìÂá∫Ôºötrue Ëß£ÈáäÔºö8 = 2 √ó 2 √ó 2 Á§∫‰æã 3Ôºö ËæìÂÖ•Ôºön = 14 ËæìÂá∫Ôºöfalse Ëß£ÈáäÔºö14 ‰∏çÊòØ‰∏ëÊï∞ÔºåÂõ†‰∏∫ÂÆÉÂåÖÂê´‰∫ÜÂè¶Â§ñ‰∏Ä‰∏™Ë¥®Âõ†Êï∞ 7 „ÄÇ Á§∫‰æã 4Ôºö ËæìÂÖ•Ôºön = 1 ËæìÂá∫Ôºötrue Ëß£ÈáäÔºö1 ÈÄöÂ∏∏Ë¢´ËßÜ‰∏∫‰∏ëÊï∞„ÄÇ Áü•ËØÜÁÇπÔºödfsÂàÜÊûêÔºöÁÆÄÂçïÈ¢òÁõÆÔºåÊ≤°Âï•Â•ΩÂàÜÊûêÁöÑ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223class Solution &#123; public boolean isUgly(int n) &#123; return dfs(n); &#125; public boolean dfs(int n)&#123; if(n==1)&#123; return true; &#125; if(n==0)&#123; return false; &#125; if(n%2==0)&#123; return dfs(n/2); &#125; if(n%3==0)&#123; return dfs(n/3); &#125; if(n%5==0)&#123; return dfs(n/5); &#125; return false; &#125;&#125; 264. ‰∏ëÊï∞ IIÁªô‰Ω†‰∏Ä‰∏™Êï¥Êï∞ n ÔºåËØ∑‰Ω†ÊâæÂá∫Âπ∂ËøîÂõûÁ¨¨ n ‰∏™ ‰∏ëÊï∞ „ÄÇ ‰∏ëÊï∞ Â∞±ÊòØÂè™ÂåÖÂê´Ë¥®Âõ†Êï∞ 2„ÄÅ3 Âíå/Êàñ 5 ÁöÑÊ≠£Êï¥Êï∞„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºön = 10 ËæìÂá∫Ôºö12 Ëß£ÈáäÔºö[1, 2, 3, 4, 5, 6, 8, 9, 10, 12] ÊòØÁî±Ââç 10 ‰∏™‰∏ëÊï∞ÁªÑÊàêÁöÑÂ∫èÂàó„ÄÇ Áü•ËØÜÁÇπÔºödpÂàÜÊûêÔºöËøô‰∏™ÂèØ‰ª•Áî®dpËß£ÂÜ≥Ôºå‰πü‰∏çÂ§çÊùÇ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728public class Solution &#123; public int nthUglyNumber(int n) &#123; int[] res = new int[n+1]; res[1]=1; //Ëøô‰∏™‰∏â‰∏™dpÊòØÊåáÈíàÔºå‰ª£Ë°®‰ΩçÁΩÆ int dp2=1,dp3=1,dp5=1; int num2,num3,num5; for(int i=2;i&lt;=n;i++)&#123; num2=res[dp2]*2; num3=res[dp3]*3; num5=res[dp5]*5; int num=Math.min(Math.min(num2, num3),num5); if(num==num2)&#123; res[i]=num2; dp2++; &#125; if(num==num3)&#123; res[i]=num3; dp3++; &#125; if(num==num5)&#123; res[i]=num5; dp5++; &#125; &#125; return res[n]; &#125;&#125; 313. Ë∂ÖÁ∫ß‰∏ëÊï∞Ë∂ÖÁ∫ß‰∏ëÊï∞ ÊòØ‰∏Ä‰∏™Ê≠£Êï¥Êï∞ÔºåÂπ∂Êª°Ë∂≥ÂÖ∂ÊâÄÊúâË¥®Âõ†Êï∞ÈÉΩÂá∫Áé∞Âú®Ë¥®Êï∞Êï∞ÁªÑ primes ‰∏≠„ÄÇ Áªô‰Ω†‰∏Ä‰∏™Êï¥Êï∞ n Âíå‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑ primes ÔºåËøîÂõûÁ¨¨ n ‰∏™ Ë∂ÖÁ∫ß‰∏ëÊï∞ „ÄÇ È¢òÁõÆÊï∞ÊçÆ‰øùËØÅÁ¨¨ n ‰∏™ Ë∂ÖÁ∫ß‰∏ëÊï∞ Âú® 32-bit Â∏¶Á¨¶Âè∑Êï¥Êï∞ËåÉÂõ¥ÂÜÖ„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºön = 12, primes = [2,7,13,19] ËæìÂá∫Ôºö32 Ëß£ÈáäÔºöÁªôÂÆöÈïøÂ∫¶‰∏∫ 4 ÁöÑË¥®Êï∞Êï∞ÁªÑ primes = [2,7,13,19]ÔºåÂâç 12 ‰∏™Ë∂ÖÁ∫ß‰∏ëÊï∞Â∫èÂàó‰∏∫Ôºö[1,2,4,7,8,13,14,16,19,26,28,32] „ÄÇ Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºön = 1, primes = [2,3,5] ËæìÂá∫Ôºö1 Ëß£ÈáäÔºö1 ‰∏çÂê´Ë¥®Âõ†Êï∞ÔºåÂõ†Ê≠§ÂÆÉÁöÑÊâÄÊúâË¥®Âõ†Êï∞ÈÉΩÂú®Ë¥®Êï∞Êï∞ÁªÑ primes = [2,3,5] ‰∏≠„ÄÇ ÊèêÁ§∫Ôºö 1 &lt;= n &lt;= 106 1 &lt;= primes.length &lt;= 100 2 &lt;= primes[i] &lt;= 1000 È¢òÁõÆÊï∞ÊçÆ ‰øùËØÅ primes[i] ÊòØ‰∏Ä‰∏™Ë¥®Êï∞ primes ‰∏≠ÁöÑÊâÄÊúâÂÄºÈÉΩ ‰∫í‰∏çÁõ∏Âêå Ôºå‰∏îÊåâ ÈÄíÂ¢ûÈ°∫Â∫è ÊéíÂàó Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàíÂàÜÊûêÔºöËøô‰∏™Âíå‰∏ëÊï∞IIÂ¶ÇÂá∫‰∏ÄËæôÔºåÂè™ÊúâË¥®Âõ†Êï∞ÁöÑ‰∏™Êï∞ÂèòÂåñ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425class Solution &#123; public int nthSuperUglyNumber(int n, int[] primes) &#123; int len = primes.length; int[] indexes = new int[len]; Arrays.fill(indexes,1); int[] res = new int[n+1]; res[1] = 1; for(int i=2;i&lt;=n;i++)&#123; int[] tmpNums = new int[len]; int min = Integer.MAX_VALUE; for(int j=0;j&lt;len;j++)&#123; tmpNums[j] = res[indexes[j]]*primes[j]; min = Math.min(min,tmpNums[j]); &#125; res[i] = min; //ËøôÈáåË¶Å‰∏Ä‰∏™‰∏™Ê£ÄÊü•ÔºåÊâÄÊúâÂíåÊúÄÂ∞èÂÄºÁõ∏Á≠âÁöÑÁ¥¢ÂºïÈÉΩË¶Å++ for(int j=0;j&lt;len;j++)&#123; if(tmpNums[j]==min)&#123; indexes[j]++; &#125; &#125; &#125; return res[n]; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"}]},{"title":"leetcode-Ê≥∞Ê≥¢ÈÇ£Â•ë","slug":"leetcode-Ê≥∞Ê≥¢ÈÇ£Â•ë","date":"2021-08-07T16:00:00.000Z","updated":"2021-08-08T02:18:41.136Z","comments":true,"path":"2021/08/08/leetcode-Ê≥∞Ê≥¢ÈÇ£Â•ë/","link":"","permalink":"http://example.com/2021/08/08/leetcode-%E6%B3%B0%E6%B3%A2%E9%82%A3%E5%A5%91/","excerpt":"","text":"1137. Á¨¨ N ‰∏™Ê≥∞Ê≥¢ÈÇ£Â•ëÊï∞Ê≥∞Ê≥¢ÈÇ£Â•ëÂ∫èÂàó Tn ÂÆö‰πâÂ¶Ç‰∏ãÔºö T0 = 0, T1 = 1, T2 = 1, ‰∏îÂú® n &gt;= 0 ÁöÑÊù°‰ª∂‰∏ã Tn+3 = Tn + Tn+1 + Tn+2 Áªô‰Ω†Êï¥Êï∞ nÔºåËØ∑ËøîÂõûÁ¨¨ n ‰∏™Ê≥∞Ê≥¢ÈÇ£Â•ëÊï∞ Tn ÁöÑÂÄº„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºön = 4 ËæìÂá∫Ôºö4 Ëß£ÈáäÔºö T_3 = 0 + 1 + 1 = 2 T_4 = 1 + 1 + 2 = 4 Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºön = 25 ËæìÂá∫Ôºö1389537 ÊèêÁ§∫Ôºö 0 &lt;= n &lt;= 37 Á≠îÊ°à‰øùËØÅÊòØ‰∏Ä‰∏™ 32 ‰ΩçÊï¥Êï∞ÔºåÂç≥ answer &lt;= 2^31 - 1„ÄÇ Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàíÂàÜÊûêÔºöÊ≥®ÊÑè‰ºòÂåñÊó∂Èó¥„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718class Solution &#123; public int tribonacci(int n) &#123; if(n==0)&#123; return 0; &#125; if(n&lt;=2)&#123; return 1; &#125; int fir = 0,sec = 0,thr = 1,ans = 1; for(int i=3;i&lt;=n;i++)&#123; fir = sec; sec = thr; thr = ans; ans = fir+sec+thr; &#125; return ans; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"}]},{"title":"leetcode-ÂõæÁõ∏ÂÖ≥","slug":"leetcode-ÂõæÁõ∏ÂÖ≥","date":"2021-08-04T16:00:00.000Z","updated":"2021-08-07T02:44:49.610Z","comments":true,"path":"2021/08/05/leetcode-ÂõæÁõ∏ÂÖ≥/","link":"","permalink":"http://example.com/2021/08/05/leetcode-%E5%9B%BE%E7%9B%B8%E5%85%B3/","excerpt":"","text":"802. ÊâæÂà∞ÊúÄÁªàÁöÑÂÆâÂÖ®Áä∂ÊÄÅÂú®ÊúâÂêëÂõæ‰∏≠Ôºå‰ª•Êüê‰∏™ËäÇÁÇπ‰∏∫Ëµ∑ÂßãËäÇÁÇπÔºå‰ªéËØ•ÁÇπÂá∫ÂèëÔºåÊØè‰∏ÄÊ≠•Ê≤øÁùÄÂõæ‰∏≠ÁöÑ‰∏ÄÊù°ÊúâÂêëËæπË°åËµ∞„ÄÇÂ¶ÇÊûúÂà∞ËææÁöÑËäÇÁÇπÊòØÁªàÁÇπÔºàÂç≥ÂÆÉÊ≤°ÊúâËøûÂá∫ÁöÑÊúâÂêëËæπÔºâÔºåÂàôÂÅúÊ≠¢„ÄÇ ÂØπ‰∫é‰∏Ä‰∏™Ëµ∑ÂßãËäÇÁÇπÔºåÂ¶ÇÊûú‰ªéËØ•ËäÇÁÇπÂá∫ÂèëÔºåÊó†ËÆ∫ÊØè‰∏ÄÊ≠•ÈÄâÊã©Ê≤øÂì™Êù°ÊúâÂêëËæπË°åËµ∞ÔºåÊúÄÂêéÂøÖÁÑ∂Âú®ÊúâÈôêÊ≠•ÂÜÖÂà∞ËææÁªàÁÇπÔºåÂàôÂ∞ÜËØ•Ëµ∑ÂßãËäÇÁÇπÁß∞‰ΩúÊòØ ÂÆâÂÖ® ÁöÑ„ÄÇ ËøîÂõû‰∏Ä‰∏™Áî±Âõæ‰∏≠ÊâÄÊúâÂÆâÂÖ®ÁöÑËµ∑ÂßãËäÇÁÇπÁªÑÊàêÁöÑÊï∞ÁªÑ‰Ωú‰∏∫Á≠îÊ°à„ÄÇÁ≠îÊ°àÊï∞ÁªÑ‰∏≠ÁöÑÂÖÉÁ¥†Â∫îÂΩìÊåâ ÂçáÂ∫è ÊéíÂàó„ÄÇ ËØ•ÊúâÂêëÂõæÊúâ n ‰∏™ËäÇÁÇπÔºåÊåâ 0 Âà∞ n - 1 ÁºñÂè∑ÔºåÂÖ∂‰∏≠ n ÊòØ graph ÁöÑËäÇÁÇπÊï∞„ÄÇÂõæ‰ª•‰∏ãËø∞ÂΩ¢ÂºèÁªôÂá∫Ôºögraph[i] ÊòØÁºñÂè∑ j ËäÇÁÇπÁöÑ‰∏Ä‰∏™ÂàóË°®ÔºåÊª°Ë∂≥ (i, j) ÊòØÂõæÁöÑ‰∏ÄÊù°ÊúâÂêëËæπ„ÄÇ ÊèêÁ§∫Ôºö n == graph.length 1 &lt;= n &lt;= 104 0 &lt;= graph[i].length &lt;= n graph[i] Êåâ‰∏•Ê†ºÈÄíÂ¢ûÈ°∫Â∫èÊéíÂàó„ÄÇ Âõæ‰∏≠ÂèØËÉΩÂåÖÂê´Ëá™ÁéØ„ÄÇ Âõæ‰∏≠ËæπÁöÑÊï∞ÁõÆÂú®ËåÉÂõ¥ [1, 4 * 104] ÂÜÖ„ÄÇ Áü•ËØÜÁÇπÔºödfs„ÄÅÂõæÂàÜÊûêÔºö‰∏Ä‰∏™ËäÇÁÇπÊòØÂê¶ÂÆâÂÖ®ÔºåÂèñÂÜ≥‰∫éÂÆÉËÉΩÂà∞ËææÁöÑËäÇÁÇπÊòØÂê¶ÂÆâÂÖ®Ôºõ Êàë‰ª¨Â∞ÜËäÇÁÇπÁöÑÁä∂ÊÄÅËÆæÁΩÆ‰∏∫3ÁßçÔºö0ÔºöÊú™ÈÅçÂéÜÂà∞„ÄÅ1Ôºö‰∏çÂÆâÂÖ®ÔºàÂú®ÁéØ‰∏äÔºâ„ÄÅ2ÔºöÂÆâÂÖ®ÁöÑ Âú®ÂØπÊØè‰∏™ËäÇÁÇπÊü•Êâæ‰πãÂâçÔºåÂ∞ÜËØ•ËäÇÁÇπËÆæÁΩÆ‰∏∫‰∏çÂÆâÂÖ®Áä∂ÊÄÅÔºå‰πãÂêéÂØπËäÇÁÇπÂà∞ËææÁöÑÊØè‰∏™ËäÇÁÇπËøõË°åÊü•ËØ¢ÊòØÂê¶ÂÆâÂÖ® ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223242526class Solution &#123; public List&lt;Integer&gt; eventualSafeNodes(int[][] graph) &#123; int len = graph.length; int[] color = new int[len]; List&lt;Integer&gt; ans = new ArrayList&lt;Integer&gt;(); for(int i=0;i&lt;len;i++)&#123; if(safe(graph,color,i))&#123; ans.add(i); &#125; &#125; return ans; &#125; private boolean safe(int[][] graph,int[] color,int index)&#123; if(color[index]&gt;0)&#123; return color[index]==2; &#125; color[index] = 1; for(int x:graph[index])&#123; if(!safe(graph,color,x))&#123; return false; &#125; &#125; color[index] = 2; return true; &#125;&#125; 847. ËÆøÈóÆÊâÄÊúâËäÇÁÇπÁöÑÊúÄÁü≠Ë∑ØÂæÑÂ≠òÂú®‰∏Ä‰∏™Áî± n ‰∏™ËäÇÁÇπÁªÑÊàêÁöÑÊó†ÂêëËøûÈÄöÂõæÔºåÂõæ‰∏≠ÁöÑËäÇÁÇπÊåâ‰ªé 0 Âà∞ n - 1 ÁºñÂè∑„ÄÇ Áªô‰Ω†‰∏Ä‰∏™Êï∞ÁªÑ graph Ë°®Á§∫Ëøô‰∏™Âõæ„ÄÇÂÖ∂‰∏≠Ôºågraph[i] ÊòØ‰∏Ä‰∏™ÂàóË°®ÔºåÁî±ÊâÄÊúâ‰∏éËäÇÁÇπ i Áõ¥Êé•Áõ∏ËøûÁöÑËäÇÁÇπÁªÑÊàê„ÄÇ ËøîÂõûËÉΩÂ§üËÆøÈóÆÊâÄÊúâËäÇÁÇπÁöÑÊúÄÁü≠Ë∑ØÂæÑÁöÑÈïøÂ∫¶„ÄÇ‰Ω†ÂèØ‰ª•Âú®‰ªª‰∏ÄËäÇÁÇπÂºÄÂßãÂíåÂÅúÊ≠¢Ôºå‰πüÂèØ‰ª•Â§öÊ¨°ÈáçËÆøËäÇÁÇπÔºåÂπ∂‰∏îÂèØ‰ª•ÈáçÁî®Ëæπ„ÄÇ ÊèêÁ§∫Ôºö n == graph.length 1 &lt;= n &lt;= 12 0 &lt;= graph[i].length &lt; n graph[i] ‰∏çÂåÖÂê´ i Â¶ÇÊûú graph[a] ÂåÖÂê´ b ÔºåÈÇ£‰πà graph[b] ‰πüÂåÖÂê´ a ËæìÂÖ•ÁöÑÂõæÊÄªÊòØËøûÈÄöÂõæ„ÄÇ Áü•ËØÜÁÇπÔºöÂõæ„ÄÅbfs„ÄÅÁä∂ÊÄÅÂéãÁº©dpÂàÜÊûêÔºöÔºàÂÖ∂ÂÆûËøô‰∏™È¢òÁõÆÊàëÊ≤°ÊòéÁôΩÈÄèÂΩªÔºâÔºåË¶ÅÊâæÂà∞ÁªèËøáÊâÄÊúâËäÇÁÇπÁöÑÊúÄÁü≠Ë∑ØÂæÑÔºåÈááÁî®bfsÁöÑËØùÔºåÁ¨¨‰∏ÄÊ¨°ÊâæÂà∞ÁöÑÊâÄÊúâËäÇÁÇπÈÉΩË¢´ËÆøÈóÆËøáÁöÑË∑ØÂæÑÂç≥‰∏∫ÊúÄÁü≠Ë∑ØÂæÑÔºõ Êàë‰ª¨ÈúÄË¶ÅÂª∫Á´ã‰∏Ä‰∏™‰∏âÁª¥Êï∞ÁªÑÔºåÁ¨¨‰∏ÄÁª¥Â≠òÊîæÂΩìÂâç‰Ωç‰∫éÁöÑËäÇÁÇπÔºõÁ¨¨‰∫åÁª¥Â≠òÊîæÂà∞Ëøô‰∏™ËäÇÁÇπ‰∏∫Ê≠¢Â∑≤ÁªèÁªèËøá‰∫ÜÂì™‰∫õËäÇÁÇπÔºàËøô‰∏™Áî®‰∏Ä‰∏™Êï∞Â≠óË°®Á§∫Ôºå‰ΩÜÊòØÈááÁî®ÁöÑÊòØ‰∫åËøõÂà∂ÔºâÔºõÁ¨¨‰∏âÁª¥Â≠òÊîæÂà∞Ëøô‰∏™ËäÇÁÇπ‰∏∫Ê≠¢ÔºåË∑ùÁ¶ªÊòØÂ§öÂ∞ë Èô§Ê≠§‰πãÂ§ñÔºåËøòÂæóÂª∫Á´ã‰∏™Êï∞ÁªÑÔºåÁî®‰∫éÂå∫ÂàÜÂì™‰∫õËäÇÁÇπÂ∑≤ÁªèËÆøÈóÆËøá‰∫Ü ÊúÄÂêéÔºåÁªÜÁúãÈ¢òËß£„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728293031class Solution &#123; public int shortestPathLength(int[][] graph) &#123; int n = graph.length; Queue&lt;int[]&gt; queue = new LinkedList&lt;&gt;(); boolean[][] seen = new boolean[n][1&lt;&lt;n]; for(int i=0;i&lt;n;i++)&#123; queue.offer(new int[]&#123;i,1&lt;&lt;i,0&#125;); seen[i][1&lt;&lt;i] = true; &#125; int ans = 0; while(!queue.isEmpty())&#123; int[] tuple = queue.poll(); int u = tuple[0],mask = tuple[1],dist = tuple[2]; if(mask==(1&lt;&lt;n)-1)&#123; ans = dist; break; &#125; //ÊêúÁ¥¢Áõ∏ÈÇªÁöÑËäÇÁÇπ for(int v:graph[u])&#123; //Â∞ÜmaskÁöÑÁ¨¨v‰ΩçËÆæÁΩÆ‰∏∫1 int maskV = mask|(1&lt;&lt;v); if(!seen[v][maskV])&#123; queue.offer(new int[]&#123;v,maskV,dist+1&#125;); seen[v][maskV] = true; &#125; &#125; &#125; return ans; &#125;&#125; 457. ÁéØÂΩ¢Êï∞ÁªÑÊòØÂê¶Â≠òÂú®Âæ™ÁéØÂ≠òÂú®‰∏Ä‰∏™‰∏çÂê´ 0 ÁöÑ ÁéØÂΩ¢ Êï∞ÁªÑ nums ÔºåÊØè‰∏™ nums[i] ÈÉΩË°®Á§∫‰Ωç‰∫é‰∏ãÊ†á i ÁöÑËßíËâ≤Â∫îËØ•ÂêëÂâçÊàñÂêëÂêéÁßªÂä®ÁöÑ‰∏ãÊ†á‰∏™Êï∞Ôºö Â¶ÇÊûú nums[i] ÊòØÊ≠£Êï∞ÔºåÂêëÂâç ÁßªÂä® nums[i] Ê≠• Â¶ÇÊûú nums[i] ÊòØË¥üÊï∞ÔºåÂêëÂêé ÁßªÂä® nums[i] Ê≠• Âõ†‰∏∫Êï∞ÁªÑÊòØ ÁéØÂΩ¢ ÁöÑÔºåÊâÄ‰ª•ÂèØ‰ª•ÂÅáËÆæ‰ªéÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†ÂêëÂâçÁßªÂä®‰∏ÄÊ≠•‰ºöÂà∞ËææÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåËÄåÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÂêëÂêéÁßªÂä®‰∏ÄÊ≠•‰ºöÂà∞ËææÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†„ÄÇ Êï∞ÁªÑ‰∏≠ÁöÑ Âæ™ÁéØ Áî±ÈïøÂ∫¶‰∏∫ k ÁöÑ‰∏ãÊ†áÂ∫èÂàó seq Ôºö ÈÅµÂæ™‰∏äËø∞ÁßªÂä®ËßÑÂàôÂ∞ÜÂØºËá¥ÈáçÂ§ç‰∏ãÊ†áÂ∫èÂàó seq[0] -&gt; seq[1] -&gt; ‚Ä¶ -&gt; seq[k - 1] -&gt; seq[0] -&gt; ‚Ä¶ ÊâÄÊúâ nums[seq[j]] Â∫îÂΩì‰∏çÊòØ ÂÖ®Ê≠£ Â∞±ÊòØ ÂÖ®Ë¥ü k &gt; 1 Â¶ÇÊûú nums ‰∏≠Â≠òÂú®Âæ™ÁéØÔºåËøîÂõû true ÔºõÂê¶ÂàôÔºåËøîÂõû false „ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºönums = [2,-1,1,2,2] ËæìÂá∫Ôºötrue Ëß£ÈáäÔºöÂ≠òÂú®Âæ™ÁéØÔºåÊåâ‰∏ãÊ†á 0 -&gt; 2 -&gt; 3 -&gt; 0 „ÄÇÂæ™ÁéØÈïøÂ∫¶‰∏∫ 3 „ÄÇ Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºönums = [-1,2] ËæìÂá∫Ôºöfalse Ëß£ÈáäÔºöÊåâ‰∏ãÊ†á 1 -&gt; 1 -&gt; 1 ‚Ä¶ ÁöÑËøêÂä®Êó†Ê≥ïÊûÑÊàêÂæ™ÁéØÔºåÂõ†‰∏∫Âæ™ÁéØÁöÑÈïøÂ∫¶‰∏∫ 1 „ÄÇÊ†πÊçÆÂÆö‰πâÔºåÂæ™ÁéØÁöÑÈïøÂ∫¶ÂøÖÈ°ªÂ§ß‰∫é 1 „ÄÇ Á§∫‰æã 3: ËæìÂÖ•Ôºönums = [-2,1,-1,-2,-2] ËæìÂá∫Ôºöfalse Ëß£ÈáäÔºöÊåâ‰∏ãÊ†á 1 -&gt; 2 -&gt; 1 -&gt; ‚Ä¶ ÁöÑËøêÂä®Êó†Ê≥ïÊûÑÊàêÂæ™ÁéØÔºåÂõ†‰∏∫ nums[1] ÊòØÊ≠£Êï∞ÔºåËÄå nums[2] ÊòØË¥üÊï∞„ÄÇ ÊâÄÊúâ nums[seq[j]] Â∫îÂΩì‰∏çÊòØÂÖ®Ê≠£Â∞±ÊòØÂÖ®Ë¥ü„ÄÇ ÊèêÁ§∫Ôºö 1 &lt;= nums.length &lt;= 5000 -1000 &lt;= nums[i] &lt;= 1000 nums[i] != 0 ËøõÈò∂Ôºö‰Ω†ËÉΩËÆæËÆ°‰∏Ä‰∏™Êó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ O(n) ‰∏îÈ¢ùÂ§ñÁ©∫Èó¥Â§çÊùÇÂ∫¶‰∏∫ O(1) ÁöÑÁÆóÊ≥ïÂêóÔºü Áü•ËØÜÁÇπÔºöÂõæ„ÄÅÂèåÊåáÈíàÂàÜÊûêÔºöËøô‰∏™È¢òÁõÆÊúâÁÇπÔºåÈ∫ªÁÉ¶ÔºåÂÖ∂ÂÆû‰πü‰∏çÊòØÂæàÈ∫ªÁÉ¶„ÄÇË¶ÅÂà§Êñ≠ÊúâÊ≤°ÊúâËÉΩ‰∏çËÉΩÂΩ¢ÊàêÁéØÔºàËÄå‰∏îÈïøÂ∫¶Â§ß‰∫é1ÔºâÔºåÂ∏∏ËßÅÂÅöÊ≥ïÂ∞±ÊòØÂø´ÊÖ¢ÊåáÈíàÔºåÂíåÊôÆÈÄöÈ¢òÁõÆÁöÑ‰∏çÂêå‰πãÂ§ÑÂú®‰∫éÂÖÉÁ¥†ÂàÜ‰∏∫Ê≠£Ë¥ü‰∏§ÁßçÔºåÊó¢ÁÑ∂ÊòØÁéØÔºåÈÇ£ÂøÖÂÆöÂè™ËÉΩÊòØÁ¨¶Âè∑Áõ∏ÂêåÔºåÊâÄ‰ª•Ë¶ÅÂä†‰∏™Á¨¶Âè∑Âà§Êñ≠ÔºõÂè¶Â§ñ‰∏∫‰∫ÜÈôç‰ΩéÊó∂Èó¥Â§çÊùÇÂ∫¶ÔºåËøòÂèØ‰ª•ÂØπÂ∑≤ÁªèÂà§Êñ≠ËøáÁöÑÂÖÉÁ¥†ËøõË°åÊ†áËÆ∞ÔºàÂ¶ÇÊûúÊ≤°Ê≥ïÊàêÁéØÔºåÂÜçËµ∞Âà∞Ëøô‰∏™ÂÖÉÁ¥†‰æùÊóßÊ≤°Ê≥ïÊàêÁéØÔºâ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728293031323334class Solution &#123; public boolean circularArrayLoop(int[] nums) &#123; int n = nums.length; for(int i=0;i&lt;n;i++)&#123; //Âà§0ÊòØ‰∏∫‰∫Ü‰ºòÂåñÊó∂Èó¥Â§çÊùÇÂ∫¶ÔºåÂéªÊéâ‰πüÊòØÊ≠£Á°ÆÁªìÊûú if(nums[i]==0)&#123; continue; &#125; int slow = i,fast = next(nums,slow); while(nums[slow]*nums[fast]&gt;0&amp;&amp;nums[slow]*nums[next(nums,fast)]&gt;0)&#123; if(slow==fast)&#123; if(slow!=next(nums,slow))&#123; return true; &#125;else&#123; break; &#125; &#125; slow = next(nums,slow); fast = next(nums,next(nums,fast)); &#125; int add = i; while(nums[add]*nums[next(nums,add)]&gt;0)&#123; int tmp = add; add = next(nums,add); nums[tmp] = 0; &#125; &#125; return false; &#125; public int next(int[] nums,int cur)&#123; int n = nums.length; return ((cur+nums[cur])%n+n)%n; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"dfs„ÄÅÂõæ","slug":"dfs„ÄÅÂõæ","permalink":"http://example.com/tags/dfs%E3%80%81%E5%9B%BE/"}]},{"title":"‰∫åÂàÜÊ≥ïÁöÑ‰∏âÁßçÂÜôÊ≥ï","slug":"‰∫åÂàÜÊ≥ïÁöÑ‰∏âÁßçÂÜôÊ≥ï","date":"2021-08-02T16:00:00.000Z","updated":"2021-08-03T02:04:13.013Z","comments":true,"path":"2021/08/03/‰∫åÂàÜÊ≥ïÁöÑ‰∏âÁßçÂÜôÊ≥ï/","link":"","permalink":"http://example.com/2021/08/03/%E4%BA%8C%E5%88%86%E6%B3%95%E7%9A%84%E4%B8%89%E7%A7%8D%E5%86%99%E6%B3%95/","excerpt":"","text":"ÊÄªÁªì‰∫åÂàÜËæπÁïåÁöÑÂÜôÊ≥ïÊòØÂõ†‰∏∫ÂæàÂÆπÊòìÂá∫ÈîôÔºåÊØîÂ¶ÇËØ¥Ôºö 12//ËøôÁßçÂ±û‰∫éÂêë‰∏ãÂèñÊï¥ÔºåÂÆπÊòìÂá∫Áé∞left=3Ôºåright=4Ôºåmid=3ÁöÑÊ≠ªÂæ™ÁéØint mid = left+(right-left)/2; Á¨¨‰∏ÄÁßçÂÜôÊ≥ïÔºö 12345678910while (low &lt; high) &#123;//ÈÄÄÂá∫Âæ™ÁéØÊó∂ÂøÖÂÆölow==high long mid = low + (high - low) / 2;//Âêë‰∏ãÂèñÊï¥ long r = mid * mid; if (r &gt; x) high = mid; //ÂΩìÈúÄË¶ÅÂú®Âè≥Âå∫Èó¥Êü•ÊâæÊó∂ÔºåÊîπÂèòlowÁöÑÂÄºÔºå‰ΩøÂæóÂêë‰∏ãÂèñÊï¥‰∏ç‰ºöÂèëÁîüÊ≠ªÂæ™ÁéØ else if (r &lt; x) low = mid + 1; else return (int) mid;&#125;return (int) low - 1; Á¨¨‰∫åÁßçÂÜôÊ≥ïÔºö 123456789while (low &lt; high) &#123; long mid = low + (high - low + 1) / 2;//Áõ¥Êé•Êîπ‰∏∫Âêë‰∏äÂèñÊï¥ÔºåÈÅøÂÖç‰∫ÜÂêë‰∏ãÂèñÊï¥Â∏¶Êù•ÁöÑÊ≠ªÂæ™ÁéØ long r = mid * mid; if (r &gt; x) high = mid - 1; else if (r &lt; x) low = mid; else return (int) mid;&#125;return (int) low; Á¨¨‰∏âÁßçÂÜôÊ≥ïÔºö 123456789while (low &lt;= high) &#123;//Ê≥®ÊÑèÊ≠§Â§ÑÈÄÄÂá∫Âæ™ÁéØÊó∂lowÔºÅ=high long mid = low + (high - low) / 2; long r = mid * mid; if (r &gt; x) high = mid - 1; else if (r &lt; x) low = mid + 1; else return (int) mid;&#125;return (int) low - 1;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"‰∏™‰∫∫ÂøÉÂæó","slug":"‰∏™‰∫∫ÂøÉÂæó","permalink":"http://example.com/tags/%E4%B8%AA%E4%BA%BA%E5%BF%83%E5%BE%97/"}]},{"title":"leetcode-ÁΩëÁªúÂª∂ËøüÊó∂Èó¥","slug":"leetcode-ÁΩëÁªúÂª∂ËøüÊó∂Èó¥","date":"2021-08-01T16:00:00.000Z","updated":"2021-08-02T02:23:43.207Z","comments":true,"path":"2021/08/02/leetcode-ÁΩëÁªúÂª∂ËøüÊó∂Èó¥/","link":"","permalink":"http://example.com/2021/08/02/leetcode-%E7%BD%91%E7%BB%9C%E5%BB%B6%E8%BF%9F%E6%97%B6%E9%97%B4/","excerpt":"","text":"743. ÁΩëÁªúÂª∂ËøüÊó∂Èó¥Êúâ n ‰∏™ÁΩëÁªúËäÇÁÇπÔºåÊ†áËÆ∞‰∏∫ 1 Âà∞ n„ÄÇÁªô‰Ω†‰∏Ä‰∏™ÂàóË°® timesÔºåË°®Á§∫‰ø°Âè∑ÁªèËøá ÊúâÂêë ËæπÁöÑ‰º†ÈÄíÊó∂Èó¥„ÄÇ times[i] = (ui, vi, wi)ÔºåÂÖ∂‰∏≠ ui ÊòØÊ∫êËäÇÁÇπÔºåvi ÊòØÁõÆÊ†áËäÇÁÇπÔºå wi ÊòØ‰∏Ä‰∏™‰ø°Âè∑‰ªéÊ∫êËäÇÁÇπ‰º†ÈÄíÂà∞ÁõÆÊ†áËäÇÁÇπÁöÑÊó∂Èó¥„ÄÇ Áé∞Âú®Ôºå‰ªéÊüê‰∏™ËäÇÁÇπ K ÂèëÂá∫‰∏Ä‰∏™‰ø°Âè∑„ÄÇÈúÄË¶ÅÂ§ö‰πÖÊâçËÉΩ‰ΩøÊâÄÊúâËäÇÁÇπÈÉΩÊî∂Âà∞‰ø°Âè∑ÔºüÂ¶ÇÊûú‰∏çËÉΩ‰ΩøÊâÄÊúâËäÇÁÇπÊî∂Âà∞‰ø°Âè∑ÔºåËøîÂõû -1 „ÄÇ Á§∫‰æã1Ôºö 12ËæìÂÖ•Ôºötimes = [[2,1,1],[2,3,1],[3,4,1]], n = 4, k = 2ËæìÂá∫Ôºö2 Á§∫‰æã2Ôºö 12ËæìÂÖ•Ôºötimes = [[1,2,1]], n = 2, k = 1ËæìÂá∫Ôºö1 Áü•ËØÜÁÇπÔºöÂõæÂàÜÊûêÔºö‰ªékËäÇÁÇπÂºÄÂßãÔºåÊâæÂà∞ÈÅçÂéÜËá≥ÂÖ∂‰ªñÊâÄÊúâËäÇÁÇπÁöÑÊúÄÁü≠Ë∑ØÂæÑÔºõÂèØÂà©Áî®Ë¥™ÂøÉÊÄùÊÉ≥ÔºåÂÆö‰πâ‰∏Ä‰∏™Ë∑ùÁ¶ªÊï∞ÁªÑÔºåÂ∞ÜÂà∞ËææÊØè‰∏™ËäÇÁÇπÁöÑÊúÄÁü≠Ë∑ØÂæÑÊîæÂÖ•ÔºåÁÑ∂ÂêéÂèñÂá∫ÊúÄÂ§ßÂÄºÂç≥ÂèØ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728293031class Solution &#123; public int networkDelayTime(int[][] times, int n, int k) &#123; final int INF = Integer.MAX_VALUE/2; int[][] g = new int[n][n]; for(int i=0;i&lt;n;i++)&#123; Arrays.fill(g[i],INF); &#125; for(int[] t:times)&#123; int x = t[0]-1,y = t[1]-1; g[x][y] = t[2]; &#125; int[] dist = new int[n]; Arrays.fill(dist,INF); dist[k-1] = 0; boolean[] used = new boolean[n]; for(int i=0;i&lt;n;i++)&#123; int x = -1; for(int y=0;y&lt;n;++y)&#123; if(!used[y]&amp;&amp;(x==-1||dist[y]&lt;dist[x]))&#123; x=y; &#125; &#125; used[x] = true; for(int y=0;y&lt;n;++y)&#123; dist[y] = Math.min(dist[y],dist[x]+g[x][y]); &#125; &#125; int ans = Arrays.stream(dist).max().getAsInt(); return ans==INF?-1:ans; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Âõæ","slug":"Âõæ","permalink":"http://example.com/tags/%E5%9B%BE/"}]},{"title":"Âº∫ËΩØÂº±ËôöÂºïÁî®","slug":"Âº∫ËΩØÂº±ËôöÂºïÁî®","date":"2021-07-30T16:00:00.000Z","updated":"2021-08-02T08:34:34.426Z","comments":true,"path":"2021/07/31/Âº∫ËΩØÂº±ËôöÂºïÁî®/","link":"","permalink":"http://example.com/2021/07/31/%E5%BC%BA%E8%BD%AF%E5%BC%B1%E8%99%9A%E5%BC%95%E7%94%A8/","excerpt":"","text":"Âº∫ÂºïÁî®‰∏Ä‰∏™ÂØπË±°ÊúâÂº∫ÂºïÁî®Êó∂ÔºåGCÁªù‰∏çÂõûÊî∂ÔºåÂÆÅÂèØÊä•ÈîôOutOfMemoryError‰πü‰∏çÂõûÊî∂. ËΩØÂºïÁî®Âè™Ë¶ÅÂÜÖÂ≠òÁ©∫Èó¥Ë∂≥Â§üÔºåÂ∞±‰∏ç‰ºöÂõûÊî∂ÂÆÉÔºõÁ©∫Èó¥‰∏çÂ§üÊó∂ÊâçÂõûÊî∂Ëøô‰∫õÂØπË±°ÁöÑÂÜÖÂ≠ò„ÄÇÂè™Ë¶ÅGCÊ≤°ÂõûÊî∂ÂÆÉÔºåËØ•ÂØπË±°Â∞±‰∏ÄÁõ¥ÂèØË¢´Á®ãÂ∫è‰ΩøÁî®„ÄÇËΩØÂºïÁî®ÂèØÁî®Êù•ÂÆûÁé∞ÂÜÖÂ≠òÊïèÊÑüÁöÑÈ´òÈÄüÁºìÂ≠ò„ÄÇ Âº±ÂºïÁî®Âº±ÂºïÁî®ÂÖ≥ËÅîÁöÑÂØπË±°Âè™ËÉΩÊ¥ªÂà∞‰∏ã‰∏ÄÊ¨°ÂûÉÂúæÂõûÊî∂‰πãÂâç„ÄÇ ËôöÂºïÁî®Â¶ÇÊûú‰∏Ä‰∏™ÂØπË±°‰ªÖÊåÅÊúâËôöÂºïÁî®ÔºåÂÖ∂ÂÆûÂ∞±Ë∑üÊ≤°Êúâ‰ªª‰ΩïÂºïÁî®‰∏ÄÊ†∑ÔºåÈöèÊó∂ÂèØË¢´ÂõûÊî∂„ÄÇ ÊÄªÁªìËôöÂºïÁî®ÂøÖÈ°ªÂíåÂºïÁî®ÈòüÂàóÔºàReference QueueÔºâËÅîÂêà‰ΩøÁî®„ÄÇÂΩìÂûÉÂúæÂõûÊî∂Âô®ÂáÜÂ§áÂõûÊî∂‰∏Ä‰∏™ÂØπË±°Êó∂ÔºåÂèëÁé∞ËØ•ÂØπË±°ËøòÊúâËôöÂºïÁî®ÔºåÈÇ£‰πàÂ∞±‰ºöÂ∞ÜËøô‰∏™ËôöÂºïÁî®Âä†ÂÖ•Âà∞‰∏é‰πãÂÖ≥ËÅîÁöÑÂºïÁî®ÈòüÂàó‰∏≠ÔºåËøôÊ†∑ÂèØ‰ª•ÈÄöËøáÂà§Êñ≠ÂºïÁî®ÈòüÂàó‰∏≠ÊòØÂê¶Â∑≤ÁªèÂä†ÂÖ•ËôöÂºïÁî®Êù•Âà§Êñ≠Ë¢´ÂºïÁî®ÁöÑÂØπË±°ÊòØÂê¶Ë¶ÅË¢´GCÂõûÊî∂Ôºå‰æø‰∫éÂú®ÂõûÊî∂‰πãÂâçÂÅö‰∏Ä‰∫õÂøÖË¶ÅË°åÂä®„ÄÇ ËôöÂºïÁî®ÂíåËΩØÂºïÁî®„ÄÅÂº±ÂºïÁî®ÁöÑÂå∫Âà´ ËΩØ„ÄÅÂº±ÊòØÂú®GCÂõûÊî∂ËØ•ÂØπË±°‰πãÂêéÔºåÊâçÂ∞ÜÂºïÁî®Âä†ÂÖ•Âà∞ÂºïÁî®ÈòüÂàó‰∏≠Ôºõ ËôöÂºïÁî®ÊòØÂú®GCÂõûÊî∂ÂØπË±°‰πãÂâçÔºåÂ∞ÜËØ•ÂºïÁî®Âä†ÂÖ•Âà∞ÂºïÁî®ÈòüÂàó‰∏≠„ÄÇ","categories":[{"name":"JVMÁõ∏ÂÖ≥","slug":"JVMÁõ∏ÂÖ≥","permalink":"http://example.com/categories/JVM%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"Â¶Ç‰ΩïÂà§Êñ≠ÂØπË±°Â∑≤ÁªèÊ≠ª‰∫°","slug":"Â¶Ç‰ΩïÂà§Êñ≠ÂØπË±°Â∑≤ÁªèÊ≠ª‰∫°","date":"2021-07-29T16:00:00.000Z","updated":"2021-08-02T08:33:38.412Z","comments":true,"path":"2021/07/30/Â¶Ç‰ΩïÂà§Êñ≠ÂØπË±°Â∑≤ÁªèÊ≠ª‰∫°/","link":"","permalink":"http://example.com/2021/07/30/%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E5%AF%B9%E8%B1%A1%E5%B7%B2%E7%BB%8F%E6%AD%BB%E4%BA%A1/","excerpt":"","text":"1„ÄÅÂèØËææÊÄßÂàÜÊûêÊ≥ïÔºàÂ∏∏Áî®ÔºâÈÄöËøá‰∏ÄÁ≥ªÂàóGCRootsÁöÑÂØπË±°‰Ωú‰∏∫Ëµ∑ÁÇπÔºå‰ªéËµ∑ÁÇπÂºÄÂßãÂêë‰∏ãÊêúÁ¥†ÔºåËäÇÁÇπÊâÄËµ∞ËøáÁöÑË∑ØÂæÑÁß∞‰∏∫ÂºïÁî®ÈìæÔºåÂΩì‰∏Ä‰∏™ÂØπË±°Âà∞GCRootsÊ≤°Êúâ‰ªª‰ΩïÂºïÁî®ÈìæÊó∂ÔºåËØ•ÂØπË±°‰∏çÂèØÁî®„ÄÇ GCRootsÔºöÂèØ‰ª•ÊòØËôöÊãüÊú∫Ê†à‰∏≠ÁöÑÂºïÁî®ÂØπË±°„ÄÅÊñπÊ≥ïÂå∫‰∏≠Á±ªÈùôÊÄÅÂ±ûÊÄßÂºïÁî®ÁöÑÂØπË±°„ÄÅÊñπÊ≥ïÂå∫‰∏≠Â∏∏ÈáèÂºïÁî®ÁöÑÂØπË±°„ÄÇ 2„ÄÅÂºïÁî®ËÆ°Êï∞Ê≥ïÔºàJVMÊú™ÈááÁî®ÔºâÂØπ‰∏Ä‰∏™ÂØπË±°Êù•ËØ¥ÔºåÊØèÂΩìÊúâ‰∏Ä‰∏™Âú∞ÊñπÂºïÁî®ÂÆÉÔºåËÆ°Êï∞Âô®Â∞±+1ÔºõÂºïÁî®Â§±ÊïàÂ∞±-1ÔºõÂΩìËÆ°Êï∞Âô®‰∏∫0Êó∂ËØ•ÂØπË±°Â∑≤Áªè‰∏çÂèØËÉΩÂÜçË¢´‰ΩøÁî®„ÄÇ Áº∫ÁÇπÔºöÊó†Ê≥ïËß£ÂÜ≥‰∏§‰∏™ÂØπË±°‰∫íÁõ∏ÂºïÁî®ÁöÑÊÉÖÂÜµÔºåËøôÂ∞±ÊòØ==Ê≠ªÂæ™ÁéØ==„ÄÇ ‰ΩÜÊòØÂõûÊî∂‰∏Ä‰∏™ÂØπË±°Ëµ∑Á†ÅÈúÄË¶Å‰∏§Ê¨°Ê†áËÆ∞ÔºåÂèØËææÊÄßÂàÜÊûêÊ≥ï‰∏≠‰∏çÂèØËææÁöÑÂØπË±°Ë¢´Á¨¨‰∏ÄÊ¨°Ê†áËÆ∞Âπ∂‰∏îËøõË°å‰∏ÄÊ¨°Á≠õÈÄâÔºåÁ≠õÈÄâÁöÑÊù°‰ª∂ÊòØÊ≠§ÂØπË±°ÊòØÂê¶ÊúâÂøÖË¶ÅÊâßË°åfinalizeÊñπÊ≥ïÔºåÂΩìËØ•ÂØπË±°Ê≤°ÊúâË¶ÜÁõñfinalizeÊñπÊ≥ïÊàñËÄÖfinalizeÊñπÊ≥ïÂ∑≤ÁªèË¢´Ë∞ÉÁî®ËøáÊó∂ÔºåËøôÁßçÊÉÖÂÜµËßÜ‰∏∫Ê≤°ÂøÖË¶ÅÊâßË°åÔºõË¢´Âà§ÂÆöÈúÄË¶ÅÊâßË°åÁöÑÂØπË±°Â∞Ü‰ºöË¢´ÊîæÂú®‰∏Ä‰∏™ÈòüÂàó‰∏≠ËøõË°åÁ¨¨‰∫åÊ¨°Ê†áËÆ∞ÔºåÈô§ÈùûËøô‰∏™ÂØπË±°‰∏éÂºïÁî®Èìæ‰∏äÁöÑ‰ªª‰Ωï‰∏Ä‰∏™ÂØπË±°Âª∫Á´ãÂÖ≥ËÅîÔºåÂê¶ÂàôÂ∞±‰ºöË¢´ÂõûÊî∂„ÄÇ","categories":[{"name":"JVMÁõ∏ÂÖ≥","slug":"JVMÁõ∏ÂÖ≥","permalink":"http://example.com/categories/JVM%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"Ê∞∏‰πÖ‰ª£ÂíåÂÖÉÁ©∫Èó¥","slug":"Ê∞∏‰πÖ‰ª£ÂíåÂÖÉÁ©∫Èó¥","date":"2021-07-28T16:00:00.000Z","updated":"2021-08-02T08:32:21.974Z","comments":true,"path":"2021/07/29/Ê∞∏‰πÖ‰ª£ÂíåÂÖÉÁ©∫Èó¥/","link":"","permalink":"http://example.com/2021/07/29/%E6%B0%B8%E4%B9%85%E4%BB%A3%E5%92%8C%E5%85%83%E7%A9%BA%E9%97%B4/","excerpt":"","text":"ÂÖÉÁ©∫Èó¥ÁöÑÊú¨Ë¥®ÂíåÊ∞∏‰πÖ‰ª£Á±ª‰ººÔºåÈÉΩÊòØÂØπJVMËßÑËåÉ‰∏≠ÊñπÊ≥ïÂå∫ÁöÑÂÆûÁé∞„ÄÇ‰∏çËøáÂÖÉÁ©∫Èó¥‰∏éÊ∞∏‰πÖ‰ª£‰πãÈó¥ÊúÄÂ§ßÁöÑÂå∫Âà´Âú®‰∫éÔºöÂÖÉÁ©∫Èó¥Âπ∂‰∏çÂú®ËôöÊãüÊú∫‰∏≠ÔºåËÄåÊòØ‰ΩøÁî®Êú¨Âú∞ÂÜÖÂ≠ò„ÄÇÂõ†Ê≠§ÔºåÈªòËÆ§ÊÉÖÂÜµ‰∏ãÔºåÂÖÉÁ©∫Èó¥ÁöÑÂ§ßÂ∞è‰ªÖÂèóÊú¨Âú∞ÂÜÖÂ≠òÈôêÂà∂Ôºå‰ΩÜÂèØ‰ª•ÈÄöËøá‰ª•‰∏ãÂèÇÊï∞Êù•ÊåáÂÆöÂÖÉÁ©∫Èó¥ÁöÑÂ§ßÂ∞èÔºö -XX:MetaspaceSizeÔºåÂàùÂßãÁ©∫Èó¥Â§ßÂ∞èÔºåËææÂà∞ËØ•ÂÄºÂ∞±‰ºöËß¶ÂèëÂûÉÂúæÊî∂ÈõÜËøõË°åÁ±ªÂûãÂç∏ËΩΩÔºåÂêåÊó∂GC‰ºöÂØπËØ•ÂÄºËøõË°åË∞ÉÊï¥ÔºöÂ¶ÇÊûúÈáäÊîæ‰∫ÜÂ§ßÈáèÁöÑÁ©∫Èó¥ÔºåÂ∞±ÈÄÇÂΩìÈôç‰ΩéËØ•ÂÄºÔºõÂ¶ÇÊûúÈáäÊîæ‰∫ÜÂæàÂ∞ëÁöÑÁ©∫Èó¥ÔºåÈÇ£‰πàÂú®‰∏çË∂ÖËøáMaxMetaspaceSizeÊó∂ÔºåÈÄÇÂΩìÊèêÈ´òËØ•ÂÄº„ÄÇ -XX:MaxMetaspaceSizeÔºåÊúÄÂ§ßÁ©∫Èó¥ÔºåÈªòËÆ§ÊòØÊ≤°ÊúâÈôêÂà∂ÁöÑ„ÄÇ Èô§‰∫Ü‰∏äÈù¢‰∏§‰∏™ÊåáÂÆöÂ§ßÂ∞èÁöÑÈÄâÈ°π‰ª•Â§ñÔºåËøòÊúâ‰∏§‰∏™‰∏é GC Áõ∏ÂÖ≥ÁöÑÂ±ûÊÄßÔºö -XX:MinMetaspaceFreeRatioÔºåÂú®GC‰πãÂêéÔºåÊúÄÂ∞èÁöÑMetaspaceÂâ©‰ΩôÁ©∫Èó¥ÂÆπÈáèÁöÑÁôæÂàÜÊØîÔºåÂáèÂ∞ë‰∏∫ÂàÜÈÖçÁ©∫Èó¥ÊâÄÂØºËá¥ÁöÑÂûÉÂúæÊî∂ÈõÜ -XX:MaxMetaspaceFreeRatioÔºåÂú®GC‰πãÂêéÔºåÊúÄÂ§ßÁöÑMetaspaceÂâ©‰ΩôÁ©∫Èó¥ÂÆπÈáèÁöÑÁôæÂàÜÊØîÔºåÂáèÂ∞ë‰∏∫ÈáäÊîæÁ©∫Èó¥ÊâÄÂØºËá¥ÁöÑÂûÉÂúæÊî∂ÈõÜ ‰∏∫‰ªÄ‰πàË¶ÅÂ∞ÜÊ∞∏‰πÖ‰ª£ËΩ¨‰∏∫ÂÖÉÁ©∫Èó¥1„ÄÅÂ≠óÁ¨¶‰∏≤Â≠òÂú®Ê∞∏‰πÖ‰ª£‰∏≠ÔºåÂÆπÊòìÂá∫Áé∞ÊÄßËÉΩÈóÆÈ¢òÂíåÂÜÖÂ≠òÊ∫¢Âá∫„ÄÇ 2„ÄÅÁ±ªÂèäÊñπÊ≥ïÁöÑ‰ø°ÊÅØÁ≠âÊØîËæÉÈöæÁ°ÆÂÆöÂÖ∂Â§ßÂ∞èÔºåÂõ†Ê≠§ÂØπ‰∫éÊ∞∏‰πÖ‰ª£ÁöÑÂ§ßÂ∞èÊåáÂÆöÊØîËæÉÂõ∞ÈöæÔºåÂ§™Â∞èÂÆπÊòìÂá∫Áé∞Ê∞∏‰πÖ‰ª£Ê∫¢Âá∫ÔºåÂ§™Â§ßÂàôÂÆπÊòìÂØºËá¥ËÄÅÂπ¥‰ª£Ê∫¢Âá∫„ÄÇ 3„ÄÅÊ∞∏‰πÖ‰ª£‰ºö‰∏∫ GC Â∏¶Êù•‰∏çÂøÖË¶ÅÁöÑÂ§çÊùÇÂ∫¶ÔºåÂπ∂‰∏îÂõûÊî∂ÊïàÁéáÂÅè‰Ωé„ÄÇ 4„ÄÅOracle ÂèØËÉΩ‰ºöÂ∞ÜHotSpot ‰∏é JRockit Âêà‰∫å‰∏∫‰∏Ä„ÄÇ Êù•Ëá™ https://www.cnblogs.com/paddix/p/5309550.html","categories":[{"name":"JVMÁõ∏ÂÖ≥","slug":"JVMÁõ∏ÂÖ≥","permalink":"http://example.com/categories/JVM%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"javaÂÜÖÂ≠òÂå∫Âüü","slug":"javaÂÜÖÂ≠òÂå∫Âüü","date":"2021-07-27T16:00:00.000Z","updated":"2021-08-02T08:31:30.596Z","comments":true,"path":"2021/07/28/javaÂÜÖÂ≠òÂå∫Âüü/","link":"","permalink":"http://example.com/2021/07/28/java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F/","excerpt":"","text":"‰∏ÄÂÖ±ÂàÜ‰∏∫‰∫îÂ§ßÂå∫ÂüüÔºåÂ†ÜÂíåÊñπÊ≥ïÂå∫ÊòØÁ∫øÁ®ãÂÖ±‰∫´ÁöÑÔºåÂÖ∂‰ªñ‰∏â‰∏™ÊòØÁ∫øÁ®ãÈöîÁ¶ªÁöÑ„ÄÇ Â†ÜÂ≠òÊîæÂÆû‰æãÂØπË±°ÂíåÊï∞ÁªÑÂØπË±°Ôºõ GCÁöÑ‰∏ªË¶ÅÂå∫ÂüüÔºõ ÂèØÁªÜÂàÜ‰∏∫Êñ∞Áîü‰ª£ÂíåËÄÅÂπ¥‰ª£Ôºõ Â†Ü‰∏≠ÂØπË±°ÁöÑËÆøÈóÆÊñπÂºèÔºöÈÄöËøáreferenceÊï∞ÊçÆÊù•Êìç‰ΩúÂ†Ü‰∏äÁöÑÂÖ∑‰ΩìÊï∞ÊçÆ„ÄÇ Âè•ÊüÑÔºö ÈááÁî®Âè•ÊüÑÁöÑËØùÔºå‰ºöÂú®Â†Ü‰∏≠ÂºÄËæü‰∏ÄÂùóÂÜÖÂ≠òÁî®Êù•ÂΩì‰ΩúÂè•ÊüÑÊ±†Ôºåreference‰∏≠Â≠òÊîæÁöÑÂ∞±ÊòØÂè•ÊüÑÂú∞ÂùÄÔºõ‰ºòÁÇπÊòØÁ®≥ÂÆö„ÄÇ Áõ¥Êé•ÊåáÈíàÔºö Â≠òÊîæÁöÑÂ∞±ÊòØÂØπË±°Âú∞ÂùÄÔºõ‰ºòÁÇπÊòØÊïàÁéáÈ´ò„ÄÇ ==Á©∫Èó¥‰∏çË∂≥‰ºöÊäõÂá∫OutOfMemoryError== ÊñπÊ≥ïÂå∫Áî®‰∫éÂ≠òÂÇ®Â∑≤ÁªèË¢´ËôöÊãüÊú∫Âä†ËΩΩÁöÑÁ±ªÁöÑ‰ø°ÊÅØ„ÄÅÂ∏∏Èáè„ÄÅÈùôÊÄÅÂèòÈáè„ÄÅËøêË°åÊó∂Â∏∏ÈáèÊ±†„ÄÇÂÖ∂‰∏≠ËøêË°åÊó∂Â∏∏ÈáèÊ±†Áî®‰∫éÂ≠òÊîæÁºñËØëÊúüÁîüÊàêÁöÑÂêÑÁßçÂ≠óÈù¢ÈáèÂíåÁ¨¶Âè∑ÂºïÁî®„ÄÇÔºàjdk8‰πãÂâçÊòØÁî®Ê∞∏‰πÖ‰ª£ÁöÑÊñπÂºèÂÆûÁé∞ÊñπÊ≥ïÂå∫Ôºåjdk8‰πãÂêéÈááÁî®ÂÖÉÁ©∫Èó¥Êù•ÂÆûÁé∞ÊñπÊ≥ïÂå∫Ôºâ Â≠óÈù¢ÈáèÔºö ÊñáÊú¨Â≠óÁ¨¶‰∏≤Ôºõ 8ÁßçÂü∫Êú¨Á±ªÂûãÔºõ Â£∞Êòé‰∏∫finalÁöÑÂ∏∏ÈáèÔºõ Á¨¶Âè∑ÂºïÁî®Ôºö Á±ªÂíåÊñπÊ≥ïÁöÑÈôêÂÆöÂêçÔºõ ÊñπÊ≥ïÁöÑÂêçÁß∞ÂíåÊèèËø∞Á¨¶Ôºõ ==Á©∫Èó¥‰∏çË∂≥‰ºöÊäõÂá∫OutOfMemoryError== ËôöÊãüÊú∫Ê†àjavaÊñπÊ≥ïÊâßË°åÁöÑÂÜÖÂ≠òÊ®°ÂûãÔºåÁ∫øÁ®ãÁßÅÊúâÔºåÊØè‰∏™ÊñπÊ≥ïÊâßË°åÈÉΩ‰ºöÂàõÂª∫‰∏Ä‰∏™Ê†àÂ∏ßÔºåÊØè‰∏™ÊñπÊ≥ï‰ªéË∞ÉÁî®Ëá≥ÁªìÊùüÈÉΩÂØπÂ∫îÁùÄ‰∏Ä‰∏™Ê†àÂ∏ß‰ªéÂÖ•Ê†àÂà∞Âá∫Ê†àÁöÑËøáÁ®ã„ÄÇ StackOverFlowError ÔºöÁ∫øÁ®ãËØ∑Ê±ÇÁöÑÊ†àÁöÑÊ∑±Â∫¶Â§ß‰∫éËôöÊãüÊú∫ÊâÄÂÖÅËÆ∏ÁöÑÊ∑±Â∫¶„ÄÇ OutOfMemoryError ÔºöËôöÊãüÊú∫Ê†àÂèØ‰ª•ËøõË°åÂä®ÊÄÅÊâ©Â±ïÔºå‰ΩÜÊòØÊâ©Â±ïÁöÑÊ†àÊó†Ê≥ïÁî≥ËØ∑ÁöÑÂà∞Ë∂≥Â§üÁöÑÂÜÖÂ≠ò„ÄÇ Êú¨Âú∞ÊñπÊ≥ïÊ†àjavaË∞ÉÁî®Êú¨Âú∞ÊñπÊ≥ïÔºàÂèØ‰ª•‰∏∫ÂÖ∂‰ªñËØ≠Ë®ÄÊèê‰æõÊé•Âè£ÔºâÔºå‰ºöÊä•OutOfMemoryErrorÂíåStackOverFlowError Á®ãÂ∫èËÆ°Êï∞Âô®ÊØè‰∏™Á∫øÁ®ãÈÉΩ‰ºöÊúâ‰∏Ä‰∏™Á®ãÂ∫èËÆ°Êï∞Âô®Ôºå==ÂîØ‰∏Ä‰∏Ä‰∏™Ê≤°ÊúâOutOfMemoryErrorÊÉÖÂÜµÁöÑÂÜÖÂ≠òÂå∫Âüü==„ÄÇ","categories":[{"name":"JVMÁõ∏ÂÖ≥","slug":"JVMÁõ∏ÂÖ≥","permalink":"http://example.com/categories/JVM%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"ÈÄÉÈÄ∏ÂàÜÊûê","slug":"ÈÄÉÈÄ∏ÂàÜÊûê","date":"2021-07-26T16:00:00.000Z","updated":"2021-08-02T08:23:12.970Z","comments":true,"path":"2021/07/27/ÈÄÉÈÄ∏ÂàÜÊûê/","link":"","permalink":"http://example.com/2021/07/27/%E9%80%83%E9%80%B8%E5%88%86%E6%9E%90/","excerpt":"","text":"ÂÖ≥‰∫éËøô‰∏™ÈÄÉÈÄ∏ÈóÆÈ¢òÔºåÊàëÁöÑ‰∫ÜËß£‰∏ªË¶ÅÊù•Ê∫ê‰∫éËøôÁØá[ÊñáÁ´†](Ê∑±ÂÖ•ÁêÜËß£Java‰∏≠ÁöÑÈÄÉÈÄ∏ÂàÜÊûê_HollisChuang‚Äôs Blog-CSDNÂçöÂÆ¢_ÈÄÉÈÄ∏ÂàÜÊûê) ‰∫∫ÂÆ∂ÂÜôÁöÑ‰∏çÈîôÔºåÂú®Ê≠§‰æø‰∏çÂÜçÂ§öÂÅöËß£ÈáäÔºåÂèØ‰ªéÂéüÊñáÁ´†ËØ¶ÁªÜÈòÖËØª„ÄÇ","categories":[{"name":"JVMÁõ∏ÂÖ≥","slug":"JVMÁõ∏ÂÖ≥","permalink":"http://example.com/categories/JVM%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"Á¨¶Âè∑ÂºïÁî®ÂíåÁõ¥Êé•ÂºïÁî®","slug":"Á¨¶Âè∑ÂºïÁî®ÂíåÁõ¥Êé•ÂºïÁî®","date":"2021-07-25T16:00:00.000Z","updated":"2021-08-02T08:19:39.226Z","comments":true,"path":"2021/07/26/Á¨¶Âè∑ÂºïÁî®ÂíåÁõ¥Êé•ÂºïÁî®/","link":"","permalink":"http://example.com/2021/07/26/%E7%AC%A6%E5%8F%B7%E5%BC%95%E7%94%A8%E5%92%8C%E7%9B%B4%E6%8E%A5%E5%BC%95%E7%94%A8/","excerpt":"","text":"Á¨¶Âè∑ÂºïÁî®ÔºöÁ¨¶Âè∑ÂºïÁî®‰ª•‰∏ÄÁªÑÁ¨¶Âè∑Êù•ÊèèËø∞ÊâÄÂºïÁî®ÁöÑÁõÆÊ†á„ÄÇÁ¨¶Âè∑ÂºïÁî®ÂèØ‰ª•ÊòØ‰ªª‰ΩïÂΩ¢ÂºèÁöÑÂ≠óÈù¢ÈáèÔºåÂè™Ë¶Å‰ΩøÁî®Êó∂ËÉΩÊó†Ê≠ß‰πâÂú∞ÂÆö‰ΩçÂà∞ÁõÆÊ†áÂç≥ÂèØÔºåÁ¨¶Âè∑ÂºïÁî®ÂíåËôöÊãüÊú∫ÁöÑÂ∏ÉÂ±ÄÊó†ÂÖ≥„ÄÇ ‰∏™‰∫∫ÁêÜËß£‰∏∫ÔºöÂú®ÁºñËØëÁöÑÊó∂ÂÄô‰∏Ä‰∏™ÊØè‰∏™javaÁ±ªÈÉΩ‰ºöË¢´ÁºñËØëÊàê‰∏Ä‰∏™classÊñá‰ª∂Ôºå‰ΩÜÂú®ÁºñËØëÁöÑÊó∂ÂÄôËôöÊãüÊú∫Âπ∂‰∏çÁü•ÈÅìÊâÄÂºïÁî®Á±ªÁöÑÂú∞ÂùÄÔºåÂ§ö‰ª•Â∞±Áî®Á¨¶Âè∑ÂºïÁî®Êù•‰ª£ÊõøÔºåËÄåÂú®Ëøô‰∏™Ëß£ÊûêÈò∂ÊÆµÂ∞±ÊòØ‰∏∫‰∫ÜÊääËøô‰∏™Á¨¶Âè∑ÂºïÁî®ËΩ¨ÂåñÊàê‰∏∫ÁúüÊ≠£ÁöÑÂú∞ÂùÄÁöÑÈò∂ÊÆµ„ÄÇ Áõ¥Êé•ÂºïÁî®ÔºöÁõ¥Êé•ÂºïÁî®ÂèØ‰ª•ÊòØÔºöÁõ¥Êé•ÊåáÂêëÁõÆÊ†áÁöÑÊåáÈíà„ÄÅÁõ∏ÂØπÂÅèÁßªÈáè„ÄÅËÉΩÈó¥Êé•ÂÆö‰ΩçÂà∞ÁõÆÊ†áÁöÑÂè•ÊüÑ„ÄÇÁõ¥Êé•ÂºïÁî®ÂíåËôöÊãüÊú∫ÁöÑÂ∏ÉÂ±ÄÊòØÁõ∏ÂÖ≥ÁöÑÔºå‰∏çÂêåÁöÑËôöÊãüÊú∫ÂØπ‰∫éÁõ∏ÂêåÁöÑÁ¨¶Âè∑ÂºïÁî®ÊâÄÁøªËØëÂá∫Êù•ÁöÑÁõ¥Êé•ÂºïÁî®‰∏ÄËà¨ÊòØ‰∏çÂêåÁöÑ„ÄÇÂ¶ÇÊûúÊúâ‰∫ÜÁõ¥Êé•ÂºïÁî®ÔºåÈÇ£‰πàÁõ¥Êé•ÂºïÁî®ÁöÑÁõÆÊ†á‰∏ÄÂÆöË¢´Âä†ËΩΩÂà∞‰∫ÜÂÜÖÂ≠ò‰∏≠„ÄÇ","categories":[{"name":"JVMÁõ∏ÂÖ≥","slug":"JVMÁõ∏ÂÖ≥","permalink":"http://example.com/categories/JVM%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"Âè•ÊüÑHandle","slug":"Âè•ÊüÑHandle","date":"2021-07-24T16:00:00.000Z","updated":"2021-08-02T08:18:51.080Z","comments":true,"path":"2021/07/25/Âè•ÊüÑHandle/","link":"","permalink":"http://example.com/2021/07/25/%E5%8F%A5%E6%9F%84Handle/","excerpt":"","text":"ÂØπË±°Âè•ÊüÑÔºö‰∏Ä‰∏™ÂîØ‰∏ÄÁöÑÊï¥Êï∞,‰Ωú‰∏∫ÂØπË±°ÁöÑË∫´‰ªΩid,Âå∫ÂàÜ‰∏çÂêåÁöÑÂØπË±°ÔºåÂíåÂêåÁ±ª‰∏≠ÁöÑ‰∏çÂêåÂÆû‰æã„ÄÇ ÊØèÊ¨°Êìç‰ΩúÂØπË±°Â∞±ÊòØÊ†πÊçÆÂè•ÊüÑÂéªÊâæÂà∞ÂØπË±°Êìç‰ΩúÂØπË±°ÁöÑ. Âç≥‰ΩøÊ≤°ÊúâÂØπË±°,Êàë‰ª¨‰πüÂèØ‰ª•ËÆ©Âè•ÊüÑÂçïÁã¨Â≠òÂú®„ÄÇ jvm‰∏≠ÁöÑÂØπË±°ËÆøÈóÆÂè•ÊüÑÔºöÁî±‰∫éreferenceÁ±ªÂûãÂú®JavaËôöÊãüÊú∫ËßÑËåÉÈáåÂè™ËßÑÂÆö‰∫Ü‰∏Ä‰∏™ÊåáÂêëÂØπË±°ÁöÑÂºïÁî®ÔºåÂπ∂Ê≤°ÊúâÂÆö‰πâËøô‰∏™ÂºïÁî®Â∫îËØ•ÈÄöËøáÂì™ÁßçÊñπÂºèÂéªÂÆö‰ΩçÔºå‰ª•ÂèäËÆøÈóÆÂà∞JavaÂ†Ü‰∏≠ÁöÑÂØπË±°ÁöÑÂÖ∑‰Ωì‰ΩçÁΩÆÔºåÂõ†Ê≠§‰∏çÂêåËôöÊãüÊú∫ÂÆûÁé∞ÁöÑÂØπË±°ËÆøÈóÆÊñπÂºè‰ºöÊúâÊâÄ‰∏çÂêåÔºå‰∏ªÊµÅÁöÑËÆøÈóÆÊñπÂºèÊúâ‰∏§ÁßçÔºö‰ΩøÁî®Âè•ÊüÑÂíåÁõ¥Êé•ÊåáÈíà„ÄÇ 1„ÄÅ‰ΩøÁî®Âè•ÊüÑËÆøÈóÆÊñπÂºèÂ¶ÇÊûú‰ΩøÁî®Âè•ÊüÑËÆøÈóÆÊñπÂºèÔºåJavaÂ†Ü‰∏≠‰ºöÂàíÂàÜÂá∫‰∏ÄÂùóÂÜÖÂ≠òÊù•‰Ωú‰∏∫Âè•ÊüÑÊ±†Ôºåreference‰∏≠Â≠òÂÇ®ÁöÑÂ∞±ÊòØÂØπË±°ÁöÑÂè•ÊüÑÂú∞ÂùÄÔºåËÄåÂè•ÊüÑ‰∏≠ÂåÖÂê´‰∫ÜÂØπË±°ÂÆû‰æãÊï∞ÊçÆÂíåÁ±ªÂûãÊï∞ÊçÆÂêÑËá™ÁöÑÂÖ∑‰ΩìÂú∞ÂùÄ‰ø°ÊÅØ„ÄÇ‰ΩøÁî®Âè•ÊüÑÊñπÂºèÊúÄÂ§ßÁöÑÂ•ΩÂ§ÑÂ∞±ÊòØreference‰∏≠Â≠òÂÇ®ÁöÑÊòØÁ®≥ÂÆöÁöÑÂè•ÊüÑÂú∞ÂùÄÔºåÂú®ÂØπË±°Ë¢´ÁßªÂä®ÔºàÂûÉÂúæÊî∂ÈõÜÊó∂ÁßªÂä®ÂØπË±°ÊòØÈùûÂ∏∏ÊôÆÈÅçÁöÑË°å‰∏∫ÔºâÊó∂Âè™‰ºöÊîπÂèòÂè•ÊüÑ‰∏≠ÁöÑÂÆû‰æãÊï∞ÊçÆÊåáÈíàÔºåËÄåreferenceÊú¨Ë∫´‰∏çÈúÄË¶ÅË¢´‰øÆÊîπ„ÄÇ 2„ÄÅ‰ΩøÁî®Áõ¥Êé•ÊåáÈíàËÆøÈóÆÊñπÂºèÂ¶ÇÊûú‰ΩøÁî®ËØ•ÊñπÂºèÔºåJavaÂ†ÜÂØπË±°ÁöÑÂ∏ÉÂ±ÄÂ∞±ÂøÖÈ°ªËÄÉËôëÂ¶Ç‰ΩïÊîæÁΩÆËÆøÈóÆÁ±ªÂûãÊï∞ÊçÆÁöÑÁõ∏ÂÖ≥‰ø°ÊÅØÔºåreference‰∏≠Áõ¥Êé•Â≠òÂÇ®ÁöÑÂ∞±ÊòØÂØπË±°Âú∞ÂùÄ„ÄÇ‰ΩøÁî®Áõ¥Êé•ÊåáÈíàÊñπÂºèÊúÄÂ§ßÁöÑÂ•ΩÂ§ÑÂ∞±ÊòØÈÄüÂ∫¶Êõ¥Âø´Ôºå‰ªñËäÇÁúÅ‰∫Ü‰∏ÄÊ¨°ÊåáÈíàÂÆö‰ΩçÁöÑÊó∂Èó¥ÂºÄÈîÄ„ÄÇ ÊÄªÁªìÂú®ÂØπË±°ÂàÜÈÖçÁöÑÊó∂ÂÄô,Âè•ÊüÑ‰ΩøÁî®ËæÉÂ§ö.Âú®ÂØπË±°ËÆøÈóÆÁöÑÊó∂ÂÄô,ÂÖ∂ÂÆûÊòØÂèØ‰ª•ÊùÉË°°ÁöÑ,Â¶ÇÊûú‰ΩøÁî®Áõ¥Êé•ÊåáÈíàÁöÑÊñπÂºèËøõË°åÂØπË±°ËÆøÈóÆ,ÈÇ£‰πàÊõ¥Â§öÁöÑÂ∞±ÊòØÂÖ≥Ê≥®Â†Ü‰∏≠Â∑≤ÂàÜÈÖçÂØπË±°ÁöÑÂø´ÈÄüËÆøÈóÆ;Â¶ÇÊûú‰ΩøÁî®Âè•ÊüÑËÆøÈóÆÁöÑÊñπÂºè,Êõ¥Â§öÁöÑÊòØËÄÉËôëÂà∞GCÁöÑÊó∂ÂÄô,ÂØπË±°ÁöÑÁßªÂä®ÂçÅÂàÜÈ¢ëÁπÅ(ÂÖ∑‰ΩìÂèÇÁÖßJVMÂûÉÂúæÂõûÊî∂ÁÆóÊ≥ï),ÈÇ£‰πàÂè•ÊüÑËÆøÈóÆÊñπÂºè‰ºöÊõ¥Êúâ‰ºòÂäø„ÄÇÊâÄ‰ª•ÁõÆÂâçÊù•ÁúãÔºåÂ∞±HotSpotÊù•ËØ¥ÔºåÂØπË±°ÂàÜÈÖçÊõ¥Â§ö‰ΩøÁî®Âè•ÊüÑÔºåÂØπË±°ËÆøÈóÆ‰ΩøÁî®Áõ¥Êé•ÊåáÈíà„ÄÇ","categories":[{"name":"JVMÁõ∏ÂÖ≥","slug":"JVMÁõ∏ÂÖ≥","permalink":"http://example.com/categories/JVM%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"StackOverFlowÂíåOutOfMemoryÂØπÊØî","slug":"StackOverFlowÂíåOutOfMemoryÂØπÊØî","date":"2021-07-23T16:00:00.000Z","updated":"2021-08-02T08:11:05.053Z","comments":true,"path":"2021/07/24/StackOverFlowÂíåOutOfMemoryÂØπÊØî/","link":"","permalink":"http://example.com/2021/07/24/StackOverFlow%E5%92%8COutOfMemory%E5%AF%B9%E6%AF%94/","excerpt":"","text":"Áî±‰∫éHotSpotËôöÊãüÊú∫‰∏≠Âπ∂‰∏çÂå∫ÂàÜËôöÊãüÊú∫Ê†àÂíåÊú¨Âú∞ÊñπÊ≥ïÊ†àÔºåÂõ†Ê≠§ÂØπ‰∫éHotSpotÊù•ËØ¥Ôºå-XossÂèÇÊï∞ÔºàËÆæÁΩÆÊú¨Âú∞ÊñπÊ≥ïÊ†àÂ§ßÂ∞èÔºâËôΩÁÑ∂Â≠òÂú®Ôºå‰ΩÜÂÆûÈôÖ‰∏äÊòØÊ≤°Êúâ‰ªª‰ΩïÊïàÊûúÁöÑÔºåÊ†àÂÆπÈáèÂè™ËÉΩÁî±-XssÂèÇÊï∞Êù•ËÆæÂÆö„ÄÇÂÖ≥‰∫éËôöÊãüÊú∫Ê†àÂíåÊú¨Âú∞ÊñπÊ≥ïÊ†àÔºåÂú®„ÄäJavaËôöÊãüÊú∫ËßÑËåÉ„Äã‰∏≠ÊèèËø∞‰∫Ü‰∏§ÁßçÂºÇÂ∏∏Ôºö 1)Â¶ÇÊûúÁ∫øÁ®ãËØ∑Ê±ÇÁöÑÊ†àÊ∑±Â∫¶Â§ß‰∫éËôöÊãüÊú∫ÊâÄÂÖÅËÆ∏ÁöÑÊúÄÂ§ßÊ∑±Â∫¶ÔºåÂ∞ÜÊäõÂá∫StackOverflowErrorÂºÇÂ∏∏„ÄÇ 2ÔºâÂ¶ÇÊûúËôöÊãüÊú∫ÁöÑÊ†àÂÜÖÂ≠òÂÖÅËÆ∏Âä®ÊÄÅÊâ©Â±ïÔºåÂΩìÊâ©Â±ïÊ†àÂÆπÈáèÊó†Ê≥ïÁî≥ËØ∑Âà∞Ë∂≥Â§üÁöÑÂÜÖÂ≠òÊó∂ÔºåÂ∞ÜÊäõÂá∫DutOfMemory ErrorÂºÇÂ∏∏„ÄÇ „ÄäJavaËôöÊãüÊú∫ËßÑËåÉ„ÄãÊòéÁ°ÆÂÖÅËÆ∏JavaËôöÊãüÊú∫ÂÆûÁé∞Ëá™Ë°åÈÄâÊã©ÊòØÂê¶ÊîØÊåÅÊ†àÁöÑÂä®ÊÄÅÊâ©Â±ïÔºåËÄåHotSpotËôöÊãüÊú∫ÁöÑÈÄâÊã©ÊòØ‰∏çÊîØÊåÅÊâ©Â±ïÔºåÊâÄ‰ª•Èô§ÈùûÂú®ÂàõÂª∫Á∫øÁ®ãÁî≥ËØ∑ÂÜÖÂ≠òÊó∂Â∞±Âõ†Êó†Ê≥ïËé∑ÂæóË∂≥Â§üÂÜÖÂ≠òËÄåÂá∫Áé∞OutOfMemoryErrorÂºÇÂ∏∏ÔºåÂê¶ÂàôÂú®Á∫øÁ®ãËøêË°åÊó∂ÊòØ‰∏ç‰ºöÂõ†‰∏∫Êâ©Â±ïËÄåÂØºËá¥ÂÜÖÂ≠òÊ∫¢Âá∫ÁöÑÔºåÂè™‰ºöÂõ†‰∏∫Ê†àÂÆπÈáèÊó†Ê≥ïÂÆπÁ∫≥Êñ∞ÁöÑÊ†àÂ∏ßËÄåÂØºËá¥StackOverflowErrorÂºÇÂ∏∏„ÄÇ JavaÂ†ÜÊ∫¢Âá∫Ôºö Âè™Ë¶Å‰∏çÊñ≠ÁöÑÂàõÂª∫ÂØπË±°ÔºåËææÂà∞ÊúÄÂ§ßÂ†ÜÂÆπÈáèÈôêÂà∂‰πãÂêéÂ∞±‰ºöÊäõÂá∫OOMÂºÇÂ∏∏Ôºõ ËôöÊãüÊú∫Ê†àÂíåÊú¨Âú∞ÊñπÊ≥ïÊ†àÊ∫¢Âá∫Ôºö ‰∏çÊñ≠ÂàõÂª∫Á∫øÁ®ãÔºå‰ºöÂØºËá¥OOMÂºÇÂ∏∏ ÊñπÊ≥ïÂå∫Ê∫¢Âá∫Ôºö ÈÄöËøáString::inner()Ëøô‰∏™Êú¨Âú∞ÊñπÊ≥ïÔºå‰∏çÊñ≠Ê∑ªÂä†ÂØπË±°ÔºåÂ∞ÜÂØºËá¥OOMÂºÇÂ∏∏","categories":[{"name":"JVMÁõ∏ÂÖ≥","slug":"JVMÁõ∏ÂÖ≥","permalink":"http://example.com/categories/JVM%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"java‰∏≠ÁöÑÂêÑÁßçÈîÅ","slug":"java‰∏≠ÁöÑÂêÑÁßçÈîÅ","date":"2021-07-22T16:00:00.000Z","updated":"2021-08-02T08:09:27.552Z","comments":true,"path":"2021/07/23/java‰∏≠ÁöÑÂêÑÁßçÈîÅ/","link":"","permalink":"http://example.com/2021/07/23/java%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8D%E9%94%81/","excerpt":"","text":"ÊÇ≤ËßÇÈîÅ„ÄÅ‰πêËßÇÈîÅËøô‰∏§ÁßçÈîÅÂπ∂‰∏çÊòØÊåáÊüê‰∏™ÂÖ∑‰ΩìÁöÑÈîÅÔºåËÄåÊòØÊåá‰∏ÄÁßçÁ≠ñÁï•Ôºå‰∏ÄÁßçÂÆèËßÇÁöÑÊèèËø∞„ÄÇ ÊÇ≤ËßÇÈîÅÔºàPessimistic LockÔºâÔºöËÆ§‰∏∫ÂÜ≤Á™Å‰∏ÄÂÆö‰ºöÂèëÁîüÔºåÊØèÊ¨°ÊãøÊï∞ÊçÆÊó∂ÈÉΩËÆ§‰∏∫Âà´ÁöÑÁ∫øÁ®ã‰ºöÂØπËØ•Êï∞ÊçÆËøõË°å‰øÆÊîπÔºåÊâÄ‰ª•ÊØèÊ¨°ÊãøÊï∞ÊçÆÈÉΩ‰ºö‰∏äÈîÅÔºõËøôÊ†∑ÂÖ∂‰ªñÁ∫øÁ®ãÊÉ≥ÂèñÂæóÊï∞ÊçÆÈÉΩ‰ºöË¢´ÈòªÂ°ûÔºåÁõ¥Âà∞ÊÇ≤ËßÇÈîÅÈáäÊîæ„ÄÇÔºàÂè™Ë¶Å‰∏äÈîÅÔºåÂ∞±ÈÉΩÊòØÊÇ≤ËßÇÈîÅÔºâ ‰πêËßÇÈîÅÔºàOptimistic LockÔºâÔºöËÆ§‰∏∫ÂÜ≤Á™Å‰∏ÄÂÆö‰∏ç‰ºöÂèëÁîüÔºåÊØèÊ¨°ÊãøÊï∞ÊçÆÈÉΩËÆ§‰∏∫‰∏ç‰ºöË¢´‰øÆÊîπÔºåÊâÄ‰ª•ÈÉΩ‰∏ç‰∏äÈîÅÔºõ‰ΩÜÊòØÂ¶ÇÊûúÊÉ≥Ë¶ÅÊõ¥Êñ∞Êï∞ÊçÆÔºå‰ºöÂú®Êõ¥Êñ∞ÂâçÊ£ÄÊü•Ëá™ËØªÂèñÂà∞Êõ¥Êñ∞ËøôÊÆµÊó∂Èó¥ÂÜÖÊòØÂê¶ÊúâÂÖ∂‰ªñÁ∫øÁ®ãÂØπÊï∞ÊçÆËøõË°åÊõ¥ÊîπÔºåÂ¶ÇÊûúÊõ¥ÊîπËøáÈÇ£Â∞±ÈáçÊñ∞ËØªÂèñÔºåÁõ¥Âà∞ËØªÂèñÊàêÂäü„ÄÇÔºàCASÁÆóÊ≥ïÔºâ synchronizedÈîÅÁöÑÂçáÁ∫ßÊó†ÈîÅ‚ÄîÂÅèÂêëÈîÅ‚ÄîËΩªÈáèÁ∫ßÈîÅÔºàËá™ÊóãÈîÅÔºâ‚ÄîÈáçÈáèÁ∫ßÈîÅ ‰∏äËø∞ËøáÁ®ãÂè´ÂÅöÈîÅËÜ®ËÉÄ ÂÅèÂêëÈîÅÔºöÂàùÊ¨°ÊâßË°åÂà∞synchronized‰ª£Á†ÅÂùóÁöÑÊó∂ÂÄôÔºåÈîÅÂØπË±°‰ºöÂèòÊàêÂÅèÂêëÈîÅÔºà‰πüÂ∞±ÊòØÂÅèÂêë‰∫éÁ¨¨‰∏Ä‰∏™Ëé∑ÂæóÂÆÉÁöÑÁ∫øÁ®ãÔºâÔºåÂêåÊ≠•‰ª£Á†ÅÂùóÊâßË°åÂÆåÊØï‰πãÂêéÁ∫øÁ®ã‰∏ç‰ºö‰∏ªÂä®ÈáäÊîæÂÅèÂêëÈîÅÔºõÁ¨¨‰∫åÊ¨°ÊâßË°åËá≥ÂêåÊ≠•‰ª£Á†ÅÂùóÊó∂ÔºåÁ∫øÁ®ã‰ºöÂà§Êñ≠Ê≠§Êó∂ÊåÅÊúâÈîÅÁöÑÁ∫øÁ®ãÊòØÂê¶Â∞±ÊòØËá™Â∑±ÔºåÂ¶ÇÊûúÊòØÁöÑËØùÂ∞±Ê≠£Â∏∏ÊâßË°å„ÄÇÁî±‰∫éÊ≤°ÊúâÈáäÊîæÈîÅÔºåÊâÄ‰ª•‰πü‰∏çÈúÄË¶ÅÈáçÊñ∞Âä†ÈîÅÔºåÊïÖÂÅèÂêëÈîÅÊÄßËÉΩÈ´ò„ÄÇ ËΩªÈáèÁ∫ßÈîÅÔºö‰∏ÄÊó¶ÊúâÁ¨¨‰∫å‰∏™Á∫øÁ®ãÂä†ÂÖ•Á´û‰∫âÔºåÂÅèÂêëÈîÅÂ∞±ÂçáÁ∫ß‰∏∫ËΩªÈáèÁ∫ßÈîÅÔºåÂΩìÊüêÁ∫øÁ®ãÂ∞ùËØïËé∑ÂèñÈîÅÁöÑÊó∂ÂÄôÔºåÂèëÁé∞Â∑≤ÁªèË¢´ÂÖ∂‰ªñÁ∫øÁ®ãÂç†Áî®ÔºåÂè™ËÉΩÁ≠âÂæÖÂÖ∂ÈáäÊîæÔºåÊ≠§Êó∂ÂèëÁîüÈîÅÁ´û‰∫â„ÄÇÂú®ÈîÅÁ´û‰∫â‰∏ãÔºåÊ≤°Êä¢Âà∞ÈîÅÁöÑÁ∫øÁ®ã‰ºöËøõË°åËá™ÊóãÔºåÂç≥‰∏çÂÅúÁöÑÂæ™ÁéØÂà§Êñ≠ÈîÅÊòØÂê¶ËÉΩË¢´Ëé∑Âèñ„ÄÇ‰∏Ä‰∏™Á∫øÁ®ãÊåÅÊúâÈîÅÔºåÂÖ∂ÂÆÉÁ∫øÁ®ãÂú®ÂéüÂú∞Á©∫ËÄócpuÔºåËøô‰∏™Áé∞Ë±°Âè´ÂÅöÂøôÁ≠â„ÄÇÂ¶ÇÊûúÂ§ö‰∏™Á∫øÁ®ãÁî®‰∏Ä‰∏™ÈîÅÔºå‰ΩÜÊòØÊú™ÂèëÁîüÈîÅÁ´û‰∫âÊàñÊòØÂæàËΩªÂæÆÁöÑÈîÅÁ´û‰∫âÔºåsynchronizedÂ∞±Áî®ËΩªÈáèÁ∫ßÈîÅ„ÄÇÁ∫øÁ®ãÈïøÊó∂Èó¥ÁöÑËá™ÊóãÊòØÈùûÂ∏∏Ê∂àËÄóËµÑÊ∫êÁöÑ„ÄÇ ÈáçÈáèÁ∫ßÈîÅÔºöÂ¶ÇÊûúÈîÅÁöÑÁ´û‰∫âÊÉÖÂÜµ‰∏•ÈáçÔºåÊüê‰∏™ËææÂà∞ÊúÄÂ§ßËá™ÊóãÊ¨°Êï∞ÁöÑÁ∫øÁ®ã‰ºöÂ∞ÜËΩªÈáèÁ∫ßÈîÅÂçáÁ∫ß‰∏∫ÈáçÈáèÁ∫ßÈîÅÔºõÂΩìÂêéÁª≠Á∫øÁ®ãÂ∞ùËØïËé∑ÂèñÈîÅÊó∂Ôºå‰∏ç‰ºöÂÜçËøõË°åËá™ÊóãÔºåËÄåÊòØÁõ¥Êé•Â∞ÜËá™Â∑±ÊåÇËµ∑ÔºåÁ≠âÂæÖË¢´Âî§ÈÜí„ÄÇ ÂÖ¨Âπ≥ÈîÅ„ÄÅÈùûÂÖ¨Âπ≥ÈîÅÂÖ¨Âπ≥ÈîÅÂÖàÁî≥ËØ∑ÂÖàÂæóÂà∞ ÈùûÂÖ¨Âπ≥ÈîÅÂèØËÉΩÊòØÈöèÊú∫ÊàñËÄÖÊ†πÊçÆ‰ºòÂÖàÁ∫ßÊù•ÂæóÂà∞ÈîÅ reentrantlockÈªòËÆ§ÊòØÈùûÂÖ¨Âπ≥ÈîÅÔºå‰πüÂèØ‰ª•ËÆæÁΩÆ‰∏∫ÂÖ¨Âπ≥ÈîÅÔºõ synchronizedÂè™ËÉΩÊòØÈùûÂÖ¨Âπ≥ÈîÅ ‰∏∫‰ªÄ‰πàÈùûÂÖ¨Âπ≥ÈîÅÂêûÂêêÈáèÊõ¥Â§ßÂõ†‰∏∫ÂÖ¨Âπ≥ÈîÅÂú®Ëé∑ÂèñÈîÅÊó∂ÔºåÊ∞∏ËøúÊòØÁ≠âÂæÖÊó∂Èó¥ÊúÄÈïøÁöÑÁ∫øÁ®ãËé∑ÂèñÂà∞ÈîÅÔºåËøôÊ†∑ÂΩìÁ∫øÁ®ãT1ÈáäÊîæÈîÅ‰ª•ÂêéÔºåÂ¶ÇÊûúËøòÊÉ≥ÁªßÁª≠ÂÜçËé∑ÂèñÈîÅÔºåÂÆÉ‰πüÂæóÂéªÂêåÊ≠•ÈòüÂàóÂ∞æÈÉ®ÊéíÈòüÔºåËøôÊ†∑Â∞±‰ºöÈ¢ëÁπÅÁöÑÂèëÁîüÁ∫øÁ®ãÁöÑ‰∏ä‰∏ãÊñáÂàáÊç¢ÔºåÂΩìÁ∫øÁ®ãË∂äÂ§öÔºåÂØπCPUÁöÑÊçüËÄóÂ∞±‰ºöË∂ä‰∏•Èáç„ÄÇ ÈùûÂÖ¨Âπ≥ÈîÅÊÄßËÉΩËôΩÁÑ∂‰ºò‰∫éÂÖ¨Âπ≥ÈîÅÔºå‰ΩÜÊòØ‰ºöÂ≠òÂú®ÂØºËá¥Á∫øÁ®ãÈ••È•øÁöÑÊÉÖÂÜµ„ÄÇÂú®ÊúÄÂùèÁöÑÊÉÖÂÜµ‰∏ãÔºåÂèØËÉΩÂ≠òÂú®Êüê‰∏™Á∫øÁ®ã‰∏ÄÁõ¥Ëé∑Âèñ‰∏çÂà∞ÈîÅ„ÄÇ‰∏çËøáÁõ∏ÊØîÊÄßËÉΩËÄåË®ÄÔºåÈ••È•øÈóÆÈ¢òÂèØ‰ª•ÊöÇÊó∂ÂøΩÁï•ÔºåËøôÂèØËÉΩÂ∞±ÊòØReentrantLockÈªòËÆ§ÂàõÂª∫ÈùûÂÖ¨Âπ≥ÈîÅÁöÑÂéüÂõ†‰πã‰∏Ä ËØªÂÜôÈîÅ„ÄÅÂÖ±‰∫´ÈîÅ„ÄÅ‰∫íÊñ•ÈîÅËØªÈîÅÔºàÂÖ±‰∫´ÈîÅÔºâÔºåÂÜôÈîÅÔºà‰∫íÊñ•ÈîÅ„ÄÅÊéí‰ªñÈîÅÔºâ„ÄÇ Â¶ÇÊûúËØªÂèñÊï∞ÊçÆÊòØ‰∏∫‰∫ÜÊõ¥Êñ∞ÂØπË±°ÔºåÈÇ£‰πàÂä†ÂÜôÈîÅÔºåÊåÅÊúâÂÜôÈîÅÁöÑÊó∂ÂÄôÂÖ∂‰ªñÁ∫øÁ®ãÈúÄË¶ÅÁ≠âÂæÖÔºõ Â¶ÇÊûúËØªÂèñÊï∞ÊçÆÂè™ÊòØ‰∏∫‰∫ÜÊü•ËØ¢ÔºåÈÇ£‰πàÂä†ËØªÈîÅÔºåÂÖ∂‰ªñÁ∫øÁ®ãÂ¶ÇÊûú‰πüË¶ÅÂä†ËØªÈîÅÔºåÂèØ‰ª•Áõ¥Êé•Ëé∑ÂèñËØ•Êï∞ÊçÆ ÂèØÈáçÂÖ•ÈîÅ„ÄÅ‰∏çÂèØÈáçÂÖ•ÈîÅ‰∏çÂèØÈáçÂÖ•ÈîÅÂΩìÂâçÁ∫øÁ®ãÊâßË°å‰∏≠Â∑≤ÁªèËé∑ÂèñÂà∞‰∫ÜËØ•ÈîÅÔºåÂÜçÊ¨°Ëé∑ÂèñËØ•ÈîÅÊó∂Â∞±‰ºöËé∑Âèñ‰∏çÂà∞ËÄåË¢´ÈòªÂ°û ÂèØÈáçÂÖ•ÈîÅÂΩìÂâçÁ∫øÁ®ãÊâßË°å‰∏≠Â∑≤ÁªèËé∑Âèñ‰∫ÜËØ•ÈîÅÔºåÂπ∂‰∏îÂèØ‰ª•ÂÜçÊ¨°Ëé∑ÂèñËØ•ÈîÅËÄå‰∏ç‰ºöÂá∫Áé∞Ê≠ªÈîÅÔºõsynchronizedÂíåReentrantLockÈÉΩÊòØÂèØÈáçÂÖ•ÈîÅ synchronized ÂíåreentrantlockÁöÑÂºÇÂêåÂÆûÁé∞ÊñπÂºèsynchronizedÊòØjvmÂÆûÁé∞ÁöÑÔºåreentrantlockÊòØjdkÂÆûÁé∞ÁöÑ Á≠âÂæÖÂèØ‰∏≠Êñ≠ÂΩìÊåÅÊúâÈîÅÁöÑÁ∫øÁ®ãÈïøÊúü‰∏çÈáäÊîæÈîÅÁöÑÊó∂ÂÄôÔºåÊ≠£Âú®Á≠âÂæÖÁöÑÁ∫øÁ®ãÂèØ‰ª•ÈÄâÊã©ÊîæÂºÉÁ≠âÂæÖÔºåÈÄâÊã©Â§ÑÁêÜÂÖ∂‰ªñ‰∫ãÊÉÖ„ÄÇreentrantÂèØ‰∏≠Êñ≠Ôºåsynchronized‰∏çÂèØ‰ª• Áõ∏ÂêåÔºö‰∫åËÄÖÈÉΩÂèØ‰ª•Ëß£ÂÜ≥Á∫øÁ®ãÂÆâÂÖ®ÈóÆÈ¢ò ‰∏çÂêåÔºösynchronizedÊú∫Âà∂Âú®ÊâßË°åÂÆåÁõ∏Â∫îÁöÑÂêåÊ≠•‰ª£Á†Å‰ª•ÂêéÔºåËá™Âä®ÁöÑÈáäÊîæÂêåÊ≠•ÁõëËßÜÂô®ÔºõLockÈúÄË¶ÅÊâãÂä®ÁöÑÂêØÂä®ÂêåÊ≠•ÔºàLockÔºàÔºâÔºåÂêåÊó∂ÁªìÊùüÂêåÊ≠•‰πüÈúÄË¶ÅÊâãÂä®ÁöÑÂÆûÁé∞ÔºàunlockÔºàÔºâÔºâ Èó≠ÈîÅ‰ΩúÁî®ÔºöÁ≠âÂÖ∂‰ªñÁ∫øÁ®ãËøêË°åÁªìÊùü‰πãÂêéÔºåÊâçÊâßË°åÊåáÂÆöÁ∫øÁ®ã ÂÆûÁé∞ÊñπÂºèÔºö‰∏ÄÔºöÁî®countDownLatch ‰∫åÔºöÁî®FutureTask","categories":[{"name":"JavaÂπ∂Âèë","slug":"JavaÂπ∂Âèë","permalink":"http://example.com/categories/Java%E5%B9%B6%E5%8F%91/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"JUCÔºàJava Util ConcurrentÔºâÂêåÊ≠•Âô®Â∑•ÂÖ∑","slug":"JUCÔºàJava Util ConcurrentÔºâÂêåÊ≠•Âô®Â∑•ÂÖ∑","date":"2021-07-21T16:00:00.000Z","updated":"2021-08-02T08:17:09.613Z","comments":true,"path":"2021/07/22/JUCÔºàJava Util ConcurrentÔºâÂêåÊ≠•Âô®Â∑•ÂÖ∑/","link":"","permalink":"http://example.com/2021/07/22/JUC%EF%BC%88Java%20Util%20Concurrent%EF%BC%89%E5%90%8C%E6%AD%A5%E5%99%A8%E5%B7%A5%E5%85%B7/","excerpt":"","text":"1„ÄÅCountDownLatchËøôÊòØ‰∏Ä‰∏™ÂêåÊ≠•Â∑•ÂÖ∑Á±ªÔºåÁî®‰∫éÂçèË∞ÉÂ§ö‰∏™Á∫øÁ®ã‰πãÈó¥ÁöÑÂêåÊ≠•„ÄÇ ÂÆÉËÉΩÂ§ü‰ΩøÂæó‰∏Ä‰∏™Á∫øÁ®ãÂú®Á≠âÂæÖÂÖ∂‰ªñÁ∫øÁ®ãÂÆåÊàêÂêÑËá™ÁöÑÂ∑•‰Ωú‰πãÂêéÔºåÂÜçÁªßÁª≠ÊâßË°å„ÄÇ ‰ΩøÁî®‰∏Ä‰∏™ËÆ°Êï∞Âô®ËøõË°åÂÆûÁé∞ÔºåÂΩìËÆ°Êï∞Âô®ÁöÑÂÄº‰∏∫0Êó∂ÔºåË°®Á§∫ÊâÄÊúâÁ∫øÁ®ãÈÉΩÂ∑≤ÂÆåÊàê‰ªªÂä°ÔºåÂú®countdownlatch‰∏äÁ≠âÂæÖÁöÑjuÁ∫øÁ®ãÂèØ‰ª•ÊÅ¢Â§çÊâßË°åÊé•‰∏ãÊù•ÁöÑ‰ªªÂä°„ÄÇ Áî®Ê≥ïÔºö 1„ÄÅÂú®Êüê‰∏Ä‰∏™Á∫øÁ®ãÂºÄÂßãËøêË°åÂâçÔºåÁ≠âÂæÖn‰∏™Á∫øÁ®ãËøêË°åÁªìÊùü Â∞ÜCountDownLatchÁöÑËÆ°Êï∞Âô®ÂàùÂßãÂåñ‰∏∫nÔºåÊØèÊâßË°åÂÆå‰∏Ä‰∏™Á∫øÁ®ãÂ∞±ÊääËÆ°Êï∞Âô®Âáè1ÔºåÂΩìËÆ°Êï∞Âô®‰∏∫0Êó∂ÔºåCountDownLatch‰∏äÁöÑawaitÂ∞±‰ºöË¢´Âî§ÈÜíÔºõ‰∏Ä‰∏™ÂÖ∏ÂûãÁöÑÂ∫îÁî®Âú∫ÊôØÂ∞±ÊòØÂêØÂä®‰∏Ä‰∏™ÊúçÂä°Êó∂Ôºå‰∏ªÁ∫øÁ®ãÁ≠âÂæÖÂÖ∂‰ªñÁªÑ‰ª∂Âä†ËΩΩÂÆåÊØïÂÜçËøõË°åÊâßË°å„ÄÇ 2„ÄÅÂÆûÁé∞Â§ö‰∏™Á∫øÁ®ãÁöÑÂπ∂Ë°åËøêË°å„ÄÇ Á±ª‰ººËµõË∑ëÔºõÂàùÂßãÂåñ‰∏Ä‰∏™ÂÖ±‰∫´ÁöÑCountDownLatchÔºà1ÔºâÔºåÂ§ö‰∏™Á∫øÁ®ãÊâßË°å‰ªªÂä°ÂâçÈ¶ñÂÖàËøõË°åCountDownLatch.awaitÔºàÔºâÔºåÂΩì‰∏ªÁ∫øÁ®ãË∞ÉÁî®countdownÔºàÔºâÊó∂ÔºåËÆ°Êï∞Âô®Âèò‰∏∫0ÔºåÂ§ö‰∏™Á∫øÁ®ãÂêåÊó∂Ë¢´Âî§ÈÜí„ÄÇ Áº∫ÁÇπÔºö CountDownLatchÊòØ‰∏ÄÊ¨°ÊÄßÁöÑÔºåËÆ°Êï∞Âô®ÁöÑÂÄºÂè™ËÉΩÂú®ÊûÑÈÄ†ÊñπÊ≥ï‰∏≠ÂàùÂßãÂåñ‰∏ÄÊ¨°Ôºå‰πãÂêéÊ≤°Êúâ‰ªª‰ΩïÊú∫Âà∂ÂÜçÊ¨°ÂØπÂÖ∂ËøõË°åËµãÂÄº„ÄÇ 2„ÄÅCyclicBarrierÂÖÅËÆ∏‰∏ÄÁªÑÁ∫øÁ®ã‰∫íÁõ∏Á≠âÂæÖÔºåÁõ¥Âà∞Âà∞ËææÊüê‰∏™ÂÖ¨ÂÖ±Â±èÈöúÔºõËøô‰∏™barrierÂèØÈáçÁî®ÔºåÊâÄ‰ª•Áß∞ÂÆÉ‰∏∫Âæ™ÁéØbarrier„ÄÇ ‰∏éCountDownLatch‰∏çÂêåÁöÑÊòØbarrierÊòØÂä†Êï∞ËÆ°Êï∞ÊñπÂºèÔºåCountDownLatchÊòØÂáèÊï∞ËÆ°Êï∞ÊñπÂºè„ÄÇ","categories":[{"name":"JavaÂπ∂Âèë","slug":"JavaÂπ∂Âèë","permalink":"http://example.com/categories/Java%E5%B9%B6%E5%8F%91/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"ÂàõÂª∫Á∫øÁ®ãÁöÑÂõõÁßçÊñπÂºè","slug":"ÂàõÂª∫Á∫øÁ®ãÁöÑÂõõÁßçÊñπÂºè","date":"2021-07-20T16:00:00.000Z","updated":"2021-08-02T08:02:42.253Z","comments":true,"path":"2021/07/21/ÂàõÂª∫Á∫øÁ®ãÁöÑÂõõÁßçÊñπÂºè/","link":"","permalink":"http://example.com/2021/07/21/%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F/","excerpt":"","text":"startÂíårunÁöÑÂå∫Âà´ Ë∞ÉÁî®startÊòØÂºÄÂêØ‰∏Ä‰∏™Á∫øÁ®ãÔºåÂπ∂Ëá™Âä®ÊâßË°årunÊñπÊ≥ïÔºõ Ë∞ÉÁî®runÊòØÂú®ÂΩìÂâçÁ∫øÁ®ãÂéªË∞ÉÁî®runÊñπÊ≥ïÔºåÊú¨Ë¥®‰∏äÊòØË∞ÉÁî®‰∏Ä‰∏™Á±ª‰∏≠ÁöÑÊñπÊ≥ïÔºåÂπ∂Êú™ÂºÄÂêØÊñ∞ÁöÑÁ∫øÁ®ã„ÄÇ 1„ÄÅ‰ΩøÁî®Á∫øÁ®ãÊ±†12345678910111213141516171819202122//ÊºîÁ§∫‰∏Ä‰∏ãpublic ThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue&lt;Runnable&gt; workQueue, ThreadFactory threadFactory, RejectedExecutionHandler handler) &#123; if (corePoolSize &lt; 0 || maximumPoolSize &lt;= 0 || maximumPoolSize &lt; corePoolSize || keepAliveTime &lt; 0) throw new IllegalArgumentException(); if (workQueue == null || threadFactory == null || handler == null) throw new NullPointerException(); this.corePoolSize = corePoolSize; this.maximumPoolSize = maximumPoolSize; this.workQueue = workQueue; this.keepAliveTime = unit.toNanos(keepAliveTime); this.threadFactory = threadFactory; this.handler = handler; &#125; ÂèÇÊï∞Âêç ‰ΩúÁî® corePoolSize Ê†∏ÂøÉÁ∫øÁ®ãÊ±†Â§ßÂ∞è maximumPoolSize ÊúÄÂ§ßÁ∫øÁ®ãÊ±†Â§ßÂ∞è keepAliveTime Á∫øÁ®ãÊ±†‰∏≠Ë∂ÖËøácorePoolSizeÊï∞ÁõÆÁöÑÁ©∫Èó≤Á∫øÁ®ãÊúÄÂ§ßÂ≠òÊ¥ªÊó∂Èó¥ÔºõÂèØ‰ª•allowCoreThreadTimeOut(true)‰ΩøÂæóÊ†∏ÂøÉÁ∫øÁ®ãÊúâÊïàÊó∂Èó¥ TimeUnit keepAliveTimeÊó∂Èó¥Âçï‰Ωç workQueue ‰ªªÂä°ÁºìÂ≠òÈòüÂàóÔºåÁî®Êù•Â≠òÊîæÁ≠âÂæÖÊâßË°åÁöÑ‰ªªÂä° threadFactory Êñ∞Âª∫Á∫øÁ®ãÂ∑•ÂéÇ RejectedExecutionHandler ÂΩìÊèê‰∫§‰ªªÂä°Êï∞Ë∂ÖËøámaxmumPoolSize+workQueue‰πãÂíåÊó∂Ôºå‰ªªÂä°‰ºö‰∫§ÁªôRejectedExecutionHandlerÊù•Â§ÑÁêÜ Á∫øÁ®ãÊ±†Â¢ûÈïøÁ≠ñÁï•Ôºö1.ÂΩìÁ∫øÁ®ãÊ±†Â∞è‰∫écorePoolSizeÊó∂ÔºåÊñ∞Êèê‰∫§‰ªªÂä°Â∞ÜÂàõÂª∫‰∏Ä‰∏™Êñ∞Á∫øÁ®ãÊâßË°å‰ªªÂä°ÔºåÂç≥‰ΩøÊ≠§Êó∂Á∫øÁ®ãÊ±†‰∏≠Â≠òÂú®Á©∫Èó≤Á∫øÁ®ã„ÄÇ 2.ÂΩìÁ∫øÁ®ãÊ±†ËææÂà∞corePoolSizeÊó∂ÔºåÊñ∞Êèê‰∫§‰ªªÂä°Â∞ÜË¢´ÊîæÂÖ•workQueue‰∏≠ÔºåÁ≠âÂæÖÁ∫øÁ®ãÊ±†‰∏≠‰ªªÂä°Ë∞ÉÂ∫¶ÊâßË°å 3.ÂΩìworkQueueÂ∑≤Êª°Ôºå‰∏îÂΩìÂâçÁ∫øÁ®ãÊ±†‰∏≠ÁöÑÁ∫øÁ®ãÊï∞Èáè&lt;maximumPoolSizeÊó∂ÔºåÊñ∞Êèê‰∫§‰ªªÂä°‰ºöÂàõÂª∫Êñ∞Á∫øÁ®ãÊâßË°å‰ªªÂä° 4.ÂΩìÊèê‰∫§‰ªªÂä°Êï∞Ë∂ÖËøámaximumPoolSizeÊó∂ÔºåÊñ∞Êèê‰∫§‰ªªÂä°Áî±RejectedExecutionHandlerÂ§ÑÁêÜ 5.ÂΩìÁ∫øÁ®ãÊ±†‰∏≠Ë∂ÖËøácorePoolSizeÁ∫øÁ®ãÔºåÁ©∫Èó≤Êó∂Èó¥ËææÂà∞keepAliveTimeÊó∂ÔºåÂÖ≥Èó≠Á©∫Èó≤Á∫øÁ®ã Á∫øÁ®ãÊ±†ÁöÑÊãíÁªùÁ≠ñÁï•Ôºö1„ÄÅAbortPolicyÔºàÈªòËÆ§ÔºâÔºöÊäõÂá∫ÂºÇÂ∏∏ 2„ÄÅDiscardPolicyÔºöÂà†Èô§‰∏çËÉΩË¢´ÊâßË°åÁöÑ‰ªªÂä° Ë°•ÂÖÖ 6.ÂΩìËÆæÁΩÆallowCoreThreadTimeOut(true)Êó∂ÔºåÁ∫øÁ®ãÊ±†‰∏≠corePoolSizeÁ∫øÁ®ãÁ©∫Èó≤Êó∂Èó¥ËææÂà∞keepAliveTime‰πüÂ∞ÜÂÖ≥Èó≠ 7.ÊúâÁïå‰ªªÂä°ÈòüÂàó ÊúâÁïå‰ªªÂä°ÈòüÂàóÂèØ‰ª•Áî®ArrayBlockingQueueÊù•ÂÆûÁé∞ÔºåËã•ÊúâÊñ∞ÁöÑ‰ªªÂä°ÈúÄË¶ÅÊâßË°åÔºåÁ∫øÁ®ãÊ±†‰ºöÂàõÂª∫Êñ∞ÁöÑÁ∫øÁ®ãÔºåÁõ¥Âà∞ÂàõÂª∫ÁöÑÁ∫øÁ®ãÊï∞ÈáèËææÂà∞corePoolSizeÊó∂Ôºå‰ºöÂ∞ÜÊñ∞ÁöÑ‰ªªÂä°Ê∑ªÂä†ÂÖ•Á≠âÂæÖÈòüÂàóÔºõËã•Á≠âÂæÖÈòüÂàóÂ∑≤Êª°ÔºåË∂ÖËøáArrayBlockingQueueÁöÑÂàùÂßãÂåñÂÆπÈáèÊó∂ÔºåÂàô‰ºöÁªßÁª≠ÂàõÂª∫Á∫øÁ®ãÔºåÁõ¥Âà∞Á∫øÁ®ãÊï∞ÈáèËææÂà∞maximumPoolSizeÔºåË∂ÖËøámaximumPoolSize‰πãÂêéÂàôÊâßË°åÊãíÁªùÁ≠ñÁï•„ÄÇ 8.Êó†Áïå‰ªªÂä°ÈòüÂàó Êó†Áïå‰ªªÂä°ÈòüÂàóÂèØ‰ª•‰ΩøÁî®LinkedBlockingQueueÊù•ÂÆûÁé∞Ôºå‰ΩøÁî®Êó†Áïå‰ªªÂä°ÈòüÂàóÂèØ‰ª•Êó†ÈôêÂà∂Ê∑ªÂä†Êñ∞ÁöÑ‰ªªÂä°Ôºå‰ªªÂä°ÁöÑÊúÄÂ§ßÊï∞Èáè‰∏∫corePoolSizeÔºåÊ≠§Êó∂maximumPoolSizeÊòØÊó†ÊïàÁöÑÔºåËã•ÂÜçÊúâÊñ∞ÁöÑ‰ªªÂä°Âä†ÂÖ•ÔºåÂàôÁõ¥Êé•ËøõÂÖ•Á≠âÂæÖÈòüÂàó„ÄÇ 9.‰ºòÂÖà‰ªªÂä°ÈòüÂàó ÈÄöËøáPriorityBlockingQueueÂÆûÁé∞ÔºåËøô‰πüÊòØ‰∏Ä‰∏™Êó†ÁïåÈòüÂàóÔºåÊ≠§ÈòüÂàóÂèØËá™ÂÆö‰πâËßÑÂàôÊ†πÊçÆ‰ªªÂä°‰ºòÂÖàÁ∫ßÈ°∫Â∫èÂÖàÂêéÊâßË°å ‰ºòÁÇπÔºö (1) Èôç‰ΩéÁ≥ªÁªüËµÑÊ∫êÊ∂àËÄóÔºåÈÄöËøáÈáçÁî®Â∑≤Â≠òÂú®ÁöÑÁ∫øÁ®ãÔºåÈôç‰ΩéÁ∫øÁ®ãÂàõÂª∫ÂíåÈîÄÊØÅÈÄ†ÊàêÁöÑÊ∂àËÄóÔºõ Ôºà2ÔºâÊèêÈ´òÁ≥ªÁªüÂìçÂ∫îÈÄüÂ∫¶ÔºåÂΩìÊúâ‰ªªÂä°Âà∞ËææÊó∂ÔºåÈÄöËøáÂ§çÁî®Â∑≤Â≠òÂú®ÁöÑÁ∫øÁ®ãÔºåÊó†ÈúÄÁ≠âÂæÖÊñ∞Á∫øÁ®ãÁöÑÂàõÂª∫‰æøËÉΩÁ´ãÂç≥ÊâßË°åÔºõ Ôºà3ÔºâÊñπ‰æøÁ∫øÁ®ãÂπ∂ÂèëÊï∞ÁöÑÁÆ°Êéß„ÄÇÂõ†‰∏∫Á∫øÁ®ãËã•ÊòØÊó†ÈôêÂà∂ÁöÑÂàõÂª∫ÔºåÂèØËÉΩ‰ºöÂØºËá¥ÂÜÖÂ≠òÂç†Áî®ËøáÂ§öËÄå‰∫ßÁîüOOMÔºåÂπ∂‰∏î‰ºöÈÄ†ÊàêcpuËøáÂ∫¶ÂàáÊç¢ 2„ÄÅÂÆûÁé∞runnableÊé•Âè£3„ÄÅÂÆûÁé∞callableÊé•Âè£Áõ∏ËæÉ‰∫éÂÆûÁé∞runnableÊñπÊ≥ïÔºåÁ∫øÁ®ãÂèØ‰ª•ÊúâËøîÂõûÂÄºÔºåÂèØ‰ª•ÊäõÂá∫ÂºÇÂ∏∏ 4„ÄÅÁªßÊâøThreadÁ±ª","categories":[{"name":"JavaÂπ∂Âèë","slug":"JavaÂπ∂Âèë","permalink":"http://example.com/categories/Java%E5%B9%B6%E5%8F%91/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"HappenBeforeÂéüÂàô","slug":"HappenBeforeÂéüÂàô","date":"2021-07-19T16:00:00.000Z","updated":"2021-08-02T07:56:26.383Z","comments":true,"path":"2021/07/20/HappenBeforeÂéüÂàô/","link":"","permalink":"http://example.com/2021/07/20/HappenBefore%E5%8E%9F%E5%88%99/","excerpt":"","text":"ÂÆö‰πâ‰∫ÜÂì™‰∫õÊåá‰ª§‰∏çËÉΩÈáçÊéíÔºöÂçïÁ∫øÁ®ãÁöÑhappen beforeÂéüÂàôÂÜôÂú®ÂâçÈù¢ÁöÑÊìç‰Ωúhappen beforeÂêéÈù¢ÁöÑÊìç‰Ωú ÈîÅÁöÑhappen-beforeÂéüÂàôÔºöÂêå‰∏Ä‰∏™ÈîÅÁöÑunlockÊìç‰Ωúhappen-beforeÊ≠§ÈîÅÁöÑlockÊìç‰Ωú„ÄÇ volatileÁöÑhappen-beforeÂéüÂàôÔºöÂØπ‰∏Ä‰∏™volatileÂèòÈáèÁöÑÂÜôÊìç‰Ωúhappen-beforeÂØπÊ≠§ÂèòÈáèÁöÑ‰ªªÊÑèÊìç‰Ωú(ÂΩìÁÑ∂‰πüÂåÖÊã¨ÂÜôÊìç‰Ωú‰∫Ü)„ÄÇ happen-beforeÁöÑ‰º†ÈÄíÊÄßÂéüÂàôÔºöÂ¶ÇÊûúAÊìç‰Ωú happen-before BÊìç‰ΩúÔºåBÊìç‰Ωúhappen-before CÊìç‰ΩúÔºåÈÇ£‰πàAÊìç‰Ωúhappen-before CÊìç‰Ωú„ÄÇ Á∫øÁ®ãÂêØÂä®ÁöÑhappen-beforeÂéüÂàôÔºöÂêå‰∏Ä‰∏™Á∫øÁ®ãÁöÑstartÊñπÊ≥ïhappen-beforeÊ≠§Á∫øÁ®ãÁöÑÂÖ∂ÂÆÉÊñπÊ≥ï„ÄÇ Á∫øÁ®ã‰∏≠Êñ≠ÁöÑhappen-beforeÂéüÂàôÔºöÂØπÁ∫øÁ®ãinterruptÊñπÊ≥ïÁöÑË∞ÉÁî®happen-beforeË¢´‰∏≠Êñ≠Á∫øÁ®ãÁöÑÊ£ÄÊµãÂà∞‰∏≠Êñ≠ÂèëÈÄÅÁöÑ‰ª£Á†Å„ÄÇ Á∫øÁ®ãÁªàÁªìÁöÑhappen-beforeÂéüÂàôÔºöÁ∫øÁ®ã‰∏≠ÁöÑÊâÄÊúâÊìç‰ΩúÈÉΩhappen-beforeÁ∫øÁ®ãÁöÑÁªàÊ≠¢Ê£ÄÊµã„ÄÇ ÂØπË±°ÂàõÂª∫ÁöÑhappen-beforeÂéüÂàôÔºö‰∏Ä‰∏™ÂØπË±°ÁöÑÂàùÂßãÂåñÂÆåÊàêÂÖà‰∫é‰ªñÁöÑfinalizeÊñπÊ≥ïË∞ÉÁî®„ÄÇ Âì™‰∫õ‰ºöËøõË°åÈáçÊéíÔºöÊâßË°åÁ®ãÂ∫èÊó∂‰∏∫‰∫ÜÊèêÈ´òÊÄßËÉΩÔºåÁºñËØëÂô®ÂíåÂ§ÑÁêÜÂô®ÁªèÂ∏∏‰ºöÂØπÊåá‰ª§ËøõË°åÈáçÊñ∞ÊéíÂ∫è„ÄÇ ÁºñËØëÂô®‰ºòÂåñÁöÑÈáçÊéíÂ∫èÔºöÁºñËØëÂô®Âú®‰∏çÊîπÂèòÂçïÁ∫øÁ®ãÁ®ãÂ∫èËØ≠‰πâÁöÑÂâçÊèê‰∏ãÔºåÂèØ‰ª•ÈáçÊñ∞ÂÆâÊéíËØ≠Âè•ÁöÑÊâßË°åÈ°∫Â∫è„ÄÇ ÂÜÖÂ≠òÁ≥ªÁªüÁöÑÈáçÊéíÂ∫èÔºöÁî±‰∫éÂ§ÑÁêÜÂô®‰ΩøÁî®ÁöÑÊòØÁºìÂ≠òÂíåËØªÂÜôÁºìÂÜ≤Âå∫ÔºåÁúã‰∏äÂéªÂÉèÊòØ‰π±Â∫èÊâßË°å„ÄÇ","categories":[{"name":"JavaÂπ∂Âèë","slug":"JavaÂπ∂Âèë","permalink":"http://example.com/categories/Java%E5%B9%B6%E5%8F%91/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"ÂåªÈô¢ÊåÇÂè∑Á≥ªÁªüÁü•ËØÜÁÇπÊÄªÁªì","slug":"Â∞öÂåªÈÄöÂåªÈô¢È¢ÑÁ∫¶ÊåÇÂè∑Á≥ªÁªüÁü•ËØÜÁÇπÊÄªÁªì","date":"2021-07-18T16:00:00.000Z","updated":"2021-07-23T02:22:29.076Z","comments":true,"path":"2021/07/19/Â∞öÂåªÈÄöÂåªÈô¢È¢ÑÁ∫¶ÊåÇÂè∑Á≥ªÁªüÁü•ËØÜÁÇπÊÄªÁªì/","link":"","permalink":"http://example.com/2021/07/19/%E5%B0%9A%E5%8C%BB%E9%80%9A%E5%8C%BB%E9%99%A2%E9%A2%84%E7%BA%A6%E6%8C%82%E5%8F%B7%E7%B3%BB%E7%BB%9F%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/","excerpt":"","text":"Âú®Ê≠§ÂØπÂ∞öÂåªÈÄöÂú®Á∫øÈ¢ÑÁ∫¶ÊåÇÂè∑Á≥ªÁªüËøõË°å‰∏Ä‰∏™ÊÄªÁªìÔºå‰ª•Ëá¥Ëá™ÁúÅ„ÄÇ ÂäüËÉΩÂàíÂàÜ‰∏Ä„ÄÅÂêéÂè∞ÁÆ°ÁêÜÁ≥ªÁªü1„ÄÅÂåªÈô¢ËÆæÁΩÆÁÆ°ÁêÜÂåÖÊã¨ ‚Äã ÂåªÈô¢ËÆæÁΩÆÂàóË°®ÊòæÁ§∫ÔºàÂåÖÊã¨ËØ•ÂåªÈô¢ÁöÑÁΩëÂùÄ„ÄÅÂåªÈô¢ÁºñÂè∑„ÄÅËÅîÁ≥ª‰∫∫„ÄÅËÅîÁ≥ªÊñπÂºèÔºâ ‚Äã ÂåªÈô¢ËÆæÁΩÆÊ∑ªÂä†ÔºàÊ∑ªÂä†Êñ∞ÁöÑÂåªÈô¢ËÆæÁΩÆÔºâ ‚Äã ËøõË°åÂåªÈô¢ÈîÅÂÆöÔºàÈîÅÂÆö‰πãÂêé‰∏çÂèØÂÜçËøõË°åÈ¢ÑÁ∫¶Ôºâ ‚Äã ÂåªÈô¢ËÆæÁΩÆÁöÑÂà†Èô§ ‚Äã ÂåªÈô¢ÂàóË°®ÔºàÊòæÁ§∫ÂåªÈô¢ÁöÑÂêçÁß∞„ÄÅÁ≠âÁ∫ß„ÄÅÂú∞ÂùÄÔºâ ‚Äã ÂåªÈô¢ËØ¶ÊÉÖÔºàËØ•ÂåªÈô¢ÁöÑÂÖ∑‰ΩìËØ¶ÁªÜ‰ø°ÊÅØÔºâ ‚Äã ÂåªÈô¢ÁöÑÊéíÁè≠ÊÉÖÂÜµÔºàÂàÜÁßëÂÆ§Ôºâ ‚Äã ÂåªÈô¢‰∏äÁ∫ø„ÄÅ‰∏ãÁ∫ø 2„ÄÅÊï∞ÊçÆÁÆ°ÁêÜ‚Äã Êï∞ÊçÆÂ≠óÂÖ∏ÁöÑÊ†ëÂΩ¢ÊòæÁ§∫„ÄÅ ‚Äã Êï∞ÊçÆÁöÑÂØºÂÖ•„ÄÅÂØºÂá∫ÂäüËÉΩÔºàÈÄöËøáexcelË°®Ê†ºÂΩ¢ÂºèÔºâ 3„ÄÅÁî®Êà∑ÁÆ°ÁêÜ‚Äã Áî®Êà∑ÂàóË°®ÔºàÊü•ÁúãÊâÄÊúâÁî®Êà∑Ôºâ ‚Äã Áî®Êà∑ËØ¶ÊÉÖÔºàÊü•ÁúãÁî®Êà∑ÂêçÁß∞„ÄÅËØÅ‰ª∂‰ø°ÊÅØÁ≠âÔºâ ‚Äã Áî®Êà∑ÈîÅÂÆöÔºàËøùËßÑÊìç‰ΩúÈîÅÂÆöË¥¶Âè∑Ôºâ ‚Äã ËÆ§ËØÅÂÆ°ÊâπÂàóË°®ÔºàÁî®Êà∑Ê≥®ÂÜåÊó∂ÔºåÈúÄÂêéÂè∞ËøõË°åÂÆ°ÊâπÁöÑÂàóË°®ÔºåÂèØÊü•ÁúãÁî®Êà∑‰ø°ÊÅØ„ÄÅËøõË°åÂà§ÂÆöÈÄöËøáÊàñËÄÖ‰∏çÈÄöËøáÔºâ ‰∫å„ÄÅÂâçÂè∞Áî®Êà∑Á≥ªÁªü1„ÄÅÈ¶ñÈ°µÊï∞ÊçÆÊòæÁ§∫‚Äã ÊòæÁ§∫‰∏ãÂ±ûÂåªÈô¢„ÄÅ ‚Äã ÊòæÁ§∫ÊâÄÊúâÁ≠âÁ∫ßÂíåÂú∞Âå∫‰ø°ÊÅØÔºàÂπ∂ÂèØÊ†πÊçÆ‰∏çÂêåÁ≠âÁ∫ßÂíåÂú∞Âå∫ËøõË°åÂåªÈô¢Êü•ËØ¢Ôºâ ‚Äã Âπ∂ÂèØÊ†πÊçÆÂåªÈô¢ÂêçÁß∞ËøõË°åÊêúÁ¥¢ 2„ÄÅÈÄöËøáÊòæÁ§∫ÂåªÈô¢ËøõÂÖ•ÂåªÈô¢ÁöÑËØ¶ÊÉÖÈ°µÈù¢‚Äã Êü•ÁúãÂåªÈô¢ËØ¶ÊÉÖ ‚Äã Êü•ÁúãÂêÑ‰∏™ÁßëÂÆ§Âèä‰∏ãÂ±ûÈÉ®Èó® ‚Äã ÁÇπÂáª‰∏çÂêåÁöÑÁßëÂÆ§ËøõË°åÊåÇÂè∑ 3„ÄÅÁî®Êà∑Ê≥®ÂÜå/ÁôªÂΩï‚Äã ÈÄöËøáÊâãÊú∫Âè∑ËøõË°åÊ≥®ÂÜå/ÁôªÂΩïÔºàÊú¨Êù•ÊòØË¶ÅÈÄöËøáÊï¥ÂêàÈòøÈáå‰∫ëÁöÑÁü≠‰ø°ÂäüËÉΩÔºå‰ΩÜÊòØ‰∏ÄÁõ¥Áî≥ËØ∑‰∏ç‰∏ãÊù•Ôºâ 4„ÄÅÁî®Êà∑ÁöÑÂÆûÂêçËÆ§ËØÅÂäüËÉΩ‚Äã ÊåÇÂè∑‰πãÂâçÈúÄË¶ÅÁî®Êà∑ËøõË°åÂ°´ÂÜôÂßìÂêçÂíåË∫´‰ªΩËØÅÔºåÊèê‰∫§‰πãÂêé‰ºöÊòæÁ§∫ËÆ§ËØÅÁä∂ÊÄÅÔºåÂêéÂè∞ÈÄöËøá‰πãÂêéÊâçÂèØ‰ª•ËøõË°åÊåÇÂè∑ 5„ÄÅÂ∞±ËØä‰∫∫‰ø°ÊÅØ‚Äã Áî®Êà∑ÂÆåÊàêÊ≥®ÂÜå‰πãÂêéÔºåÊåÇÂè∑‰πãÂâçÈúÄË¶ÅÂ°´ÂÜôÂ∞±ËØä‰∫∫‰ø°ÊÅØÔºàÂßìÂêç„ÄÅËØÅ‰ª∂Á±ªÂûã„ÄÅËØÅ‰ª∂Âè∑Á†Å„ÄÅÊÄßÂà´„ÄÅÂá∫ÁîüÊó•Êúü„ÄÅÊâãÊú∫Âè∑Á†ÅÔºâÔºåÂåÖÊã¨Â∞±ËØä‰∫∫ÂàóË°®„ÄÅÊ∑ª Âä†„ÄÅËØ¶ÊÉÖ„ÄÅÂà†Èô§ 6„ÄÅÈ¢ÑÁ∫¶ÊåÇÂè∑ÂäüËÉΩ‚Äã Áî®Êà∑ÂÆåÊàêÊ≥®ÂÜå‰πãÂêéÔºåÈÄöËøáËøõÂÖ•ÂåªÈô¢ÁïåÈù¢ÔºåÈÄâÊã©ÁßëÂÆ§‰πãÂêéÔºå‰ºöÊòæÁ§∫ÂèØÈ¢ÑÁ∫¶ÁöÑÊó•Êúü‰ª•ÂèäÂΩìÂâçÈÄâÊã©Êó•ÊúüÁöÑÂèØÈ¢ÑÁ∫¶ÊÉÖÂÜµÔºà‰∏äÂçà„ÄÅ‰∏ãÂçà„ÄÅ‰∏ªÊ≤ªÂåªÂ∏à‰ø°ÊÅØ„ÄÅÂâ©‰ΩôÂèØÈ¢ÑÁ∫¶Êï∞ÈáèÔºâÔºåÈÄâÊã©Êó•ÊúüÂíåÁßëÂÆ§‰πãÂêéÔºåË∑≥ËΩ¨Ëá≥ÊåÇÂè∑ËØ¶ÊÉÖÈ°µÈù¢ÔºåÁ°ÆËÆ§ÊåÇÂè∑‰ø°ÊÅØÔºåÁîüÊàêÊåÇÂè∑ËÆ¢ÂçïÔºå‰πãÂêéÂèØËøõË°åËÆ¢ÂçïÊîØ‰ªòÊàñËÄÖËÆ¢ÂçïÂèñÊ∂à ÂâçÂêéÁ´ØÁü•ËØÜÁÇπÂêéÁ´ØÊäÄÊúØ SpringBoot‰∏Ä‰∏™SpringÁöÑËÑöÊâãÊû∂ÔºåÂø´ÈÄüÊûÑÂª∫SpringÂ∑•Á®ã SpringCloudNacosÔºöÊ≥®ÂÜåÊúçÂä°‰∏≠ÂøÉÔºåÂÆûÁé∞‰∏çÂêåÊúçÂä°‰πãÈó¥ÁöÑË∞ÉÁî®ÔºåÈúÄË¶ÅÂú®Ê≥®ÂÜåÊúçÂä°‰∏≠ÂøÉËøõË°åÊ≥®ÂÜå FeignÔºöÁî®‰∫éÂèëÁé∞ÊúçÂä°Ôºå‰ªéËÄåËøõË°åË∞ÉÁî® Spring Cloud GatewayÔºöÈÄöËøáÁΩëÂÖ≥Ê†πÊçÆ‰∏çÂêåÁöÑË∑ØÂæÑËøõË°åËΩ¨ÂèëËá≥‰∏çÂêåÁöÑÊé•Âè£Ôºå‰ªéËÄåË∞ÉÁî®‰∏çÂêåÁöÑÊúçÂä°;ÁΩëÂÖ≥Ê†∏ÂøÉÂäüËÉΩÊòØË∑ØÁî±ËΩ¨ÂèëÔºåÂõ†Ê≠§‰∏çË¶ÅÊúâËÄóÊó∂Êìç‰ΩúÂú®ÁΩëÂÖ≥‰∏äÂ§ÑÁêÜÔºåËÆ©ËØ∑Ê±ÇÂø´ÈÄüËΩ¨ÂèëÂà∞ÂêéÁ´ØÊúçÂä°‰∏äÔºåÁΩëÂÖ≥ËøòËÉΩÂÅöÁªü‰∏ÄÁöÑÁÜîÊñ≠„ÄÅÈôêÊµÅ„ÄÅËÆ§ËØÅ„ÄÅÊó•ÂøóÁõëÊéßÁ≠â„ÄÇ Â∑•‰ΩúÂéüÁêÜÔºö ÂÆ¢Êà∑Á´ØÂêëSpring Cloud Gateway ÂèëÂá∫ËØ∑Ê±Ç„ÄÇÁÑ∂ÂêéÂú® Gateway Handler Mapping ‰∏≠ÊâæÂà∞‰∏éËØ∑Ê±ÇÁõ∏ÂåπÈÖçÁöÑË∑ØÁî±ÔºåÂ∞ÜÂÖ∂ÂèëÈÄÅÂà∞ Gateway Web Handler„ÄÇHandler ÂÜçÈÄöËøáÊåáÂÆöÁöÑËøáÊª§Âô®ÈìæÊù•Â∞ÜËØ∑Ê±ÇÂèëÈÄÅÂà∞Êàë‰ª¨ÂÆûÈôÖÁöÑÊúçÂä°ÊâßË°å‰∏öÂä°ÈÄªËæëÔºåÁÑ∂ÂêéËøîÂõû„ÄÇËøáÊª§Âô®‰πãÈó¥Áî®ËôöÁ∫øÂàÜÂºÄÊòØÂõ†‰∏∫ËøáÊª§Âô®ÂèØËÉΩ‰ºöÂú®ÂèëÈÄÅ‰ª£ÁêÜËØ∑Ê±Ç‰πãÂâçÔºà‚Äúpre‚ÄùÔºâÊàñ‰πãÂêéÔºà‚Äúpost‚ÄùÔºâÊâßË°å‰∏öÂä°ÈÄªËæë„ÄÇ FilterÂú®‚Äúpre‚ÄùÁ±ªÂûãÁöÑËøáÊª§Âô®ÂèØ‰ª•ÂÅöÂèÇÊï∞Ê†°È™å„ÄÅÊùÉÈôêÊ†°È™å„ÄÅÊµÅÈáèÁõëÊéß„ÄÅÊó•ÂøóËæìÂá∫„ÄÅÂçèËÆÆËΩ¨Êç¢Á≠âÔºå Âú®‚Äúpost‚ÄùÁ±ªÂûãÁöÑËøáÊª§Âô®‰∏≠ÂèØ‰ª•ÂÅöÂìçÂ∫îÂÜÖÂÆπ„ÄÅÂìçÂ∫îÂ§¥ÁöÑ‰øÆÊîπÔºåÊó•ÂøóÁöÑËæìÂá∫ÔºåÊµÅÈáèÁõëÊéßÁ≠âÊúâÁùÄÈùûÂ∏∏ÈáçË¶ÅÁöÑ‰ΩúÁî® gatewayÂèØÂèÇËÄÉspringcloud(ÂçÅ‰∫î)ÔºöÊúçÂä°ÁΩëÂÖ≥ Spring Cloud GateWay ÂÖ•Èó® - Á∫ØÊ¥ÅÁöÑÂæÆÁ¨ëÂçöÂÆ¢ (ityouknow.com) Redis‰∏Ä‰∏™ÂÜÖÂ≠òÊï∞ÊçÆÂ∫ìÔºåÂü∫‰∫ékey-valueËøõË°åÂ≠òÂÇ®Ôºå‰ºòÁÇπÊòØÊü•ËØ¢ÊïàÁéáÈ´ò Ôºà1Ôºâ‰Ωú‰∏∫ÁºìÂ≠ò‰ΩøÁî®ÔºåÂ∞Ü‰∏çÁªèÂ∏∏ÂèòÂä®ÁöÑÊï∞ÊçÆÂ≠òÊîæÂÖ•redis‰∏≠ÔºåÂ¶ÇÔºöÂåªÈô¢‰ø°ÊÅØ Ôºà2ÔºâÈ™åËØÅÁ†ÅÊúâÊïàÊó∂Èó¥ MongoDBNoSqlÂûãÊï∞ÊçÆÂ∫ì Ôºà1ÔºâÂ∞ÜÂåªÈô¢ÁöÑÂü∫Êú¨‰ø°ÊÅØ„ÄÅÁßëÂÆ§‰ø°ÊÅØ„ÄÅÊéíÁè≠‰ø°ÊÅØÁ≠âÂ≠òÂÇ®Âú®MongoDB‰∏≠ÔºåÈÄöËøáSpringBootÊï¥ÂêàMongoTemplateÂíåMongoRepositoryÂØπÊï∞ÊçÆÂ∫ìËøõË°åÊìç‰Ωú EasyExcelÈòøÈáåÂºÄÂèëÁöÑ‰∏Ä‰∏™Êìç‰ΩúExcelÁöÑÂ∑•ÂÖ∑ÔºåÂèØÂØπexcelË°®Ê†ºËøõË°åÂø´ÈÄüËØªÂèñ MyBatisPlusÊú¨Ë∫´Â∞±ÊòØÂØπMyBatisÁöÑÂ¢ûÂº∫ÔºåÈÄöËøáËØ•Â∑•ÂÖ∑ÂÆûÁé∞ÂØπÊï∞ÊçÆÂ∫ìÁöÑÂø´ÈÄüÊìç‰Ωú Ôºà1ÔºâÊé•Âè£ÁªßÊâøIService Ôºà2ÔºâÂú®mapper‰∏≠ÁªßÊâøBaseMapperÔºõBaseMapperÂ∞ÅË£Ö‰∫ÜÂ¢ûÂà†ÊîπÊü•ÁöÑÂü∫Êú¨Êìç‰Ωú RabbitMQÔºàË°•ÔºâËÆ¢ÂçïÁöÑÁõ∏ÂÖ≥Êìç‰ΩúÔºåËÆ¢Âçï‰øÆÊîπÂèëÈÄÅmqÊ∂àÊÅØÔºåmqÊ∂àÊÅØÁöÑÂ•ΩÂ§ÑÔºö‰ΩøÂæóÈ°πÁõÆÁöÑÂπ∂ÂèëÂäüËÉΩÊõ¥Âä†Âº∫Â§ß Docker‰∏ãËΩΩÈïúÂÉè„ÄÅÂàõÂª∫ÂÆπÂô® Ôºà1ÔºâMongoDBÂÆπÂô®ÁöÑÂàõÂª∫ Ôºà2ÔºâRabbitMQÂÆπÂô®ÁöÑÂàõÂª∫ swagger-uiËøô‰πüÊòØ‰∏™Â∑•ÂÖ∑ÔºåÁî®‰∫éÂêéÁ´ØÊé•Âè£ËøõË°åÈò∂ÊÆµÊÄßË∞ÉËØïÊó∂‰ΩøÁî®ÔºõÂÜôÂ•Ω‰∏Ä‰∏™Êé•Âè£ÂèØËøõË°åÂäüËÉΩÊµãËØï„ÄÇ HttpServletRequestHttpServletRequestÂØπË±°‰ª£Ë°®ÂÆ¢Êà∑Á´ØÁöÑËØ∑Ê±Ç,ÂΩìÂÆ¢Êà∑Á´ØÈÄöËøáhttpÂçèËÆÆËØ∑Ê±ÇËÆøÈóÆÔºõÊúçÂä°Âô®ÁöÑÊó∂ÂÄô,httpËØ∑Ê±ÇÂ§¥ÁöÑÊâÄÊúâ‰ø°ÊÅØÈÉΩÂ∞ÅË£ÖÂú®Ëøô‰∏™ÂØπË±°‰∏≠ÔºåÈÄöËøáËøô‰∏™ÂØπË±°ÔºåÂèØ‰ª•Ëé∑ÂèñÂÆ¢Êà∑Á´ØËØ∑Ê±ÇÁöÑÊâÄÊúâ‰ø°ÊÅØ„ÄÇ httpËØ∑Ê±ÇÂåÖÂê´ËØ∑Ê±ÇË°å/Áä∂ÊÄÅË°å„ÄÅËØ∑Ê±ÇÂ§¥„ÄÅËØ∑Ê±Ç‰Ωì„ÄÇ requestÂ¶ÇÊûúÊòØpostÊâçÊúâËØ∑Ê±Ç‰ΩìÔºågetÂàôÊ≤°ÊúâËØ∑Ê±Ç‰ΩìÔºåÁõ¥Êé•Ë∑üÂú®ÔºüÂêéÈù¢ÔºåÁî®&amp;ÈöîÂºÄ„ÄÇ ËØ∑Ê±ÇÂ§¥header‰∏ÄËà¨Áî®Êù•Â≠òÊîæ‰∏Ä‰∫õcookieÔºåtoken‰ø°ÊÅØÔºõ ËØ∑Ê±Ç‰Ωìbody‰∏ÄËà¨Áî®Êù•Â≠òÂÇ®postÁöÑÂèÇÊï∞ÂíåÂèÇÊï∞Êï∞ÊçÆÔºõ ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚ÄîÁâàÊùÉÂ£∞ÊòéÔºöÊú¨Êñá‰∏∫CSDNÂçö‰∏ª„ÄåÈáëÈ∫üÂçÅ‰∏âÂ∞ë„ÄçÁöÑÂéüÂàõÊñáÁ´†ÔºåÈÅµÂæ™CC 4.0 BY-SAÁâàÊùÉÂçèËÆÆÔºåËΩ¨ËΩΩËØ∑ÈôÑ‰∏äÂéüÊñáÂá∫Â§ÑÈìæÊé•ÂèäÊú¨Â£∞Êòé„ÄÇÂéüÊñáÈìæÊé•Ôºöhttps://blog.csdn.net/u012373281/article/details/91350377 JWTJson web tokenÔºåÊòØ‰∏∫‰∫ÜÂú®ÁΩëÁªúÂ∫îÁî®ÁéØÂ¢ÉÈó¥‰º†ÈÄíÂ£∞ÊòéËÄåÊâßË°åÁöÑ‰∏ÄÁßçÂü∫‰∫éJSONÁöÑÂºÄÊîæÊ†áÂáÜÔºà(RFC 7519).ËØ•tokenË¢´ËÆæËÆ°‰∏∫Á¥ßÂáë‰∏îÂÆâÂÖ®ÁöÑÔºåÁâπÂà´ÈÄÇÁî®‰∫éÂàÜÂ∏ÉÂºèÁ´ôÁÇπÁöÑÂçïÁÇπÁôªÂΩïÔºàSSOÔºâÂú∫ÊôØ„ÄÇJWTÁöÑÂ£∞Êòé‰∏ÄËà¨Ë¢´Áî®Êù•Âú®Ë∫´‰ªΩÊèê‰æõËÄÖÂíåÊúçÂä°Êèê‰æõËÄÖÈó¥‰º†ÈÄíË¢´ËÆ§ËØÅÁöÑÁî®Êà∑Ë∫´‰ªΩ‰ø°ÊÅØÔºå‰ª•‰æø‰∫é‰ªéËµÑÊ∫êÊúçÂä°Âô®Ëé∑ÂèñËµÑÊ∫êÔºå‰πüÂèØ‰ª•Â¢ûÂä†‰∏Ä‰∫õÈ¢ùÂ§ñÁöÑÂÖ∂ÂÆÉ‰∏öÂä°ÈÄªËæëÊâÄÂøÖÈ°ªÁöÑÂ£∞Êòé‰ø°ÊÅØÔºåËØ•token‰πüÂèØÁõ¥Êé•Ë¢´Áî®‰∫éËÆ§ËØÅÔºå‰πüÂèØË¢´Âä†ÂØÜ„ÄÇ ÂéüÁêÜ‚Äã Áî±‰∫éhttpÂçèËÆÆÊú¨Ë∫´ÊòØ‰∏ÄÁßçÊó†Áä∂ÊÄÅÁöÑÂçèËÆÆÔºåËøôÊÑèÂë≥ÁùÄÂΩìÁî®Êà∑‰ΩøÁî®Ë¥¶Êà∑ÂíåÂØÜÁ†ÅËøõË°åÁî®Êà∑ËÆ§ËØÅÂÆåÊàêÂêéÂπ∂‰∏çËÉΩÂ≠òÂú®ÁôªÂΩïÁä∂ÊÄÅ„ÄÇÂØºËá¥‰∏ãÊ¨°ËØ∑Ê±Ç‰æùÊóßÈúÄË¶ÅÂÜçÊ¨°ËÆ§ËØÅ„ÄÇÂõ†‰∏∫ÊúçÂä°Âô®‰ªÖ‰ªÖÈÄöËøáhttpÂçèËÆÆÔºåÂπ∂‰∏çËÉΩÁü•ÈÅìÊòØÂì™‰∏™Áî®Êà∑ÂèëÂá∫ÁöÑËØ∑Ê±ÇÔºåÊâÄ‰ª•ÈúÄË¶ÅÂÄüÂä©‰∏Ä‰∫õÂ§ÑÁêÜÊú∫Âà∂Êù•ËÆ∞ÂΩïËÆ§ËØÅÁä∂ÊÄÅÔºå‰ªéËÄåÂÆåÊàêËØ∑Ê±ÇÂíåÂìçÂ∫î„ÄÇ ËÆ§ËØÅÊñπÂºèÔºö‰º†ÁªüsessionËÆ§ËØÅsessionËÆ§ËØÅÊòØÂ∞ÜÁî®Êà∑ÁöÑËÆ§ËØÅ‰ø°ÊÅØÂ≠òÂÇ®Âú®ÊúçÂä°Âô®Á´ØÔºåÂπ∂‰∏î‰ºöÂú®ËÆ§ËØÅÈÄöËøáÂêéÂ∞ÜËøô‰∏Ä‰ªΩËÆ§ËØÅ‰ø°ÊÅØ‰º†ÈÄíÁªôÊµèËßàÂô®Á´ØÔºåÊµèËßàÂô®Â∞ÜÂÖ∂‰øùÂ≠ò‰∏∫cookie„ÄÇÊµèËßàÂô®Âú®‰∏ãÊ¨°ÂèëÈÄÅËØ∑Ê±ÇÊó∂‰ºöÂ∞ÜËØ•cookieÊê∫Â∏¶Âπ∂‰∏îÂèëÈÄÅÁªôÊàë‰ª¨ÁöÑÊúçÂä°Âô®ÔºåËøôÊ†∑Êàë‰ª¨ÁöÑÂ∫îÁî®Â∞±ËÉΩËØÜÂà´ËØ∑Ê±ÇÊù•Ëá™Âì™‰∏™Áî®Êà∑‰∫ÜÔºåËøôÂ∞±ÊòØÂü∫‰∫é‰º†ÁªüÁöÑsessionËÆ§ËØÅ„ÄÇ ‰ΩÜÊòØÂü∫‰∫ésessionËÆ§ËØÅÁöÑÁöÑÂ∫îÁî®Êú¨Ë∫´ÂæàÈöæÊâ©Â±ïÔºåÈöèÁùÄ‰∏çÂêåÂÆ¢Êà∑Á´ØÁî®Êà∑ÁöÑÂ¢ûÂä†ÔºåÁã¨Á´ãÁöÑÊúçÂä°Âô®Êó†Ê≥ïÊâøËΩΩË∂äÊù•Ë∂äÂ§öÁöÑÁî®Êà∑ÔºåËøôÊó∂ÂÄôsessionËÆ§ËØÅÁöÑÈóÆÈ¢ò‰πüÂ∞±Êö¥Èú≤Âá∫Êù•‰∫Ü„ÄÇ Âü∫‰∫ésessionËÆ§ËØÅÁöÑÂ∏∏ËßÅÈóÆÈ¢ò1ÔºâsessionÔºöÁî±‰∫éÊØè‰∏™Áî®Êà∑ÁªèËøáÊàë‰ª¨ÁöÑËÆ§ËØÅÊúçÂä°Âô®ËÆ§ËØÅ‰πãÂêéÔºåÈÉΩË¶ÅÂú®ËØ•ËÆ§ËØÅÊúçÂä°Âô®Á´ØÂÅö‰∏ÄÊ¨°ËÆ∞ÂΩïÔºåÈÄöÂ∏∏ËÄåË®ÄËØ•ËÆ∞ÂΩï‰øùÂ≠òÂú®ÂÜÖÂ≠ò‰∏≠ÔºåËøôÂ∞±ÂØºËá¥ÂÜÖÂ≠òÂç†Áî®ÈáèÈöèÁùÄËÆ§ËØÅÁî®Êà∑Êï∞ÈáèÁöÑÂ¢ûÂä†ËÄåË∂äÊù•Ë∂äÂ§ßÔºå==ÊúçÂä°Âô®ÁöÑÂºÄÈîÄ‰πü‰ºöË∂äÊù•Ë∂äÂ§ß==„ÄÇ2ÔºâÊâ©Â±ïÊÄßÔºöÁî®Êà∑ËÆ§ËØÅ‰πãÂêéÔºåÊúçÂä°Âô®Á´ØÂ∞ÜËÆ§ËØÅËÆ∞ÂΩïÂ≠òÂÇ®Âú®ÂÜÖÂ≠ò‰∏≠ÔºåËøôÊÑèÂë≥ÁùÄËØ•Áî®Êà∑ÁöÑ‰∏ãÊ¨°ËØ∑Ê±ÇËøòÂøÖÈ°ªË¶ÅËØ∑Ê±ÇÂú®ËøôÂè∞ÊúçÂä°Âô®‰∏äÔºåÂè™ÊúâËøôÊ†∑ÊéàÊùÉÊâçËÉΩÈÄöËøá„ÄÇËøôÁßçÊñπÂºè‰∏ã‰πüÂ∞±ÈôêÂà∂‰∫Ü==Ë¥üËΩΩÂùáË°°Âô®ÁöÑËÉΩÂäõ==„ÄÇ‰πüÂ∞±ÈôêÂà∂‰∫ÜÂ∫îÁî®ÁöÑÊâ©Â±ïËÉΩÂäõ„ÄÇ3ÔºâCSRF:Âõ†‰∏∫Âü∫‰∫écookieÊù•ËøõË°åÁî®Êà∑ËØÜÂà´ÔºåÊâÄ‰ª•ÂΩìcookieË¢´Âä´ÊåÅÔºåÁî®Êà∑Â∞±ÂæàÂÆπÊòìÂèóÂà∞Ë∑®Á´ôËØ∑Ê±Ç==‰º™ÈÄ†ÁöÑÊîªÂáª==„ÄÇ Âü∫‰∫étokenÁöÑËÆ§ËØÅËÆ§ËØÅÊµÅÁ®ãÔºö Áî®Êà∑‰ΩøÁî®Áî®Êà∑ÂêçÔºàË¥¶Êà∑Ôºâ„ÄÅÂØÜÁ†ÅËØ∑Ê±ÇÊúçÂä°Âô®ËøõË°åÁôªÂΩï„ÄÇ ÊúçÂä°Âô®È™åËØÅÁî®Êà∑‰ø°ÊÅØÔºåÂØπÊØîÁî®Êà∑ÂêçÂíåÂØÜÁ†ÅÊòØÂê¶Â≠òÂú®‰∏î‰∏ÄËá¥„ÄÇ È™åËØÅÁî®Êà∑‰ø°ÊÅØÊ≤°ÊúâÈóÆÈ¢òÂêéÔºåÊúçÂä°Âô®Á´ØÊ†πÊçÆtokenÁîüÊàêÁöÑÊú∫Âà∂ÁîüÊàêtoken„ÄÇ ÊúçÂä°Âô®Á´ØËøîÂõûÁªôÁî®Êà∑‰∏Ä‰∏™token„ÄÇÂÆ¢Êà∑Á´ØÔºàÊµèËßàÂô®ÔºâÂ≠òÂÇ®tokenÔºåÂπ∂‰∏îÊØèÊ¨°ËØ∑Ê±ÇÊó∂ÈôÑÈÄÅ‰∏äËøô‰∏™token„ÄÇ ÊúçÂä°Âô®Á´ØÈÄöËøáÈ™åËØÅÊú∫Âà∂È™åËØÅtokenÔºåÂπ∂‰∏îËøîÂõûÊï∞ÊçÆ„ÄÇËøô‰∏™tokenÂú®È™åËØÅÂêéÊØèÊ¨°ËØ∑Ê±ÇÊó∂ÈÉΩË¶Å‰º†ÈÄíÁªôÊúçÂä°Âô®Á´ØÔºåÈÄöËøáËØ∑Ê±ÇÂ§¥‰º†ÈÄí„ÄÇÂè¶Â§ñÊúçÂä°Âô®Ë¶ÅÊîØÊåÅCORSÔºàË∑®Êù•Ê∫êËµÑÊ∫êÂÖ±‰∫´ÔºâÁ≠ñÁï•Ôºå‰∏ÄËà¨Âú®ÊúçÂä°Á´ØËøôÊ†∑ÂÅöÔºö 1Access-Control-Allow-OriginÔºö* ÁâàÊùÉÂ£∞ÊòéÔºöÊú¨Êñá‰∏∫CSDNÂçö‰∏ª„ÄåÊï¨ËãçÁîü„ÄçÁöÑÂéüÂàõÊñáÁ´†ÔºåÈÅµÂæ™CC 4.0 BY-SAÁâàÊùÉÂçèËÆÆÔºåËΩ¨ËΩΩËØ∑ÈôÑ‰∏äÂéüÊñáÂá∫Â§ÑÈìæÊé•ÂèäÊú¨Â£∞Êòé„ÄÇÂéüÊñáÈìæÊé•Ôºöhttps://blog.csdn.net/qq_32609199/article/details/109569396 JWTÁªìÊûÑJWTÁî±‰∏âÊÆµ‰ø°ÊÅØÊûÑÊàêÔºåÈÄöËøá .ÈìæÊé•Âú®‰∏ÄËµ∑ÊûÑÊàêjwtÂ≠óÁ¨¶‰∏≤„ÄÇ headerjwtÁöÑÂ§¥ÈÉ®ÊâøËΩΩ‰∏§ÈÉ®ÂàÜ‰ø°ÊÅØÔºö Â£∞ÊòétokenÁ±ªÂûãÔºåËøôÈáåÊòØjwtÂ£∞ÊòétokenÁöÑÂä†ÂØÜÊñπÂºè ÈÄöÂ∏∏‰ΩøÁî® HMAC SHA256Á≠âÂÆåÊï¥ÁöÑÂ§¥ÈÉ®Â¶Ç‰∏ãÔºö 1234&#123; &#x27;typ&#x27;: &#x27;JWT&#x27;, &#x27;alg&#x27;: &#x27;HS256&#x27;&#125; ÈÄöËøáÂØπËØ•jsonÂ≠óÁ¨¶‰∏≤ËøõË°åBASE64ÂéãÁº©Â∞±ÂæóÂà∞‰∫ÜheaderÈÉ®ÂàÜ„ÄÇ 1eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9 payloadÊúâÂÖ≥ÂÆû‰ΩìÁöÑÂ£∞ÊòéÔºåÂ≠òÊîæÊúâÊïà‰ø°ÊÅØÁöÑÂú∞Êñπ„ÄÇËøô‰∏™ÂêçÂ≠óÂÉèÊòØÁâπÊåáÈ£ûÊú∫‰∏äÊâøËΩΩÁöÑË¥ßÂìÅÔºåËøô‰∫õÊúâÊïà‰ø°ÊÅØÂåÖÂê´‰∏â‰∏™ÈÉ®ÂàÜ Â£∞ÊòéÊúâ‰∏âÁßçÁ±ªÂûã: registered, public Âíå private„ÄÇ Registered claims : ËøôÈáåÊúâ‰∏ÄÁªÑÈ¢ÑÂÆö‰πâÁöÑÂ£∞ÊòéÔºåÂÆÉ‰ª¨‰∏çÊòØÂº∫Âà∂ÁöÑÔºå‰ΩÜÊòØÊé®Ëçê„ÄÇÊØîÂ¶ÇÔºöiss (issuer), exp (expiration time), sub (subject), aud (audience)Á≠â„ÄÇ ‚Äã Ê†áÂáÜ‰∏≠Ê≥®ÂÜåÁöÑÂ£∞Êòé (Âª∫ËÆÆ‰ΩÜ‰∏çÂº∫Âà∂‰ΩøÁî®) Ôºö iss: jwtÁ≠æÂèëËÄÖ sub: jwtÊâÄÈù¢ÂêëÁöÑÁî®Êà∑ aud: Êé•Êî∂jwtÁöÑ‰∏ÄÊñπ exp: jwtÁöÑËøáÊúüÊó∂Èó¥ÔºåËøô‰∏™ËøáÊúüÊó∂Èó¥ÂøÖÈ°ªË¶ÅÂ§ß‰∫éÁ≠æÂèëÊó∂Èó¥ nbf: ÂÆö‰πâÂú®‰ªÄ‰πàÊó∂Èó¥‰πãÂâçÔºåËØ•jwtÈÉΩÊòØ‰∏çÂèØÁî®ÁöÑ. iat: jwtÁöÑÁ≠æÂèëÊó∂Èó¥ jti: jwtÁöÑÂîØ‰∏ÄË∫´‰ªΩÊ†áËØÜÔºå‰∏ªË¶ÅÁî®Êù•‰Ωú‰∏∫‰∏ÄÊ¨°ÊÄßtoken,‰ªéËÄåÂõûÈÅøÈáçÊîæÊîªÂáª„ÄÇ Public claims : ÂÖ¨ÂÖ±ÁöÑÂ£∞ÊòéÂèØ‰ª•Ê∑ªÂä†‰ªª‰ΩïÁöÑ‰ø°ÊÅØÔºå‰∏ÄËà¨Ê∑ªÂä†Áî®Êà∑ÁöÑÁõ∏ÂÖ≥‰ø°ÊÅØÊàñÂÖ∂‰ªñ‰∏öÂä°ÈúÄË¶ÅÁöÑÂøÖË¶Å‰ø°ÊÅØ.‰ΩÜ‰∏çÂª∫ËÆÆÊ∑ªÂä†ÊïèÊÑü‰ø°ÊÅØÔºåÂõ†‰∏∫ËØ•ÈÉ®ÂàÜÂú®ÂÆ¢Êà∑Á´ØÂèØËß£ÂØÜ. Private claims : ÁßÅÊúâÂ£∞ÊòéÊòØÊèê‰æõËÄÖÂíåÊ∂àË¥πËÄÖÊâÄÂÖ±ÂêåÂÆö‰πâÁöÑÂ£∞ÊòéÔºå‰∏ÄËà¨‰∏çÂª∫ËÆÆÂ≠òÊîæÊïèÊÑü‰ø°ÊÅØÔºåÂõ†‰∏∫base64ÊòØÂØπÁß∞Ëß£ÂØÜÁöÑÔºåÊÑèÂë≥ÁùÄËØ•ÈÉ®ÂàÜ‰ø°ÊÅØÂèØ‰ª•ÂΩíÁ±ª‰∏∫ÊòéÊñá‰ø°ÊÅØ„ÄÇ ÂØπËØ•jsonÂ≠óÁ¨¶‰∏≤ËøõË°åBASE64ÂéãÁº©Â∞±ÂæóÂà∞‰∫ÜÁ¨¨‰∫åÈÉ®ÂàÜ„ÄÇ‰ªéËøôÈáåÂèØ‰ª•ÁúãÂá∫payloadÂÆåÂÖ®ÊòØÊòéÊñáÊö¥Èú≤ÁöÑÔºå==ËØ∑‰∏çË¶ÅÊîæÁΩÆ‰∏Ä‰∫õÈáçË¶Å‰ø°ÊÅØ==„ÄÇ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚ÄîÁâàÊùÉÂ£∞ÊòéÔºöÊú¨Êñá‰∏∫CSDNÂçö‰∏ª„ÄåÊï¨ËãçÁîü„ÄçÁöÑÂéüÂàõÊñáÁ´†ÔºåÈÅµÂæ™CC 4.0 BY-SAÁâàÊùÉÂçèËÆÆÔºåËΩ¨ËΩΩËØ∑ÈôÑ‰∏äÂéüÊñáÂá∫Â§ÑÈìæÊé•ÂèäÊú¨Â£∞Êòé„ÄÇÂéüÊñáÈìæÊé•Ôºöhttps://blog.csdn.net/qq_32609199/article/details/109569396 signaturejwtÁöÑÁ¨¨‰∏âÈÉ®ÂàÜÊòØ‰∏Ä‰∏™Á≠æËØÅ‰ø°ÊÅØÔºå‰ª•tokenÁöÑÂâç‰∏§ÈÉ®ÂàÜ‰Ωú‰∏∫ÊòéÊñáÔºåÁî®ÂÖ±ÂêåÂçèÂïÜÂ•ΩÁöÑÁßòÈí•ËøõË°åÁ≠æÂêçÔºàÂØπÁß∞Á≠æÂêçÂíåÈùûÂØπÁß∞Á≠æÂêçÔºâ„ÄÇËøô‰∏™Á≠æËØÅ‰ø°ÊÅØÁî±‰∏âÈÉ®ÂàÜÁªÑÊàêÔºö header (base64ÂêéÁöÑ) payload (base64ÂêéÁöÑ) secret Á≠æÂêçÊòØÁî®‰∫éÈ™åËØÅÊ∂àÊÅØÂú®‰º†ÈÄíËøáÁ®ã‰∏≠ÊúâÊ≤°ÊúâË¢´Êõ¥ÊîπÔºåÂπ∂‰∏îÔºåÂØπ‰∫é‰ΩøÁî®ÁßÅÈí•Á≠æÂêçÁöÑtokenÔºåÂÆÉËøòÂèØ‰ª•È™åËØÅJWTÁöÑÂèëÈÄÅÊñπÊòØÂê¶‰∏∫ÂÆÉÊâÄÁß∞ÁöÑÂèëÈÄÅÊñπ„ÄÇ ÈÄöËøáheader‰∏≠Â£∞ÊòéÁöÑÂä†ÂØÜÊñπÂºèËøõË°åÂä†ÁõêsecretÁªÑÂêàÂä†ÂØÜÔºåÁÑ∂ÂêéÂ∞±ÊûÑÊàê‰∫ÜjwtÁöÑÁ¨¨‰∏âÈÉ®ÂàÜ„ÄÇ Ê≥®ÊÑèÔºösecretÊòØ‰øùÂ≠òÂú®ÊúçÂä°Âô®Á´ØÁöÑÔºåjwtÁöÑÁ≠æÂèëÁîüÊàê‰πüÊòØÂú®ÊúçÂä°Âô®Á´ØÁöÑÔºåsecretÂ∞±ÊòØÁî®Êù•ËøõË°åjwtÁöÑÁ≠æÂèëÂíåjwtÁöÑÈ™åËØÅÔºåÊâÄ‰ª•ÔºåÂÆÉÂ∞±ÊòØ‰Ω†ÊúçÂä°Á´ØÁöÑÁßÅÈí•ÔºåÂú®‰ªª‰ΩïÂú∫ÊôØÈÉΩ‰∏çÂ∫îËØ•ÊµÅÈú≤Âá∫Âéª„ÄÇ‰∏ÄÊó¶ÂÆ¢Êà∑Á´ØÂæóÁü•Ëøô‰∏™secret, ÈÇ£Â∞±ÊÑèÂë≥ÁùÄÂÆ¢Êà∑Á´ØÊòØÂèØ‰ª•Ëá™ÊàëÁ≠æÂèëjwt‰∫Ü„ÄÇ ÊÄªÁªì Âõ†‰∏∫jsonÁöÑÈÄöÁî®ÊÄßÔºåÊâÄ‰ª•JWTÊòØÂèØ‰ª•ËøõË°åË∑®ËØ≠Ë®ÄÊîØÊåÅÁöÑÔºåÂÉèJAVA,JavaScript,NodeJS,PHPÁ≠âÂæàÂ§öËØ≠Ë®ÄÈÉΩÂèØ‰ª•‰ΩøÁî®„ÄÇ Âõ†‰∏∫Êúâ‰∫ÜpayloadÈÉ®ÂàÜÔºåÊâÄ‰ª•JWTÂèØ‰ª•Âú®Ëá™Ë∫´Â≠òÂÇ®‰∏Ä‰∫õÂÖ∂‰ªñ‰∏öÂä°ÈÄªËæëÊâÄÂøÖË¶ÅÁöÑÈùûÊïèÊÑü‰ø°ÊÅØ„ÄÇ ‰æø‰∫é‰º†ËæìÔºåjwtÁöÑÊûÑÊàêÈùûÂ∏∏ÁÆÄÂçïÔºåÂ≠óËäÇÂç†Áî®ÂæàÂ∞èÔºåÊâÄ‰ª•ÂÆÉÊòØÈùûÂ∏∏‰æø‰∫é‰º†ËæìÁöÑ„ÄÇ ÂÆÉ‰∏çÈúÄË¶ÅÂú®ÊúçÂä°Á´Ø‰øùÂ≠ò‰ºöËØù‰ø°ÊÅØ, ÊâÄ‰ª•ÂÆÉÊòì‰∫éÂ∫îÁî®ÁöÑÊâ©Â±ï Êó†Áä∂ÊÄÅÂíåÂèØÊâ©Â±ïÊÄßÔºöTokensÂ≠òÂÇ®Âú®ÂÆ¢Êà∑Á´Ø„ÄÇÂÆåÂÖ®Êó†Áä∂ÊÄÅÔºåÂèØÊâ©Â±ï„ÄÇÊàë‰ª¨ÁöÑË¥üËΩΩÂùáË°°Âô®ÂèØ‰ª•Â∞ÜÁî®Êà∑‰º†ÈÄíÂà∞‰ªªÊÑèÊúçÂä°Âô®ÔºåÂõ†‰∏∫Âú®‰ªª‰ΩïÂú∞ÊñπÈÉΩÊ≤°ÊúâÁä∂ÊÄÅÊàñ‰ºöËØù‰ø°ÊÅØ„ÄÇ ÂÆâÂÖ®ÔºöToken‰∏çÊòØCookie„ÄÇÔºàThe token, not a cookie.ÔºâÊØèÊ¨°ËØ∑Ê±ÇÁöÑÊó∂ÂÄôTokenÈÉΩ‰ºöË¢´ÂèëÈÄÅ„ÄÇËÄå‰∏îÔºåÁî±‰∫éÊ≤°ÊúâCookieË¢´ÂèëÈÄÅÔºåËøòÊúâÂä©‰∫éÈò≤Ê≠¢CSRFÊîªÂáª„ÄÇÂç≥‰ΩøÂú®‰Ω†ÁöÑÂÆûÁé∞‰∏≠Â∞ÜtokenÂ≠òÂÇ®Âà∞ÂÆ¢Êà∑Á´ØÁöÑCookie‰∏≠ÔºåËøô‰∏™Cookie‰πüÂè™ÊòØ‰∏ÄÁßçÂ≠òÂÇ®Êú∫Âà∂ÔºåËÄåÈùûË∫´‰ªΩËÆ§ËØÅÊú∫Âà∂„ÄÇÊ≤°ÊúâÂü∫‰∫é‰ºöËØùÁöÑ‰ø°ÊÅØÂèØ‰ª•Êìç‰ΩúÔºåÂõ†‰∏∫Êàë‰ª¨Ê≤°Êúâ‰ºöËØù! ËøáÊúüÊÄßÔºötokenÂú®‰∏ÄÊÆµÊó∂Èó¥‰ª•Âêé‰ºöËøáÊúüÔºåËøô‰∏™Êó∂ÂÄôÁî®Êà∑ÈúÄË¶ÅÈáçÊñ∞ÁôªÂΩï„ÄÇËøôÊúâÂä©‰∫éÊàë‰ª¨‰øùÊåÅÂÆâÂÖ®„ÄÇËøòÊúâ‰∏Ä‰∏™Ê¶ÇÂøµÂè´tokenÊí§ÈîÄÔºåÂÆÉÂÖÅËÆ∏Êàë‰ª¨Ê†πÊçÆÁõ∏ÂêåÁöÑÊéàÊùÉËÆ∏ÂèØ‰ΩøÁâπÂÆöÁöÑtokenÁîöËá≥‰∏ÄÁªÑtokenÊó†Êïà„ÄÇ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî ÁâàÊùÉÂ£∞ÊòéÔºöÊú¨Êñá‰∏∫CSDNÂçö‰∏ª„ÄåÊï¨ËãçÁîü„ÄçÁöÑÂéüÂàõÊñáÁ´†ÔºåÈÅµÂæ™CC 4.0 BY-SAÁâàÊùÉÂçèËÆÆÔºåËΩ¨ËΩΩËØ∑ÈôÑ‰∏äÂéüÊñáÂá∫Â§ÑÈìæÊé•ÂèäÊú¨Â£∞Êòé„ÄÇÂéüÊñáÈìæÊé•Ôºöhttps://blog.csdn.net/qq_32609199/article/details/109569396 QueryWrapperÁöÑÁî®Ê≥ïÊûÑÈÄ†Âô®Êù°‰ª∂ÂÖ≥Á≥ª ‰∏äÂõæÁªøËâ≤Ê°Ü‰∏∫ÊäΩË±°Á±ªabstract ËìùËâ≤Ê°Ü‰∏∫Ê≠£Â∏∏classÁ±ªÔºåÂèØnewÂØπË±° ÈªÑËâ≤ÁÆ≠Â§¥ÊåáÂêë‰∏∫Áà∂Â≠êÁ±ªÂÖ≥Á≥ªÔºåÁÆ≠Â§¥ÊåáÂêë‰∏∫Áà∂Á±ª Â∏∏Áî®ÂáΩÊï∞ ÂâçÁ´ØÊäÄÊúØ vue‰∏Ä‰∏™Âø´ÈÄüÊûÑÂª∫È°µÈù¢ÁöÑÊ°ÜÊû∂ÔºõÊåá‰ª§Ôºöv-if„ÄÅv-for„ÄÅÊèíÂÄºË°®ËææÂºè Element-ui‰∏Ä‰∏™ÂâçÁ´ØÁªÑ‰ª∂Â∫ìÔºåÂèØ‰ª•Âø´ÈÄüÂÆûÁé∞ÁªÑ‰ª∂ÊïàÊûú Nuxt‰∏Ä‰∏™ÊúçÂä°Á´ØÊ∏≤ÊüìÊäÄÊúØ NpmÈ°πÁõÆÈáåÁî®ÁöÑÊúÄÂ§öÁöÑÂ∞±ÊòØ‰∏ãËΩΩ‰æùËµñ ÊàëÂ≠¶Âà∞‰∫Ü‰ªÄ‰πàÔºö swagger-uiËøô‰∏™Â∞èÂ∑•ÂÖ∑ÔºåÁî®‰∫éË∞ÉËØïÊé•Âè£ÂæàÂ•ΩÁî®ÔºåÂèØÊèêÈ´òÊéíÈîôÊïàÁéá resultÔºö‰∏Ä‰∏™ÁªìÊûúÈõÜÔºåËøô‰∏™ÂæàÂÆûÁî®ÔºåÁõ∏ÂΩì‰∫éÂØπÂáΩÊï∞ÁöÑËøîÂõûÁ±ªÂûãËøõË°åÁªü‰∏ÄÔºå‰ΩøÂæó‰ª£Á†ÅÈÄöÁî®ÊÄßÊõ¥È´ò HttpServletRequest","categories":[{"name":"È°πÁõÆHospital","slug":"È°πÁõÆHospital","permalink":"http://example.com/categories/%E9%A1%B9%E7%9B%AEHospital/"}],"tags":[]},{"title":"leetcodeÂ≠êÂ∫èÂàóÈóÆÈ¢ò","slug":"leetcodeÂ≠êÂ∫èÂàóÈóÆÈ¢ò","date":"2021-06-26T16:00:00.000Z","updated":"2021-08-12T01:54:23.785Z","comments":true,"path":"2021/06/27/leetcodeÂ≠êÂ∫èÂàóÈóÆÈ¢ò/","link":"","permalink":"http://example.com/2021/06/27/leetcode%E5%AD%90%E5%BA%8F%E5%88%97%E9%97%AE%E9%A2%98/","excerpt":"","text":"300. ÊúÄÈïøÈÄíÂ¢ûÂ≠êÂ∫èÂàóÁªô‰Ω†‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑ nums ÔºåÊâæÂà∞ÂÖ∂‰∏≠ÊúÄÈïø‰∏•Ê†ºÈÄíÂ¢ûÂ≠êÂ∫èÂàóÁöÑÈïøÂ∫¶„ÄÇ Â≠êÂ∫èÂàóÊòØÁî±Êï∞ÁªÑÊ¥æÁîüËÄåÊù•ÁöÑÂ∫èÂàóÔºåÂà†Èô§ÔºàÊàñ‰∏çÂà†Èô§ÔºâÊï∞ÁªÑ‰∏≠ÁöÑÂÖÉÁ¥†ËÄå‰∏çÊîπÂèòÂÖ∂‰ΩôÂÖÉÁ¥†ÁöÑÈ°∫Â∫è„ÄÇ‰æãÂ¶ÇÔºå[3,6,2,7] ÊòØÊï∞ÁªÑ [0,3,1,6,2,2,7] ÁöÑÂ≠êÂ∫èÂàó„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºönums = [10,9,2,5,3,7,101,18] ËæìÂá∫Ôºö4 Ëß£ÈáäÔºöÊúÄÈïøÈÄíÂ¢ûÂ≠êÂ∫èÂàóÊòØ [2,3,7,101]ÔºåÂõ†Ê≠§ÈïøÂ∫¶‰∏∫ 4 „ÄÇ Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºönums = [0,1,0,3,2,3] ËæìÂá∫Ôºö4 Á§∫‰æã 3Ôºö ËæìÂÖ•Ôºönums = [7,7,7,7,7,7,7] ËæìÂá∫Ôºö1 ÊèêÁ§∫Ôºö 1 &lt;= nums.length &lt;= 2500 -104 &lt;= nums[i] &lt;= 104 ËøõÈò∂Ôºö ‰Ω†ÂèØ‰ª•ËÆæËÆ°Êó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ O(n2) ÁöÑËß£ÂÜ≥ÊñπÊ°àÂêóÔºü ‰Ω†ËÉΩÂ∞ÜÁÆóÊ≥ïÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶Èôç‰ΩéÂà∞ O(n log(n)) Âêó? Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàí„ÄÅ‰∫åÂàÜÊü•ÊâæÂàÜÊûêÔºöËøô‰∏™È¢òÁõÆÊ†∏ÂøÉÊÄùÊÉ≥ÊòØÔºöËÆ©Â≠êÂ∫èÂàóÂ¢ûÈïøÁöÑÊÖ¢Ôºå‰ΩøÂæóÊØè‰∏™ÈïøÂ∫¶ÁöÑÂ≠êÂ∫èÂàóÁöÑÊúÄÂ§ßÂÄºÔºà‰πüÂ∞±ÊòØÊúÄÂêé‰∏Ä‰∏™Ôºâ‰øùÊåÅÂΩìÂâçÈïøÂ∫¶ÁöÑÊúÄÂ∞èÂÄºÔºàÂ∞ΩÈáèÂ∞èÔºâÔºåÊïÖÂæóÂà∞ÊúÄÈïøÁöÑÈÄíÂ¢ûÂ≠êÂ∫èÂàó„ÄÇËøô‰∏™È¢òËß£‰∏çÈîôÔºå‰ªîÁªÜÁúãÁúã„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718192021222324252627282930class Solution &#123; public int lengthOfLIS(int[] nums) &#123; int len = nums.length,res = 1; if(len==0)&#123; return 0; &#125; int[] d = new int[len+1]; d[res] = nums[0]; for(int i=1;i&lt;len;i++)&#123; if(nums[i]&gt;d[res])&#123; //Â¶ÇÊûú‰∏ã‰∏Ä‰∏™Êï∞Êú¨Ë∫´Â∞±ÊØîÂΩìÂâçÂ≠êÂ∫èÂàóÊúÄÂ§ßÂÄºÂ§ßÔºåÈÇ£Áõ¥Êé•Âä†ËøõÂéªÂ∞±Ë°å d[++res] = nums[i]; &#125;else&#123; //Â¶ÇÊûú‰∏ã‰∏Ä‰∏™Êï∞ÊØîËæÉÂ∞èÔºåÈÇ£‰πàÊàë‰ª¨ÁªôËøô‰∏™Êï∞Êâæ‰∏Ä‰∏™ÂêàÈÄÇÁöÑ‰ΩçÁΩÆ int left = 1,right = res,pos = 0; while(left&lt;=right)&#123; int mid = left+(right-left)/2; if(d[mid]&lt;nums[i])&#123; pos = mid; left = mid+1; &#125;else&#123; right = mid-1; &#125; &#125; d[pos+1] = nums[i]; &#125; &#125; return res; &#125;&#125; 581. ÊúÄÁü≠Êó†Â∫èËøûÁª≠Â≠êÊï∞ÁªÑÁªô‰Ω†‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑ nums Ôºå‰Ω†ÈúÄË¶ÅÊâæÂá∫‰∏Ä‰∏™ ËøûÁª≠Â≠êÊï∞ÁªÑ ÔºåÂ¶ÇÊûúÂØπËøô‰∏™Â≠êÊï∞ÁªÑËøõË°åÂçáÂ∫èÊéíÂ∫èÔºåÈÇ£‰πàÊï¥‰∏™Êï∞ÁªÑÈÉΩ‰ºöÂèò‰∏∫ÂçáÂ∫èÊéíÂ∫è„ÄÇ ËØ∑‰Ω†ÊâæÂá∫Á¨¶ÂêàÈ¢òÊÑèÁöÑ ÊúÄÁü≠ Â≠êÊï∞ÁªÑÔºåÂπ∂ËæìÂá∫ÂÆÉÁöÑÈïøÂ∫¶„ÄÇ Á§∫‰æã1Ôºö ËæìÂÖ•Ôºönums = [2,6,4,8,10,9,15] ËæìÂá∫Ôºö5 Ëß£ÈáäÔºö‰Ω†Âè™ÈúÄË¶ÅÂØπ [6, 4, 8, 10, 9] ËøõË°åÂçáÂ∫èÊéíÂ∫èÔºåÈÇ£‰πàÊï¥‰∏™Ë°®ÈÉΩ‰ºöÂèò‰∏∫ÂçáÂ∫èÊéíÂ∫è„ÄÇ Á§∫‰æã2Ôºö ËæìÂÖ•Ôºönums = [1,2,3,4]ËæìÂá∫Ôºö0 Á§∫‰æã3Ôºö ËæìÂÖ•Ôºönums = [1]ËæìÂá∫Ôºö0 Áü•ËØÜÁÇπÔºöÂèåÊåáÈíàÂàÜÊûêÔºö‰ªîÁªÜÊÉ≥‰∏Ä‰∏ãÔºåËøô‰∏™È¢òÁõÆÁöÑËß£Ê≥ïÂèØ‰ªé‰∏§‰∏™ËßíÂ∫¶Êù•Áúã„ÄÇ Á¨¨‰∏ÄÔºåÂõ†‰∏∫ÂØπÊï∞ÁªÑ‰∏≠ÁöÑÊüêÊÆµÂ≠êÂ∫èÂàóËøõË°åÊéíÂ∫è‰πãÂêéÔºåÊï¥ÊÆµÊï∞ÁªÑÈÉΩ‰ºöÂèò‰∏∫ÂçáÂ∫èÔºà‰πüÂ∞±ÊòØÊï¥ÊÆµÊúâÂ∫èÔºâÔºåÈÇ£‰πüÂ∞±ÊòØËØ¥ÔºåÊï∞ÁªÑÁöÑÂâçÁ´ØÂíåÂ∞æÁ´ØÔºàÂ¶ÇÊûú‰∏§Á´ØÈÉΩÊúâÁöÑËØùÔºâÂ∑≤ÁªèÊòØÊúâÂ∫èÁöÑ‰∫ÜÔºåÊç¢Âè•ËØùËØ¥ÔºåÂè™ÈúÄË¶ÅÂ∞ÜÊï∞ÁªÑËøõË°åÊéíÂ∫èÔºåÁÑ∂ÂêéÊâæÂà∞ÂâçÂêé‰∏§Á´ØÂíåÊéíÂ∫èÂêéÁöÑÊï∞ÁªÑÁõ∏ÂêåÁöÑ‰ΩçÁΩÆÂç≥ÂèØ„ÄÇ Á¨¨‰∫åÔºåÂ∞ÜÊï∞ÁªÑÂàÜ‰∏∫A„ÄÅB„ÄÅC‰∏âÊÆµÔºåÂÖ∂‰∏≠A„ÄÅCÊÆµ‰∏∫È¶ñÂ∞æ‰∏§Á´ØÔºåB‰∏≠ÊúÄÂè≥‰æßÁöÑÂÖÉÁ¥†Â∞è‰∫éÊâÄÊúâC‰∏≠ÁöÑÂÖÉÁ¥†ÔºåB‰∏≠ÊúÄÂ∑¶‰æßÁöÑÂÖÉÁ¥†Â§ß‰∫éÊâÄÊúâA‰∏≠ÁöÑÂÖÉÁ¥†ÔºåÊ†πÊçÆËøô‰∏ÄÁâπÁÇπÔºåÂØπÊï∞ÁªÑËøõË°å‰∏ÄÊ¨°ÈÅçÂéÜÂç≥ÂèØ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºöÈ¢òËß£1Ôºö 12345678910111213141516171819202122232425262728293031public int findUnsortedSubarray(int[] nums) &#123; int len = nums.length; int[] copy = new int[len]; for(int i=0;i&lt;len;i++)&#123; copy[i] = nums[i]; &#125; Arrays.sort(copy); int count = 0; int index = 0; while(index&lt;len)&#123; if(copy[index]==nums[index])&#123; index++; count++; &#125;else&#123; break; &#125; &#125; if(index==len)&#123; return 0; &#125; index = len-1; while(index&gt;=0)&#123; if(copy[index]==nums[index])&#123; --index; ++count; &#125;else&#123; break; &#125; &#125; return len-count; &#125; È¢òËß£2Ôºö 1234567891011121314151617181920class Solution &#123; public int findUnsortedSubarray(int[] nums) &#123; int n = nums.length; int maxn = Integer.MIN_VALUE, right = -1; int minn = Integer.MAX_VALUE, left = -1; for (int i = 0; i &lt; n; i++) &#123; if (maxn &gt; nums[i]) &#123; right = i; &#125; else &#123; maxn = nums[i]; &#125; if (minn &lt; nums[n - i - 1]) &#123; left = n - i - 1; &#125; else &#123; minn = nums[n - i - 1]; &#125; &#125; return right == -1 ? 0 : right - left + 1; &#125;&#125; 1035. ‰∏çÁõ∏‰∫§ÁöÑÁ∫øÂú®‰∏§Êù°Áã¨Á´ãÁöÑÊ∞¥Âπ≥Á∫ø‰∏äÊåâÁªôÂÆöÁöÑÈ°∫Â∫èÂÜô‰∏ã nums1 Âíå nums2 ‰∏≠ÁöÑÊï¥Êï∞„ÄÇ Áé∞Âú®ÔºåÂèØ‰ª•ÁªòÂà∂‰∏Ä‰∫õËøûÊé•‰∏§‰∏™Êï∞Â≠ó nums1[i] Âíå nums2[j] ÁöÑÁõ¥Á∫øÔºåËøô‰∫õÁõ¥Á∫øÈúÄË¶ÅÂêåÊó∂Êª°Ë∂≥Êª°Ë∂≥Ôºö nums1[i] == nums2[j] ‰∏îÁªòÂà∂ÁöÑÁõ¥Á∫ø‰∏ç‰∏é‰ªª‰ΩïÂÖ∂‰ªñËøûÁ∫øÔºàÈùûÊ∞¥Âπ≥Á∫øÔºâÁõ∏‰∫§„ÄÇ ËØ∑Ê≥®ÊÑèÔºåËøûÁ∫øÂç≥‰ΩøÂú®Á´ØÁÇπ‰πü‰∏çËÉΩÁõ∏‰∫§ÔºöÊØè‰∏™Êï∞Â≠óÂè™ËÉΩÂ±û‰∫é‰∏ÄÊù°ËøûÁ∫ø„ÄÇ ‰ª•ËøôÁßçÊñπÊ≥ïÁªòÂà∂Á∫øÊù°ÔºåÂπ∂ËøîÂõûÂèØ‰ª•ÁªòÂà∂ÁöÑÊúÄÂ§ßËøûÁ∫øÊï∞„ÄÇ Áü•ËØÜÁÇπÔºödpÂàÜÊûêÔºöÊ±ÇÊúÄÈïøÂÖ¨ÂÖ±Â≠êÂ∫èÂàóÔºå‰ª£Á†ÅÈÉΩ‰∏çÁî®Êîπ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516class Solution &#123; public int maxUncrossedLines(int[] nums1, int[] nums2) &#123; int len1 = nums1.length,len2 = nums2.length; int[][] dp = new int[len1+1][len2+1]; for(int i=1;i&lt;=len1;i++)&#123; for(int j= 1;j&lt;=len2;j++)&#123; if(nums1[i-1]==nums2[j-1])&#123; dp[i][j] = dp[i-1][j-1]+1; &#125;else&#123; dp[i][j] = Math.max(dp[i-1][j],dp[i][j-1]); &#125; &#125; &#125; return dp[len1][len2]; &#125;&#125; 1143.ÊúÄÈïøÂÖ¨ÂÖ±Â≠êÂ∫èÂàóÁªôÂÆö‰∏§‰∏™Â≠óÁ¨¶‰∏≤ text1 Âíå text2ÔºåËøîÂõûËøô‰∏§‰∏™Â≠óÁ¨¶‰∏≤ÁöÑÊúÄÈïø ÂÖ¨ÂÖ±Â≠êÂ∫èÂàó ÁöÑÈïøÂ∫¶„ÄÇÂ¶ÇÊûú‰∏çÂ≠òÂú® ÂÖ¨ÂÖ±Â≠êÂ∫èÂàó ÔºåËøîÂõû 0 „ÄÇ ‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÁöÑ Â≠êÂ∫èÂàó ÊòØÊåáËøôÊ†∑‰∏Ä‰∏™Êñ∞ÁöÑÂ≠óÁ¨¶‰∏≤ÔºöÂÆÉÊòØÁî±ÂéüÂ≠óÁ¨¶‰∏≤Âú®‰∏çÊîπÂèòÂ≠óÁ¨¶ÁöÑÁõ∏ÂØπÈ°∫Â∫èÁöÑÊÉÖÂÜµ‰∏ãÂà†Èô§Êüê‰∫õÂ≠óÁ¨¶Ôºà‰πüÂèØ‰ª•‰∏çÂà†Èô§‰ªª‰ΩïÂ≠óÁ¨¶ÔºâÂêéÁªÑÊàêÁöÑÊñ∞Â≠óÁ¨¶‰∏≤„ÄÇ ‰æãÂ¶ÇÔºå‚Äùace‚Äù ÊòØ ‚Äúabcde‚Äù ÁöÑÂ≠êÂ∫èÂàóÔºå‰ΩÜ ‚Äúaec‚Äù ‰∏çÊòØ ‚Äúabcde‚Äù ÁöÑÂ≠êÂ∫èÂàó„ÄÇ ‰∏§‰∏™Â≠óÁ¨¶‰∏≤ÁöÑ ÂÖ¨ÂÖ±Â≠êÂ∫èÂàó ÊòØËøô‰∏§‰∏™Â≠óÁ¨¶‰∏≤ÊâÄÂÖ±ÂêåÊã•ÊúâÁöÑÂ≠êÂ∫èÂàó„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºötext1 = ‚Äúabcde‚Äù, text2 = ‚Äúace‚Äù ËæìÂá∫Ôºö3 Ëß£ÈáäÔºöÊúÄÈïøÂÖ¨ÂÖ±Â≠êÂ∫èÂàóÊòØ ‚Äúace‚Äù ÔºåÂÆÉÁöÑÈïøÂ∫¶‰∏∫ 3 „ÄÇ Áü•ËØÜÁÇπÔºödp„ÄÅÊï∞ÁªÑÂàÜÊûêÔºöËøô‰∏™Ëß£Ê≥ïÊàëÊ≤°ÁúãÂ§™ÊòéÁôΩ„ÄÇ ‰∫åÁª¥Âä®ÊÄÅËßÑÂàíÔºåÂèåÂ±ÇforÂæ™ÁéØÔºåÂ§ñÂ±ÇÈÅçÂéÜtext1ÔºåÂÜÖÂ±ÇÈÅçÂéÜtext2„ÄÇË¥¥‰∏™È¢òËß£‰∫åÁª¥Âä®ÊÄÅËßÑÂàíÁöÑÂ∏∏ËßÑÂ•óË∑ØÔºåËÆ≤ÁöÑ‰∏çËµñ„ÄÇ 1.Áä∂ÊÄÅÂÆö‰πâÔºö ÊØîÂ¶ÇÂØπ‰∫éÊú¨È¢òËÄåË®ÄÔºåÂèØ‰ª•ÂÆö‰πâ dpi Ë°®Á§∫ text1[0:i-1] Âíå text2[0:j-1] ÁöÑÊúÄÈïøÂÖ¨ÂÖ±Â≠êÂ∫èÂàó„ÄÇ ÔºàÊ≥®Ôºötext1[0:i-1] Ë°®Á§∫ÁöÑÊòØ text1 ÁöÑ Á¨¨ 0 ‰∏™ÂÖÉÁ¥†Âà∞Á¨¨ i - 1 ‰∏™ÂÖÉÁ¥†Ôºå‰∏§Á´ØÈÉΩÂåÖÂê´Ôºâ ‰πãÊâÄ‰ª• dpi ÁöÑÂÆö‰πâ‰∏çÊòØ text1[0:i] Âíå text2[0:j] ÔºåÊòØ‰∏∫‰∫ÜÊñπ‰æøÂΩì i = 0 ÊàñËÄÖ j = 0 ÁöÑÊó∂ÂÄôÔºådpiË°®Á§∫ÁöÑ‰∏∫Á©∫Â≠óÁ¨¶‰∏≤ÂíåÂè¶Â§ñ‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÁöÑÂåπÈÖçÔºåËøôÊ†∑ dpi ÂèØ‰ª•ÂàùÂßãÂåñ‰∏∫ 0. 2.Áä∂ÊÄÅËΩ¨ÁßªÊñπÁ®ã Áü•ÈÅìÁä∂ÊÄÅÂÆö‰πâ‰πãÂêéÔºåÂºÄÂßãÂÜôÁä∂ÊÄÅËΩ¨ÁßªÊñπÁ®ã„ÄÇ ÂΩì text1[i - 1] == text2[j - 1] Êó∂ÔºåËØ¥Êòé‰∏§‰∏™Â≠êÂ≠óÁ¨¶‰∏≤ÁöÑÊúÄÂêé‰∏Ä‰ΩçÁõ∏Á≠âÔºåÊâÄ‰ª•ÊúÄÈïøÂÖ¨ÂÖ±Â≠êÂ∫èÂàóÂèàÂ¢ûÂä†‰∫Ü 1ÔºåÊâÄ‰ª• dpi = dpi - 1 + 1Ôºõ‰∏æ‰∏™‰æãÂ≠êÔºåÊØîÂ¶ÇÂØπ‰∫é ac Âíå bc ËÄåË®ÄÔºå‰ªñ‰ª¨ÁöÑÊúÄÈïøÂÖ¨ÂÖ±Â≠êÂ∫èÂàóÁöÑÈïøÂ∫¶Á≠â‰∫é a Âíå b ÁöÑÊúÄÈïøÂÖ¨ÂÖ±Â≠êÂ∫èÂàóÈïøÂ∫¶ 0 + 1 = 1„ÄÇ ÂΩì text1[i - 1] != text2[j - 1] Êó∂ÔºåËØ¥Êòé‰∏§‰∏™Â≠êÂ≠óÁ¨¶‰∏≤ÁöÑÊúÄÂêé‰∏Ä‰Ωç‰∏çÁõ∏Á≠âÔºåÈÇ£‰πàÊ≠§Êó∂ÁöÑÁä∂ÊÄÅ dpi Â∫îËØ•ÊòØ dpi - 1 Âíå dpi ÁöÑÊúÄÂ§ßÂÄº„ÄÇ‰∏æ‰∏™‰æãÂ≠êÔºåÊØîÂ¶ÇÂØπ‰∫é ace Âíå bc ËÄåË®ÄÔºå‰ªñ‰ª¨ÁöÑÊúÄÈïøÂÖ¨ÂÖ±Â≠êÂ∫èÂàóÁöÑÈïøÂ∫¶Á≠â‰∫é ‚ë† ace Âíå b ÁöÑÊúÄÈïøÂÖ¨ÂÖ±Â≠êÂ∫èÂàóÈïøÂ∫¶0 ‰∏é ‚ë° ac Âíå bc ÁöÑÊúÄÈïøÂÖ¨ÂÖ±Â≠êÂ∫èÂàóÈïøÂ∫¶1 ÁöÑÊúÄÂ§ßÂÄºÔºåÂç≥ 1„ÄÇ Áªº‰∏äÁä∂ÊÄÅËΩ¨ÁßªÊñπÁ®ã‰∏∫Ôºö dpi = dpi - 1 + 1dpi=dpi‚àí1+1, ÂΩì text1[i - 1] == text2[j - 1];text1[i‚àí1]==text2[j‚àí1]; dpi = max(dpi - 1, dpi)dpi=max(dpi‚àí1,dpi), ÂΩì text1[i - 1] != text2[j - 1]text1[i‚àí1]!=text2[j‚àí1] 3.Áä∂ÊÄÅÂàùÂßãÂåñ ÂàùÂßãÂåñÂ∞±ÊòØË¶ÅÁúãÂΩì i = 0 ‰∏é j = 0 Êó∂Ôºå dpi Â∫îËØ•ÂèñÂÄº‰∏∫Â§öÂ∞ë„ÄÇ ÂΩì i = 0 Êó∂Ôºådp0 Ë°®Á§∫ÁöÑÊòØ text1‰∏≠ÂèñÁ©∫Â≠óÁ¨¶‰∏≤Ë∑ü text2 ÁöÑÊúÄÈïøÂÖ¨ÂÖ±Â≠êÂ∫èÂàóÔºåÁªìÊûúËÇØÂÆö‰∏∫ 0. ÂΩì j = 0 Êó∂Ôºådpi Ë°®Á§∫ÁöÑÊòØ text2text2 ‰∏≠ÂèñÁ©∫Â≠óÁ¨¶‰∏≤ Ë∑ü text1text1 ÁöÑÊúÄÈïøÂÖ¨ÂÖ±Â≠êÂ∫èÂàóÔºåÁªìÊûúËÇØÂÆö‰∏∫ 0. Áªº‰∏äÔºåÂΩì i = 0 ÊàñËÄÖ j = 0 Êó∂Ôºådpi ÂàùÂßãÂåñ‰∏∫ 0. ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718class Solution &#123; public int longestCommonSubsequence(String text1, String text2) &#123; char[] array1 = text1.toCharArray(); char[] array2 = text2.toCharArray(); int len1 = array1.length,len2 = array2.length; int[][] dp = new int[len1+1][len2+1]; for(int i=1;i&lt;=len1;i++)&#123; for(int j = 1;j&lt;=len2;j++)&#123; if(array1[i-1]==array2[j-1])&#123; dp[i][j] = dp[i-1][j-1]+1; &#125;else&#123; dp[i][j] = Math.max(dp[i-1][j],dp[i][j-1]); &#125; &#125; &#125; return dp[len1][len2]; &#125;&#125; 1713. ÂæóÂà∞Â≠êÂ∫èÂàóÁöÑÊúÄÂ∞ëÊìç‰ΩúÊ¨°Êï∞Áªô‰Ω†‰∏Ä‰∏™Êï∞ÁªÑ target ÔºåÂåÖÂê´Ëã•Âπ≤ ‰∫í‰∏çÁõ∏Âêå ÁöÑÊï¥Êï∞Ôºå‰ª•ÂèäÂè¶‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑ arr Ôºåarr ÂèØËÉΩ ÂåÖÂê´ÈáçÂ§çÂÖÉÁ¥†„ÄÇ ÊØè‰∏ÄÊ¨°Êìç‰Ωú‰∏≠Ôºå‰Ω†ÂèØ‰ª•Âú® arr ÁöÑ‰ªªÊÑè‰ΩçÁΩÆÊèíÂÖ•‰ªª‰∏ÄÊï¥Êï∞„ÄÇÊØîÊñπËØ¥ÔºåÂ¶ÇÊûú arr = [1,4,1,2] ÔºåÈÇ£‰πà‰Ω†ÂèØ‰ª•Âú®‰∏≠Èó¥Ê∑ªÂä† 3 ÂæóÂà∞ [1,4,3,1,2] „ÄÇ‰Ω†ÂèØ‰ª•Âú®Êï∞ÁªÑÊúÄÂºÄÂßãÊàñÊúÄÂêéÈù¢Ê∑ªÂä†Êï¥Êï∞„ÄÇ ËØ∑‰Ω†ËøîÂõû ÊúÄÂ∞ë Êìç‰ΩúÊ¨°Êï∞Ôºå‰ΩøÂæó target Êàê‰∏∫ arr ÁöÑ‰∏Ä‰∏™Â≠êÂ∫èÂàó„ÄÇ ‰∏Ä‰∏™Êï∞ÁªÑÁöÑÂ≠êÂ∫èÂàóÊåáÁöÑÊòØÂà†Èô§ÂéüÊï∞ÁªÑÁöÑÊüê‰∫õÂÖÉÁ¥†ÔºàÂèØËÉΩ‰∏Ä‰∏™ÂÖÉÁ¥†ÈÉΩ‰∏çÂà†Èô§ÔºâÔºåÂêåÊó∂‰∏çÊîπÂèòÂÖ∂‰ΩôÂÖÉÁ¥†ÁöÑÁõ∏ÂØπÈ°∫Â∫èÂæóÂà∞ÁöÑÊï∞ÁªÑ„ÄÇÊØîÊñπËØ¥Ôºå[2,7,4] ÊòØ [4,2,3,7,2,1,4] ÁöÑÂ≠êÂ∫èÂàóÔºàÂä†Á≤óÂÖÉÁ¥†ÔºâÔºå‰ΩÜ [2,4,2] ‰∏çÊòØÂ≠êÂ∫èÂàó„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºötarget = [5,1,3], arr = [9,4,2,3,4] ËæìÂá∫Ôºö2 Ëß£ÈáäÔºö‰Ω†ÂèØ‰ª•Ê∑ªÂä† 5 Âíå 1 Ôºå‰ΩøÂæó arr Âèò‰∏∫ [5,9,4,1,2,3,4] Ôºåtarget ‰∏∫ arr ÁöÑÂ≠êÂ∫èÂàó„ÄÇ Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºötarget = [6,4,8,1,3,2], arr = [4,7,6,2,3,8,6,1] ËæìÂá∫Ôºö3 ÊèêÁ§∫Ôºö 1 &lt;= target.length, arr.length &lt;= 105 1 &lt;= target[i], arr[i] &lt;= 109 target ‰∏çÂåÖÂê´‰ªª‰ΩïÈáçÂ§çÂÖÉÁ¥†„ÄÇ Áü•ËØÜÁÇπÔºöË¥™ÂøÉ„ÄÅ‰∫åÂàÜÊü•ÊâæÂàÜÊûêÔºöËøô‰∏™È¢òËß£ËÆ≤ÁöÑÊØîËæÉÂ•ΩÔºåÊàëÊ≤°‰ªÄ‰πàÂ•ΩË°•ÂÖÖÁöÑ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728293031323334353637383940class Solution &#123; //ÊúÄÂ∞ëÊìç‰ΩúÊï∞=target.length-arr‰∏≠Â∑≤Â≠òÂú®ÁöÑtargetÂ≠êÂ∫èÂàóÊúÄÂ§ßÈïøÂ∫¶ public int minOperations(int[] target, int[] arr) &#123; int len = target.length; Map&lt;Integer,Integer&gt; map = new HashMap&lt;&gt;(); for(int i=0;i&lt;len;i++)&#123; map.put(target[i],i); &#125; List&lt;Integer&gt; list = new ArrayList&lt;&gt;(); for(int num:arr)&#123; if(map.containsKey(num))&#123; int index = map.get(num); int pos = binarySearch(list,index); if(pos!=list.size())&#123; list.set(pos,index); &#125;else&#123; list.add(index); &#125; &#125; &#125; return len-list.size(); &#125; //ÈÄöËøá‰∫åÂàÜÊü•ÊâæÔºåÂ∞ÜÂΩìÂâçÈÅçÂéÜÂà∞ÁöÑËæÉÂ∞èÁöÑÊï∞Â≠óÊîæÁΩÆÂêàÈÄÇÁöÑ‰ΩçÁΩÆ public int binarySearch(List&lt;Integer&gt; list,int target)&#123; int size = list.size(); if(size==0||list.get(size-1)&lt;target)&#123; return size; &#125; int left = 0,right = size-1; while(left&lt;right)&#123; int mid = (right-left)/2+left; if(list.get(mid)&lt;target)&#123; left=mid+1; &#125;else&#123; right = mid; &#125; &#125; return left; &#125;&#125; 516. ÊúÄÈïøÂõûÊñáÂ≠êÂ∫èÂàóÁªô‰Ω†‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ s ÔºåÊâæÂá∫ÂÖ∂‰∏≠ÊúÄÈïøÁöÑÂõûÊñáÂ≠êÂ∫èÂàóÔºåÂπ∂ËøîÂõûËØ•Â∫èÂàóÁöÑÈïøÂ∫¶„ÄÇ Â≠êÂ∫èÂàóÂÆö‰πâ‰∏∫Ôºö‰∏çÊîπÂèòÂâ©‰ΩôÂ≠óÁ¨¶È°∫Â∫èÁöÑÊÉÖÂÜµ‰∏ãÔºåÂà†Èô§Êüê‰∫õÂ≠óÁ¨¶ÊàñËÄÖ‰∏çÂà†Èô§‰ªª‰ΩïÂ≠óÁ¨¶ÂΩ¢ÊàêÁöÑ‰∏Ä‰∏™Â∫èÂàó„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºös = ‚Äúbbbab‚Äù ËæìÂá∫Ôºö4 Ëß£ÈáäÔºö‰∏Ä‰∏™ÂèØËÉΩÁöÑÊúÄÈïøÂõûÊñáÂ≠êÂ∫èÂàó‰∏∫ ‚Äúbbbb‚Äù „ÄÇ Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºös = ‚Äúcbbd‚Äù ËæìÂá∫Ôºö2 Ëß£ÈáäÔºö‰∏Ä‰∏™ÂèØËÉΩÁöÑÊúÄÈïøÂõûÊñáÂ≠êÂ∫èÂàó‰∏∫ ‚Äúbb‚Äù „ÄÇ ÊèêÁ§∫Ôºö 1 &lt;= s.length &lt;= 1000 s ‰ªÖÁî±Â∞èÂÜôËã±ÊñáÂ≠óÊØçÁªÑÊàê Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàíÂàÜÊûêÔºöËøôÁßçÈóÆÈ¢òÈÉΩÂèØ‰ª•ÂàÜËß£‰∏∫‰∏Ä‰∏™‰∏™Â≠êÈóÆÈ¢òÔºõÊó¢ÁÑ∂ÊòØÂõûÊñáÔºåÈÇ£ÂéªÊéâÈ¶ñÂ∞æ‰∏§‰∏™Â≠óÁ¨¶‰πãÂêéÂøÖÂÆöËøòÊòØÂõûÊñáÔºå‰ª•dp[i][j]Ë°®Á§∫‰ª•i„ÄÅj‰∏∫È¶ñÂ∞æ‰∏ãÊ†áÁöÑÊï∞ÁªÑ‰∏≠ÁöÑÊúÄÈïøÂõûÊñáÂ≠êÂ∫èÂàóÈïøÂ∫¶ÔºåÈÇ£‰πàÂä®ÊÄÅËΩ¨ÁßªÊñπÁ®ãdp[i][j]Â∞±Êúâ‰∏§ÁßçÊÉÖÂÜµÔºå‰∏ÄÁßçÊòØi‰ΩçÁΩÆÁöÑÂ≠óÁ¨¶Âíåj‰ΩçÁΩÆÁöÑÂ≠óÁ¨¶‰∏çÁõ∏Á≠âÔºåÊ≠§Êó∂dp[i][j]=maxÔºàdp[i+1][j],dp[i][j-1]ÔºâÔºõÂè¶‰∏ÄÁßçÊòØÁõ∏Á≠âdp[i][j] = dp[i+1][j-1]+2; ËøòË¶ÅÊ≥®ÊÑèÁöÑ‰∏ÄÁÇπÂ∞±ÊòØÈÅçÂéÜÈ°∫Â∫èÔºåÁî±‰∫édp[i][j]ÁöÑÂèñÂÄºÂèñÂÜ≥‰∫édp[i+1][j-1]ÔºåÊâÄ‰ª•iÂøÖÂÆöË¶Å‰ªéÊú´Â∞æÂºÄÂßãÔºåËøõË°åÈôçÂ∫èÈÅçÂéÜÔºõjÂøÖÂÆöË¶Å‰ªéi+1ÂºÄÂßãÔºåËøõË°åÂçáÂ∫èÈÅçÂéÜ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819class Solution &#123; public int longestPalindromeSubseq(String s) &#123; int len = s.length(); int[][] dp = new int[len][len]; for(int i=len-1;i&gt;=0;i--)&#123; dp[i][i] = 1; char c1 = s.charAt(i); for(int j=i+1;j&lt;len;j++)&#123; char c2 = s.charAt(j); if(c1==c2)&#123; dp[i][j] = dp[i+1][j-1]+2; &#125;else&#123; dp[i][j] = Math.max(dp[i+1][j],dp[i][j-1]); &#125; &#125; &#125; return dp[0][len-1]; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Âä®ÊÄÅËßÑÂàí„ÄÅ‰∫åÂàÜÊü•Êâæ","slug":"Âä®ÊÄÅËßÑÂàí„ÄÅ‰∫åÂàÜÊü•Êâæ","permalink":"http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%81%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"}]},{"title":"leetcode-ÈÄÜÂ∫èÂØπÁõ∏ÂÖ≥","slug":"leetcode-ÈÄÜÂ∫èÂØπÁõ∏ÂÖ≥","date":"2021-06-24T16:00:00.000Z","updated":"2021-07-25T11:28:23.251Z","comments":true,"path":"2021/06/25/leetcode-ÈÄÜÂ∫èÂØπÁõ∏ÂÖ≥/","link":"","permalink":"http://example.com/2021/06/25/leetcode-%E9%80%86%E5%BA%8F%E5%AF%B9%E7%9B%B8%E5%85%B3/","excerpt":"","text":"ÂâëÊåá Offer 51. Êï∞ÁªÑ‰∏≠ÁöÑÈÄÜÂ∫èÂØπÂú®Êï∞ÁªÑ‰∏≠ÁöÑ‰∏§‰∏™Êï∞Â≠óÔºåÂ¶ÇÊûúÂâçÈù¢‰∏Ä‰∏™Êï∞Â≠óÂ§ß‰∫éÂêéÈù¢ÁöÑÊï∞Â≠óÔºåÂàôËøô‰∏§‰∏™Êï∞Â≠óÁªÑÊàê‰∏Ä‰∏™ÈÄÜÂ∫èÂØπ„ÄÇËæìÂÖ•‰∏Ä‰∏™Êï∞ÁªÑÔºåÊ±ÇÂá∫Ëøô‰∏™Êï∞ÁªÑ‰∏≠ÁöÑÈÄÜÂ∫èÂØπÁöÑÊÄªÊï∞„ÄÇ Áü•ËØÜÁÇπÔºöÂà©Áî®ÂΩíÂπ∂ÊéíÂ∫èÔºàËøô‰∏™È¢òÁõÆÁÆóÊòØ‰∏™Êñ∞ÁöÑÁü•ËØÜÁÇπÔºåÂèØ‰ª•ÂÖ•Â∫ìÔºâ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970class Solution &#123; int resCount = 0; public int reversePairs(int[] nums) &#123; int len = nums.length; if(len&lt;2)&#123; return 0; &#125; int[] tmpNums = new int[len]; merge(nums, tmpNums, 0, len - 1); return resCount; &#125; /** * @param nums ÂæÖÊéíÊï∞ÁªÑ * @param tmpNums ËæÖÂä©Êï∞ÁªÑ * @param left ÂæÖÊéíÊï∞ÁªÑÂ∑¶ËæπÁïå * @param right ÂæÖÊéíÊï∞ÁªÑÂè≥ËæπÁïå * Â∞ÜÂæÖÊéíÊï∞ÁªÑÂàÜ‰∏∫‰∏§ÊÆµÔºåÂàÜÂà´Ë∞ÉÁî®ÊéíÂ∫èÂáΩÊï∞ÔºåÂπ∂Â∞Ü‰∏§ÊÆµÊï∞ÁªÑÊéíÂ∫èÊàê‰∏∫‰∏Ä‰∏™ */ private void merge(int[] nums, int[] tmpNums, int left, int right) &#123; //ÂæÖÊéíÊï∞ÁªÑ‰ªÖ‰∏Ä‰∏™Êï∞Â≠óÊó∂ÔºåÁõ¥Êé•ËøîÂõû if (left &gt;= right) &#123; return; &#125; //Â∞ÜÂæÖÊéíÊï∞ÁªÑÂàÜ‰∏∫‰∏§ÊÆµ int mid = left + (right - left) / 2; merge(nums, tmpNums, left, mid); merge(nums, tmpNums, mid + 1, right); if (nums[mid] &lt;= nums[mid + 1]) &#123; return; &#125; sort(nums, tmpNums, left, mid,right); &#125; /** * Â∞ÜÊï∞ÁªÑnumsÂú®‰∏ãÊ†áleftÂíårightÂÜÖËøõË°åÊúâÂ∫èÊéíÂàó * * @param nums ÂæÖÊéíÊï∞ÁªÑ * @param tmpNums ËæÖÂä©Êï∞ÁªÑ * @param left ÂæÖÊéíÂ∑¶ËæπÁïå * @param right ÂæÖÊéíÂè≥ËæπÁïå */ private void sort(int[] nums, int[] tmpNums, int left, int mid, int right) &#123; //Â∞ÜÂæÖÊéíÂÖÉÁ¥†ÊîæÂÖ•ËæÖÂä©Êï∞ÁªÑ‰∏≠ for (int i = left; i &lt;= right; i++) &#123; tmpNums[i] = nums[i]; &#125; //Ê≠§Â§ÑrightIndexÂøÖÈ°ª‰ªémid+1ÂºÄÂßãÔºåÂê¶Âàô‰ºöÂá∫Èîô int index = left, leftIndex = left, rightIndex = mid+1; while (index &lt;= right) &#123; if (leftIndex &gt; mid) &#123;//Ê≠§Êó∂Â∑¶‰æßÂå∫Èó¥ÂÖÉÁ¥†Â∑≤ÁªèÂÖ®ÈÉ®ÊéíÂ∫èÂÆåÊØï nums[index] = tmpNums[rightIndex]; rightIndex++; &#125; else if (rightIndex &gt; right) &#123;//Ê≠§Êó∂Âè≥‰æßÂå∫Èó¥ÂÖÉÁ¥†ÊéíÂ∫èÂÆåÊØï nums[index] = tmpNums[leftIndex]; leftIndex++; &#125; else if (tmpNums[leftIndex] &lt;= tmpNums[rightIndex]) &#123;//Â¶ÇÊûúÂ∑¶‰æßÂÖÉÁ¥†ËæÉÂ∞èÔºåÂ∞±ÊääÂ∑¶‰æßÂÖÉÁ¥†ÊîæÂÖ•numsÊï∞ÁªÑ‰∏≠ nums[index] = tmpNums[leftIndex]; leftIndex++; &#125; else &#123;//Â¶ÇÊûúÂè≥‰æßÂÖÉÁ¥†ËæÉÂ∞èÔºåÂ∞±Â∞ÜÂè≥‰æßÂÖÉÁ¥†ÊîæÂÖ•Êï∞ÁªÑ‰∏≠ nums[index] = tmpNums[rightIndex]; rightIndex++; //Ê≠§Êó∂ÂèòÂä®ÈÄÜÂ∫èÂØπ‰∏™Êï∞ resCount+=mid-leftIndex+1; &#125; index++; &#125; &#125;&#125; 315. ËÆ°ÁÆóÂè≥‰æßÂ∞è‰∫éÂΩìÂâçÂÖÉÁ¥†ÁöÑ‰∏™Êï∞ÁªôÂÆö‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑ numsÔºåÊåâË¶ÅÊ±ÇËøîÂõû‰∏Ä‰∏™Êñ∞Êï∞ÁªÑ counts„ÄÇÊï∞ÁªÑ counts ÊúâËØ•ÊÄßË¥®Ôºö counts[i] ÁöÑÂÄºÊòØ nums[i] Âè≥‰æßÂ∞è‰∫é nums[i] ÁöÑÂÖÉÁ¥†ÁöÑÊï∞Èáè„ÄÇ Á§∫‰æãÔºö ËæìÂÖ•Ôºönums = [5,2,6,1] ËæìÂá∫Ôºö[2,1,1,0] Ëß£ÈáäÔºö 5 ÁöÑÂè≥‰æßÊúâ 2 ‰∏™Êõ¥Â∞èÁöÑÂÖÉÁ¥† (2 Âíå 1) 2 ÁöÑÂè≥‰æß‰ªÖÊúâ 1 ‰∏™Êõ¥Â∞èÁöÑÂÖÉÁ¥† (1) 6 ÁöÑÂè≥‰æßÊúâ 1 ‰∏™Êõ¥Â∞èÁöÑÂÖÉÁ¥† (1) 1 ÁöÑÂè≥‰æßÊúâ 0 ‰∏™Êõ¥Â∞èÁöÑÂÖÉÁ¥† Áü•ËØÜÁÇπÔºöÂΩíÂπ∂ÊéíÂ∫èÂàÜÊûêÔºöËøô‰∏™È¢òÁõÆÂíåÈÄÜÂ∫èÂü∫Êú¨‰∏ÄËá¥ÔºåÂèØ‰ª•Âà©Áî®ÂΩíÂπ∂ÊéíÂ∫èÊ£ÄÁ¥¢Âè≥‰æßÂ∞è‰∫éÂΩìÂâçÂÖÉÁ¥†ÁöÑ‰∏™Êï∞ÔºõÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºåÂØπÂ±ÄÈÉ®Âå∫Èó¥ËøõË°åÊéíÂ∫è‰πãÂêéÔºåÂÖÉÁ¥†‰ΩçÁΩÆÂèëÁîüÂèòÂåñÔºå‰ºöÂá∫Áé∞‰∏äÊ¨°ÁöÑÁ¥¢ÂºïÂíåÂΩìÂâçÁöÑÁ¥¢ÂºïÂØπÂ∫îÁöÑ‰∏çÊòØÂêå‰∏Ä‰∏™ÂÖÉÁ¥†ÁöÑÊÉÖÂÜµÔºåÊïÖÈúÄË¶ÅÂª∫Á´ãÁ¥¢ÂºïÊï∞ÁªÑÔºåÊï¥‰∏™ÊéíÂ∫èÂå∫Èó¥ÂØπÁ¥¢ÂºïÊï∞ÁªÑ‰∏≠Á¥¢ÂºïÁöÑ‰ΩçÁΩÆËøõË°åÊéíÂ∫èÔºåÂç≥Ê†πÊçÆÂÖÉÁ¥†Êú¨Ë∫´Â§ßÂ∞èÂÆûÁé∞ÂÖ∂Á¥¢ÂºïÊúâÂ∫èÔºõËøòÊúâÊ≥®ÊÑè‰∏ÄÁÇπÔºåÂú®ËÆ°ÁÆóÂè≥‰æßÂ∞è‰∫éÂΩìÂâçÂÖÉÁ¥†‰∏™Êï∞Êó∂Ôºå‰∏∫ÈÅøÂÖçÈáçÂ§çËÆ°ÁÆóÔºåÈúÄÁ≠âÂæÖÂè≥‰æßÂå∫Èó¥ÂÖÉÁ¥†Â§ß‰∫éÂ∑¶‰æßÂå∫Èó¥ÂÖÉÁ¥†Êó∂ÔºåÂ∞ÜÂè≥‰æßÂå∫Èó¥ÂÖÉÁ¥†ÂâçÈù¢ÁöÑÂÖÉÁ¥†ËÆ°ÁÆó‰∏™Êï∞Âπ∂Âä†ÂÖ•Ëá≥Â∑¶‰æßÂå∫Èó¥ÂÖÉÁ¥†ÂØπÂ∫îÁöÑÁªìÊûú‰∏≠„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ÂΩíÂπ∂ÊéíÂ∫è","slug":"ÂΩíÂπ∂ÊéíÂ∫è","permalink":"http://example.com/tags/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/"}]},{"title":"leetcode-‰∫åÂèâÊ†ëÁöÑÈÅçÂéÜ","slug":"leetcode-‰∫åÂèâÊ†ëÁöÑÈÅçÂéÜ","date":"2021-06-23T16:00:00.000Z","updated":"2021-07-31T02:41:41.769Z","comments":true,"path":"2021/06/24/leetcode-‰∫åÂèâÊ†ëÁöÑÈÅçÂéÜ/","link":"","permalink":"http://example.com/2021/06/24/leetcode-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86/","excerpt":"","text":"102. ‰∫åÂèâÊ†ëÁöÑÂ±ÇÂ∫èÈÅçÂéÜÁªô‰Ω†‰∏Ä‰∏™‰∫åÂèâÊ†ëÔºåËØ∑‰Ω†ËøîÂõûÂÖ∂Êåâ Â±ÇÂ∫èÈÅçÂéÜ ÂæóÂà∞ÁöÑËäÇÁÇπÂÄº„ÄÇ ÔºàÂç≥ÈÄêÂ±ÇÂú∞Ôºå‰ªéÂ∑¶Âà∞Âè≥ËÆøÈóÆÊâÄÊúâËäÇÁÇπÔºâ„ÄÇ Áü•ËØÜÁÇπÔºöBFS ÂàÜÊûêÔºöÊ≤°‰ªÄ‰πàÂ•ΩÂàÜÊûêÁöÑÔºåÂ∞±ÊòØÂ±ÇÂ∫èÈÅçÂéÜÔºåÈúÄË¶ÅÁî®Âà∞Âá†‰∏™ÈõÜÂêàÔºåÂæóÂ§öÁÜüÊÇâÔºöLinkedListÔºåArrayDequeÔºåArrayListÔºåÊàëÂõûÂ§¥ÂÅö‰∏™ÂÖ≥‰∫éÈõÜÂêàÁöÑÊÄªÁªìÔºåË¶ÅÂ•ΩÂ•ΩÊéåÊè°„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728293031323334353637383940414243/** * Definition for a binary tree node. * public class TreeNode &#123; * int val; * TreeNode left; * TreeNode right; * TreeNode() &#123;&#125; * TreeNode(int val) &#123; this.val = val; &#125; * TreeNode(int val, TreeNode left, TreeNode right) &#123; * this.val = val; * this.left = left; * this.right = right; * &#125; * &#125; */class Solution &#123; public List&lt;List&lt;Integer&gt;&gt; levelOrder(TreeNode root) &#123; List&lt;List&lt;Integer&gt;&gt; resList = new ArrayList&lt;&gt;(); Deque&lt;TreeNode&gt; stack = new ArrayDeque&lt;&gt;(); if (root!=null)&#123; stack.offerLast(root); &#125; while(!stack.isEmpty())&#123; int size = stack.size(); ArrayList&lt;Integer&gt; curList = new ArrayList&lt;&gt;(); while (size&gt;0) &#123; TreeNode treeNode = stack.removeFirst(); curList.add(treeNode.val); if(treeNode.left!=null)&#123; stack.offerLast(treeNode.left); &#125; if(treeNode.right!=null)&#123; stack.offerLast(treeNode.right); &#125; size--; &#125; resList.add(curList); &#125; return resList; &#125;&#125; 103. ‰∫åÂèâÊ†ëÁöÑÈîØÈΩøÂΩ¢Â±ÇÂ∫èÈÅçÂéÜÁü•ËØÜÁÇπÔºöBFSÂàÜÊûêÔºöÂêå‰∏ä ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223242526272829303132333435363738394041424344454647/** * Definition for a binary tree node. * public class TreeNode &#123; * int val; * TreeNode left; * TreeNode right; * TreeNode() &#123;&#125; * TreeNode(int val) &#123; this.val = val; &#125; * TreeNode(int val, TreeNode left, TreeNode right) &#123; * this.val = val; * this.left = left; * this.right = right; * &#125; * &#125; */class Solution &#123; public List&lt;List&lt;Integer&gt;&gt; zigzagLevelOrder(TreeNode root) &#123; List&lt;List&lt;Integer&gt;&gt; resList = new LinkedList&lt;&gt;(); Deque&lt;TreeNode&gt; stack = new ArrayDeque&lt;&gt;(); if (root != null) &#123; stack.add(root); &#125; boolean mark = false; while (!stack.isEmpty()) &#123; Deque&lt;Integer&gt; curList = new LinkedList&lt;&gt;(); int size = stack.size(); while (size &gt; 0) &#123; TreeNode treeNode = stack.removeFirst(); if(mark)&#123; curList.offerFirst(treeNode.val); &#125;else&#123; curList.offerLast(treeNode.val); &#125; if (treeNode.left != null) &#123; stack.offerLast(treeNode.left); &#125; if (treeNode.right != null) &#123; stack.offerLast(treeNode.right); &#125; size--; &#125; mark=!mark; resList.add(new LinkedList&lt;&gt;(curList)); &#125; return resList; &#125;&#125; 1104. ‰∫åÂèâÊ†ëÂØªË∑ØÂú®‰∏ÄÊ£µÊó†ÈôêÁöÑ‰∫åÂèâÊ†ë‰∏äÔºåÊØè‰∏™ËäÇÁÇπÈÉΩÊúâ‰∏§‰∏™Â≠êËäÇÁÇπÔºåÊ†ë‰∏≠ÁöÑËäÇÁÇπ ÈÄêË°å ‰æùÊ¨°Êåâ ‚Äú‰πã‚Äù Â≠óÂΩ¢ËøõË°åÊ†áËÆ∞„ÄÇ Â¶Ç‰∏ãÂõæÊâÄÁ§∫ÔºåÂú®Â•áÊï∞Ë°åÔºàÂç≥ÔºåÁ¨¨‰∏ÄË°å„ÄÅÁ¨¨‰∏âË°å„ÄÅÁ¨¨‰∫îË°å‚Ä¶‚Ä¶Ôºâ‰∏≠ÔºåÊåâ‰ªéÂ∑¶Âà∞Âè≥ÁöÑÈ°∫Â∫èËøõË°åÊ†áËÆ∞Ôºõ ËÄåÂÅ∂Êï∞Ë°åÔºàÂç≥ÔºåÁ¨¨‰∫åË°å„ÄÅÁ¨¨ÂõõË°å„ÄÅÁ¨¨ÂÖ≠Ë°å‚Ä¶‚Ä¶Ôºâ‰∏≠ÔºåÊåâ‰ªéÂè≥Âà∞Â∑¶ÁöÑÈ°∫Â∫èËøõË°åÊ†áËÆ∞„ÄÇ Áªô‰Ω†Ê†ë‰∏äÊüê‰∏Ä‰∏™ËäÇÁÇπÁöÑÊ†áÂè∑ labelÔºåËØ∑‰Ω†ËøîÂõû‰ªéÊ†πËäÇÁÇπÂà∞ËØ•Ê†áÂè∑‰∏∫ label ËäÇÁÇπÁöÑË∑ØÂæÑÔºåËØ•Ë∑ØÂæÑÊòØÁî±ÈÄîÁªèÁöÑËäÇÁÇπÊ†áÂè∑ÊâÄÁªÑÊàêÁöÑ„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºölabel = 14 ËæìÂá∫Ôºö[1,3,4,14] Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºölabel = 26 ËæìÂá∫Ôºö[1,2,6,10,26] ÊèêÁ§∫Ôºö 1 &lt;= label &lt;= 10^6 Áü•ËØÜÁÇπÔºö‰∫åÂèâÊ†ëÂàÜÊûêÔºöËøô‰∏™ÂíåÊôÆÈÄö‰∫åÂèâÊ†ëÁöÑÂå∫Âà´Âú®‰∫éÂÅ∂Êï∞Ë°åËøõË°å‰∫ÜÈïúÂÉèÂºèËΩ¨Êç¢ÔºåËÄÉËôëÂà∞ÂØπÁß∞ÁöÑÁâπÁÇπÔºö‰ªªÊÑè‰∏§‰∏™ÂØπÁß∞‰ΩçÁΩÆ‰∏äÁöÑÊï∞Â≠óÂíåÁõ∏Á≠â„ÄÇÊïÖÊ†πÊçÆËøô‰∏ÄÁâπÁÇπÂØπÊØèË°åÊï∞Â≠óËøõË°åÊü•ÊâæÔºåÂ¶ÇÊûúÊòØÂÅ∂Êï∞Ë°åÔºåÂàôÈúÄËøõË°åÂèçËΩ¨„ÄÇÈ¢òËß£ËÆ≤ÁöÑÂæàÁªÜËá¥„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223242526272829class Solution &#123; public List&lt;Integer&gt; pathInZigZagTree(int label) &#123; int row = 1,rowStart = 1; //Á°ÆÂÆölabelÊâÄÂú®Ë°åÊï∞ while(rowStart*2&lt;=label)&#123; row++; rowStart*=2; &#125; if(row%2==0)&#123; label = getReverse(label,row); &#125; ArrayList&lt;Integer&gt; res = new ArrayList&lt;&gt;(); while (row&gt;0)&#123; if(row%2==0)&#123; res.add(getReverse(label, row)); &#125;else&#123; res.add(label); &#125; --row; label&gt;&gt;=1; &#125; Collections.reverse(res); return res; &#125; private int getReverse(int label, int row) &#123; return (1&lt;&lt;row-1)+(1&lt;&lt;row)-1-label; &#125;&#125; 987. ‰∫åÂèâÊ†ëÁöÑÂûÇÂ∫èÈÅçÂéÜÁªô‰Ω†‰∫åÂèâÊ†ëÁöÑÊ†πÁªìÁÇπ root ÔºåËØ∑‰Ω†ËÆæËÆ°ÁÆóÊ≥ïËÆ°ÁÆó‰∫åÂèâÊ†ëÁöÑ ÂûÇÂ∫èÈÅçÂéÜ Â∫èÂàó„ÄÇ ÂØπ‰Ωç‰∫é (row, col) ÁöÑÊØè‰∏™ÁªìÁÇπËÄåË®ÄÔºåÂÖ∂Â∑¶Âè≥Â≠êÁªìÁÇπÂàÜÂà´‰Ωç‰∫é (row + 1, col - 1) Âíå (row + 1, col + 1) „ÄÇÊ†ëÁöÑÊ†πÁªìÁÇπ‰Ωç‰∫é (0, 0) „ÄÇ ‰∫åÂèâÊ†ëÁöÑ ÂûÇÂ∫èÈÅçÂéÜ ‰ªéÊúÄÂ∑¶ËæπÁöÑÂàóÂºÄÂßãÁõ¥Âà∞ÊúÄÂè≥ËæπÁöÑÂàóÁªìÊùüÔºåÊåâÂàóÁ¥¢ÂºïÊØè‰∏ÄÂàó‰∏äÁöÑÊâÄÊúâÁªìÁÇπÔºåÂΩ¢Êàê‰∏Ä‰∏™ÊåâÂá∫Áé∞‰ΩçÁΩÆ‰ªé‰∏äÂà∞‰∏ãÊéíÂ∫èÁöÑÊúâÂ∫èÂàóË°®„ÄÇÂ¶ÇÊûúÂêåË°åÂêåÂàó‰∏äÊúâÂ§ö‰∏™ÁªìÁÇπÔºåÂàôÊåâÁªìÁÇπÁöÑÂÄº‰ªéÂ∞èÂà∞Â§ßËøõË°åÊéíÂ∫è„ÄÇ ËøîÂõû‰∫åÂèâÊ†ëÁöÑ ÂûÇÂ∫èÈÅçÂéÜ Â∫èÂàó„ÄÇ Áü•ËØÜÁÇπÔºö‰∫åÂèâÊ†ëÈÅçÂéÜÂàÜÊûêÔºöÊó¢ÁÑ∂ÊòØÊ†πÊçÆËäÇÁÇπÁöÑÂàóÂùêÊ†áËøõË°åÊéíÂ∫èÔºåÈ¶ñÂÖàÂØπ‰∫åÂèâÊ†ëËøõË°åÊ∑±Â∫¶‰ºòÂÖàÈÅçÂéÜÔºåËÆ∞ÂΩïÊâÄÊúâËäÇÁÇπÁöÑÊ®™Á∫µÂùêÊ†áÔºåÁÑ∂ÂêéÊ†πÊçÆÁ∫µÂùêÊ†áËøõË°åÊéíÂ∫èÔºå‰∏∫‰∫ÜÊñπ‰æøÔºåÂÜçÊ†πÊçÆÊ®™ÂùêÊ†áËøõË°åÁ¨¨‰∫å‰ºòÂÖàÊéíÂ∫èÔºåÊúÄÂêéÊ†πÊçÆËäÇÁÇπÊï∞ÂÄºÂ§ßÂ∞èËøõË°åÁ¨¨‰∏â‰ºòÂÖàÊéíÂ∫è„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455package LC987_vertical_order_traversal_of_a_binary_tree;import mytreenode.TreeNode;import java.util.*;public class VerticalOrderTraversalOfABinaryTree &#123; public List&lt;List&lt;Integer&gt;&gt; verticalTraversal(TreeNode root) &#123; List&lt;int[]&gt; nodes = new ArrayList&lt;&gt;(); dfs(root,0,0,nodes); Collections.sort(nodes, new Comparator&lt;int[]&gt;() &#123; @Override public int compare(int[] o1, int[] o2) &#123; if(o1[0]!=o2[0])&#123; return o1[0]-o2[0]; &#125;else if(o1[1]!=o2[1])&#123; return o1[1]-o2[1]; &#125;else&#123; return o1[2]-o2[2]; &#125; &#125; &#125;); List&lt;List&lt;Integer&gt;&gt; ans = new ArrayList&lt;&gt;(); int size = 0; int lastCol = Integer.MIN_VALUE; for(int[] node:nodes)&#123; int col = node[0],row = node[1],value = node[2]; //Â¶ÇÊûú‰∏çÊòØÂêå‰∏ÄÂàó if(col!=lastCol)&#123; lastCol = col; ans.add(new ArrayList&lt;Integer&gt;()); size++; &#125; ans.get(size-1).add(value); &#125; return ans; &#125; /** * ËøõË°åÊ∑±Â∫¶‰ºòÂÖàÈÅçÂéÜ * @param root ÂΩìÂâçËäÇÁÇπ * @param row ÂΩìÂâçË°åÊï∞ * @param col ÂΩìÂâçÂàóÊï∞ * @param nodes Â≠òÊîæÊï∞ÁªÑ */ private void dfs(TreeNode root, int row, int col, List&lt;int[]&gt; nodes) &#123; if(root==null)&#123; return; &#125; nodes.add(new int[]&#123;col,row,root.val&#125;); dfs(root.left,row+1, col-1, nodes); dfs(root.right,row+1,col+1,nodes); &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"BFS","slug":"BFS","permalink":"http://example.com/tags/BFS/"}]},{"title":"leetcode-Êé•Èõ®Ê∞¥","slug":"leetcode-Êé•Èõ®Ê∞¥","date":"2021-06-22T16:00:00.000Z","updated":"2021-07-23T08:33:22.916Z","comments":true,"path":"2021/06/23/leetcode-Êé•Èõ®Ê∞¥/","link":"","permalink":"http://example.com/2021/06/23/leetcode-%E6%8E%A5%E9%9B%A8%E6%B0%B4/","excerpt":"","text":"42. Êé•Èõ®Ê∞¥ÁªôÂÆö n ‰∏™ÈùûË¥üÊï¥Êï∞Ë°®Á§∫ÊØè‰∏™ÂÆΩÂ∫¶‰∏∫ 1 ÁöÑÊü±Â≠êÁöÑÈ´òÂ∫¶ÂõæÔºåËÆ°ÁÆóÊåâÊ≠§ÊéíÂàóÁöÑÊü±Â≠êÔºå‰∏ãÈõ®‰πãÂêéËÉΩÊé•Â§öÂ∞ëÈõ®Ê∞¥„ÄÇ Áü•ËØÜÁÇπÔºöÂèåÊåáÈíà ÂàÜÊûêÔºöÊ†πÊçÆÊú®Ê°∂ÁêÜËÆ∫ÔºåÊØè‰∏™‰ΩçÁΩÆËÉΩÂ≠òÊîæÁöÑÈõ®Ê∞¥Êï∞ÈáèÂèñÂÜ≥‰∫éËØ•ÁÇπÂ∑¶Âè≥‰∏§ËæπÁöÑÊúÄÈ´òÊü±Â≠ê‰∏≠‰ΩéÁöÑÈÇ£‰∏™ÔºåÂç≥ÊâæÂá∫ÂΩìÂâç‰ΩçÁΩÆMath.min(leftMax,rightMax),ÁÑ∂ÂêéËØ•ÂÄºÂáèÂéªÂΩìÂâçËäÇÁÇπÁöÑÈ´òÂ∫¶Âç≥‰∏∫ÂèØÂ≠òÊîæÈõ®Ê∞¥ÁöÑÊï∞Èáè„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728class Solution &#123; public int trap(int[] height) &#123; int maxLeft = 0,maxRight = 0,sum = 0; //leftÂíåright‰∏∫ËÆ°ÁÆóÂ≠òÊ∞¥ÈáèÁöÑ‰ΩçÁΩÆ int left = 1,right = height.length-2; while(left&lt;=right)&#123;//Ê≠§Â§ÑÂøÖÈ°ªÂèØ=ÔºåÊúÄÂêé‰∏Ä‰∏™Â≠òÊ∞¥‰ΩçÁΩÆ‰πüË¶ÅËÆ°ÁÆó if(height[left-1]&lt;height[right+1])&#123;//ËøôËØ¥ÊòéÂè≥‰æßÊØîËæÉÈ´òÔºåÂ≠òÊ∞¥ÂæóÊåâÁÖßÂ∑¶‰æßÊù•ËÆ°ÁÆó //Áúã‰∏ãÂ∑¶ËæπÊúÄÈ´òËÉΩÂà∞Âì™‰∏™‰ΩçÁΩÆ maxLeft = Math.max(height[left-1],maxLeft); //Âè™ÊúâÂΩìÂâçÊü±Â≠êÈ´òÂ∫¶Â∞è‰∫éÂ∑¶‰æßÊúÄÂ§ßÂÄºÊó∂ÊâçÂèØ‰ª•Â≠òÊ∞¥ if(height[left]&lt;maxLeft)&#123; sum+=maxLeft-height[left]; &#125; //Â¶ÇÊûúÂΩìÂâçËøô‰∏™Êü±Â≠êÊ≤°Ê≥ïÂ≠òÊ∞¥ÔºåÈÇ£Â∞±ËÄÉËôë‰∏ã‰∏Ä‰∏™ left++; //Âè≥‰æßÂêåÁêÜ &#125;else&#123; maxRight = Math.max(maxRight,height[right+1]); if(maxRight&gt;height[right])&#123; sum+=maxRight-height[right]; &#125; right--; &#125; &#125; return sum; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ÂèåÊåáÈíà","slug":"ÂèåÊåáÈíà","permalink":"http://example.com/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"}]},{"title":"leetcode-N‰∏™Êï∞‰πãÂíå","slug":"leetcode-N‰∏™Êï∞‰πãÂíå","date":"2021-06-21T16:00:00.000Z","updated":"2021-08-04T02:20:29.229Z","comments":true,"path":"2021/06/22/leetcode-N‰∏™Êï∞‰πãÂíå/","link":"","permalink":"http://example.com/2021/06/22/leetcode-N%E4%B8%AA%E6%95%B0%E4%B9%8B%E5%92%8C/","excerpt":"","text":"2. ‰∏§Êï∞Áõ∏Âä†Áªô‰Ω†‰∏§‰∏™ÈùûÁ©∫ÁöÑÈìæË°®ÔºåË°®Á§∫‰∏§‰∏™ÈùûË¥üÁöÑÊï¥Êï∞„ÄÇÂÆÉ‰ª¨ÊØè‰ΩçÊï∞Â≠óÈÉΩÊòØÊåâÁÖßÈÄÜÂ∫èÁöÑÊñπÂºèÂ≠òÂÇ®ÁöÑÔºåÂπ∂‰∏îÊØè‰∏™ËäÇÁÇπÂè™ËÉΩÂ≠òÂÇ®‰∏Ä‰ΩçÊï∞Â≠ó„ÄÇËØ∑‰Ω†Â∞Ü‰∏§‰∏™Êï∞Áõ∏Âä†ÔºåÂπ∂‰ª•Áõ∏ÂêåÂΩ¢ÂºèËøîÂõû‰∏Ä‰∏™Ë°®Á§∫ÂíåÁöÑÈìæË°®„ÄÇ‰Ω†ÂèØ‰ª•ÂÅáËÆæÈô§‰∫ÜÊï∞Â≠ó 0 ‰πãÂ§ñÔºåËøô‰∏§‰∏™Êï∞ÈÉΩ‰∏ç‰ºö‰ª• 0 ÂºÄÂ§¥„ÄÇ Áü•ËØÜÁÇπÔºöÈìæË°® ÂàÜÊûêÔºöËøô‰∏™È¢òÁõÆ‰∏çÈöæÔºåÈáçÁÇπÂú®‰∫éÊÉ≥Ê∏ÖÊ•öÂç≥ÂèØÔºåËøòÊúâÂ§ÑÁêÜÂ•ΩÁªÜËäÇ„ÄÇ ‰ª£Á†ÅÂÖ•‰∏ãÔºö123456789101112131415161718192021222324252627282930313233343536/** * Definition for singly-linked list. * public class ListNode &#123; * int val; * ListNode next; * ListNode() &#123;&#125; * ListNode(int val) &#123; this.val = val; &#125; * ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125; * &#125; */class Solution &#123; public ListNode addTwoNumbers(ListNode l1, ListNode l2) &#123; ListNode resHead = new ListNode(-1); ListNode curNode = resHead; int plus = 0; while(l1!=null||l2!=null)&#123; int num1 = l1==null?0:l1.val; int num2 = l2==null?0:l2.val; int sum = num1+num2+plus; plus = sum/10; int curNum = sum%10; curNode.next = new ListNode(curNum); curNode = curNode.next; if(l1!=null)&#123; l1 = l1.next; &#125; if(l2!=null)&#123; l2 = l2.next; &#125; &#125; if(plus!=0)&#123; curNode.next = new ListNode(plus); &#125; return resHead.next; &#125;&#125; 15. ‰∏âÊï∞‰πãÂíåÁü•ËØÜÁÇπÔºöÂèåÊåáÈíàÁªô‰Ω†‰∏Ä‰∏™ÂåÖÂê´ n ‰∏™Êï¥Êï∞ÁöÑÊï∞ÁªÑ numsÔºåÂà§Êñ≠ nums ‰∏≠ÊòØÂê¶Â≠òÂú®‰∏â‰∏™ÂÖÉÁ¥† aÔºåbÔºåc Ôºå‰ΩøÂæó a + b + c = 0 ÔºüËØ∑‰Ω†ÊâæÂá∫ÊâÄÊúâÂíå‰∏∫ 0 ‰∏î‰∏çÈáçÂ§çÁöÑ‰∏âÂÖÉÁªÑ„ÄÇ Ê≥®ÊÑèÔºöÁ≠îÊ°à‰∏≠‰∏çÂèØ‰ª•ÂåÖÂê´ÈáçÂ§çÁöÑ‰∏âÂÖÉÁªÑ„ÄÇ ÂàÜÊûêÔºö‰∏â‰∏™Êï∞‰πãÂíå‰∏∫Èõ∂ÔºåËÇØÂÆöÂæóÊúâË¥üÊï∞ÔºåÊàñËÄÖÂÖ®ÊòØ0ÔºåÂÖàÂØπÊï∞ÁªÑËøõË°åÊéíÂ∫èÔºåÁÑ∂ÂêéÂºÄÂßãÈÅçÂéÜÔºõ Â¶ÇÊûúnums[i]&gt;0ÔºåÂàôËØ¥ÊòéÂêéÈù¢ÁöÑÊï∞Â≠óÂ∑≤ÁªèÂÖ®ÈÉ®Â§ß‰∫é0Ôºå‰∏çÂèØËÉΩÂÜçÊúâÊª°Ë∂≥Êù°‰ª∂ÁöÑÊï∞ÁªÑÔºåÁõ¥Êé•ËøîÂõûÁªìÊûúÔºõ Â¶ÇÊûúnums[i]+nums[left]+nums[right]=0ÔºåËøõË°åËÆ∞ÂΩïÔºåÂπ∂Â∞ÜleftÂíårightÂàÜÂà´ËøõË°åÂè≥ÁßªÂíåÂ∑¶ÁßªÔºåÁõ¥Âà∞ÊâæÂà∞‰∏çÈáçÂ§çÁöÑÂÖÉÁ¥†‰∏∫Ê≠¢Ôºõ Â¶ÇÊûúÂíåÂ∞è‰∫é0ÔºåËÆ©Â∑¶ÊåáÈíàÂè≥ÁßªÔºõÂíåÂ§ß‰∫é0ÔºåÂ∞±ËÆ©Âè≥ÊåáÈíàÂ∑¶Áßª„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223242526272829303132333435363738class Solution &#123; public List&lt;List&lt;Integer&gt;&gt; threeSum(int[] nums) &#123; Arrays.sort(nums); List&lt;List&lt;Integer&gt;&gt; resList = new ArrayList&lt;&gt;(); for (int i = 0; i &lt; nums.length; i++) &#123; if(nums[i]&gt;0)&#123; return resList; &#125; if(i&gt;0&amp;&amp;nums[i]==nums[i-1])&#123; continue; &#125; int left = i+1,right = nums.length-1; while(left&lt;right)&#123; int curSum = nums[i]+nums[left]+nums[right]; if(curSum==0)&#123; ArrayList&lt;Integer&gt; list = new ArrayList&lt;&gt;(); list.add(nums[i]); list.add(nums[left]); list.add(nums[right]); resList.add(list); while (left&lt;right&amp;&amp;nums[left]==nums[left+1])&#123; left++; &#125; while(left&lt;right&amp;&amp;nums[right]==nums[right-1])&#123; --right; &#125; ++left; --right; &#125;else if(curSum&lt;0)&#123; left++; &#125;else&#123; right--; &#125; &#125; &#125; return resList; &#125;&#125; 611. ÊúâÊïà‰∏âËßíÂΩ¢ÁöÑ‰∏™Êï∞ÁªôÂÆö‰∏Ä‰∏™ÂåÖÂê´ÈùûË¥üÊï¥Êï∞ÁöÑÊï∞ÁªÑÔºå‰Ω†ÁöÑ‰ªªÂä°ÊòØÁªüËÆ°ÂÖ∂‰∏≠ÂèØ‰ª•ÁªÑÊàê‰∏âËßíÂΩ¢‰∏âÊù°ËæπÁöÑ‰∏âÂÖÉÁªÑ‰∏™Êï∞„ÄÇ Á§∫‰æã 1: ËæìÂÖ•: [2,2,3,4] ËæìÂá∫: 3 Ëß£Èáä: ÊúâÊïàÁöÑÁªÑÂêàÊòØ: 2,3,4 (‰ΩøÁî®Á¨¨‰∏Ä‰∏™ 2) 2,3,4 (‰ΩøÁî®Á¨¨‰∫å‰∏™ 2) 2,2,3 Ê≥®ÊÑè: Êï∞ÁªÑÈïøÂ∫¶‰∏çË∂ÖËøá1000„ÄÇ Êï∞ÁªÑÈáåÊï¥Êï∞ÁöÑËåÉÂõ¥‰∏∫ [0, 1000]„ÄÇ Áü•ËØÜÁÇπÔºö‰∫åÂàÜÊ≥ï„ÄÅÂèåÊåáÈíàÂàÜÊûêÔºöÂú®‰∏Ä‰∏™Êï∞ÁªÑ‰∏≠ÊâæÂá∫‰∏â‰∏™Á¨¶ÂêàÊù°‰ª∂ÁöÑÊï∞Â≠óÔºå‰∏âÈáçÈÅçÂéÜËÇØÂÆöÊòØÂ∞ë‰∏ç‰∫ÜÔºõÂèØÊòØÂú®Êü•ÊâæÁöÑÊó∂ÂÄôÂèØÁî®‰∫åÂàÜÊ≥ïÊù•Èôç‰ΩéÂ§çÊùÇÂ∫¶„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425//ËøôÊòØ‰∫åÂàÜÊ≥ïclass Solution &#123; public int triangleNumber(int[] nums) &#123; int n = nums.length; Arrays.sort(nums); int ans = 0; for (int i = 0; i &lt; n; ++i) &#123; for (int j = i + 1; j &lt; n; ++j) &#123; int left = j + 1, right = n - 1, k = j; while (left &lt;= right) &#123; //Ê≠§Â§ÑÊ≥®ÊÑèÔºåÂÜô‰∏∫&lt;=ÔºåÂõ†‰∏∫ÂΩìleftËøô‰∏™Á¥¢ÂºïÊåáÂêëÁöÑÂÖÉÁ¥†‰πüÂèØËÉΩÊª°Ë∂≥Êù°‰ª∂ int mid = (left + right) / 2; if (nums[mid] &lt; nums[i] + nums[j]) &#123; k = mid; left = mid + 1; &#125; else &#123; right = mid - 1; &#125; &#125; ans += k - j; &#125; &#125; return ans; &#125;&#125; ‰ª•‰∏ãÊòØÂèåÊåáÈíà: 1234567891011121314151617class Solution &#123; public int triangleNumber(int[] nums) &#123; int n = nums.length; Arrays.sort(nums); int ans = 0; for (int i = 0; i &lt; n; ++i) &#123; int k = i+1; for (int j = i + 1; j &lt; n; ++j) &#123; while (k + 1 &lt; n &amp;&amp; nums[k + 1] &lt; nums[i] + nums[j]) &#123; ++k; &#125; ans += Math.max(k - j, 0); &#125; &#125; return ans; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ÈìæË°®„ÄÅÂèåÊåáÈíà„ÄÅ‰∫åÂàÜ","slug":"ÈìæË°®„ÄÅÂèåÊåáÈíà„ÄÅ‰∫åÂàÜ","permalink":"http://example.com/tags/%E9%93%BE%E8%A1%A8%E3%80%81%E5%8F%8C%E6%8C%87%E9%92%88%E3%80%81%E4%BA%8C%E5%88%86/"}]},{"title":"leetcode-ËÇ°Á•®ÈóÆÈ¢ò","slug":"leetcode-ËÇ°Á•®ÈóÆÈ¢ò","date":"2021-06-20T16:00:00.000Z","updated":"2021-07-30T02:45:02.386Z","comments":true,"path":"2021/06/21/leetcode-ËÇ°Á•®ÈóÆÈ¢ò/","link":"","permalink":"http://example.com/2021/06/21/leetcode-%E8%82%A1%E7%A5%A8%E9%97%AE%E9%A2%98/","excerpt":"","text":"121. ‰π∞ÂçñËÇ°Á•®ÁöÑÊúÄ‰Ω≥Êó∂Êú∫ÁªôÂÆö‰∏Ä‰∏™Êï∞ÁªÑ prices ÔºåÂÆÉÁöÑÁ¨¨ i ‰∏™ÂÖÉÁ¥† prices[i] Ë°®Á§∫‰∏ÄÊîØÁªôÂÆöËÇ°Á•®Á¨¨ i Â§©ÁöÑ‰ª∑Ê†º„ÄÇ‰Ω†Âè™ËÉΩÈÄâÊã© Êüê‰∏ÄÂ§© ‰π∞ÂÖ•ËøôÂè™ËÇ°Á•®ÔºåÂπ∂ÈÄâÊã©Âú® Êú™Êù•ÁöÑÊüê‰∏Ä‰∏™‰∏çÂêåÁöÑÊó•Â≠êÂçñÂá∫ËØ•ËÇ°Á•®„ÄÇËÆæËÆ°‰∏Ä‰∏™ÁÆóÊ≥ïÊù•ËÆ°ÁÆó‰Ω†ÊâÄËÉΩËé∑ÂèñÁöÑÊúÄÂ§ßÂà©Ê∂¶„ÄÇËøîÂõû‰Ω†ÂèØ‰ª•‰ªéËøôÁ¨î‰∫§Êòì‰∏≠Ëé∑ÂèñÁöÑÊúÄÂ§ßÂà©Ê∂¶„ÄÇÂ¶ÇÊûú‰Ω†‰∏çËÉΩËé∑Âèñ‰ªª‰ΩïÂà©Ê∂¶ÔºåËøîÂõû 0 „ÄÇ Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàíÂàÜÊûêÔºöÂÖ∂ÂÆûËøô‰∏™È¢òÁöÑÊú¨Ë¥®Â∞±ÊòØÊ±ÇÂá∫‰∏§ËÄÖ‰πãÂ∑ÆÔºåÂÖàÊâæÂà∞‰∏Ä‰∏™ÂÄºiÔºåÂè™Ë¶ÅÂêéÈù¢ÊúâÊØîiÂ§ßÁöÑÔºåÂ∞±ËÆ∞ÂΩï‰∏ãÂ∑ÆÂÄºÔºõ‰∏çÊñ≠Â∞ÜiÂæÄÂ∞èÂ§ÑÊõ¥Êñ∞Ôºå‰∏çÊñ≠ÊØîËæÉÂ∑ÆÂÄº„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415class Solution &#123; public int maxProfit(int[] prices) &#123; int len = prices.length; int min = Integer.MAX_VALUE,res=0; //Â∞Ümin‰∏çÊñ≠Êõ¥Êñ∞‰∏∫ËæÉÂ∞èÂÄºÔºåÂè™Ë¶ÅË∂ÖËøáminÔºå‰æøËÆ°ÁÆóÊòØÂê¶ÂèØÂèñÁöÑÊõ¥Â§ßÂà©Ê∂¶Âπ∂ËÆ∞ÂΩï for(int i=0;i&lt;len;i++)&#123; if(prices[i]&lt;min)&#123; min = prices[i]; &#125;else&#123; res = Math.max(res,prices[i]-min); &#125; &#125; return res; &#125;&#125; 122. ‰π∞ÂçñËÇ°Á•®ÁöÑÊúÄ‰Ω≥Êó∂Êú∫ IIÁªôÂÆö‰∏Ä‰∏™Êï∞ÁªÑÔºåÂÆÉÁöÑÁ¨¨ i ‰∏™ÂÖÉÁ¥†ÊòØ‰∏ÄÊîØÁªôÂÆöËÇ°Á•®Á¨¨ i Â§©ÁöÑ‰ª∑Ê†º„ÄÇËÆæËÆ°‰∏Ä‰∏™ÁÆóÊ≥ïÊù•ËÆ°ÁÆó‰Ω†ÊâÄËÉΩËé∑ÂèñÁöÑÊúÄÂ§ßÂà©Ê∂¶„ÄÇ‰Ω†ÂèØ‰ª•Â∞ΩÂèØËÉΩÂú∞ÂÆåÊàêÊõ¥Â§öÁöÑ‰∫§ÊòìÔºàÂ§öÊ¨°‰π∞Âçñ‰∏ÄÊîØËÇ°Á•®Ôºâ„ÄÇÊ≥®ÊÑèÔºö‰Ω†‰∏çËÉΩÂêåÊó∂ÂèÇ‰∏éÂ§öÁ¨î‰∫§ÊòìÔºà‰Ω†ÂøÖÈ°ªÂú®ÂÜçÊ¨°Ë¥≠‰π∞ÂâçÂá∫ÂîÆÊéâ‰πãÂâçÁöÑËÇ°Á•®Ôºâ„ÄÇ Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàíÂàÜÊûêÔºöÊÉ≥‰∏Ä‰∏ãÔºåÂ§öÁ¨î‰∫§Êòì‰∏îÂøÖÈ°ªÂçñÂá∫Âéª‰πãÂêéÂÜç‰π∞ËøõÔºå‰πüÂ∞±ÊòØËØ¥ÔºåÂΩìÂâçÁä∂ÊÄÅÂè™Êúâ‰∏§ÁßçÔºöÊåÅÊúâËÇ°Á•®„ÄÅÊú™ÊåÅÊúâËÇ°Á•®„ÄÇ ÊåÅÊúâËÇ°Á•®ÔºöË¶Å‰πàÂçñÂá∫ÂéªÔºåË¶Å‰πà‰ªÄ‰πàÈÉΩ‰∏çÂÅö Êú™ÊåÅÊúâÔºöË¶Å‰πà‰π∞ËøõÔºåË¶Å‰πà‰ªÄ‰πàÈÉΩ‰∏çÂÅö Âà∞ÊúÄÂêé‰∏ÄÂ§©ÁöÑÊó∂ÂÄôÔºåËÇØÂÆöÊòØ‰∏çÊåÅÊúâËÇ°Á•®Âà©Ê∂¶Êõ¥È´òÔºåÂÅö‰∏Ä‰∏™dpÊï∞ÁªÑÔºåÁî®0Âíå1ÂàÜÂà´Ë°®Á§∫Êú™ÊåÅÊúâÂíåÊåÅÊúâÔºåËØ¶ÊÉÖËßÅ‰ª£Á†Å„ÄÇ ‰∏ÄËà¨Êù•ËØ¥ÔºåÂØπ‰∫éÂä®ÊÄÅËßÑÂàíÈÉΩ‰ºöÊúâÁ©∫Èó¥ÊñπÈù¢ÁöÑ‰ºòÂåñ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ã Ôºö1234567891011121314151617181920212223242526272829303132package LC0122_best_time_to_buy_and_sell_stock_II;public class BestTimeToBuyAndSellStockII &#123; public int maxProfit(int[] prices) &#123; int len = prices.length; int[][] dp = new int[2][len]; //dpÂùá‰∏∫ÂΩìÂ§©‰∫§ÊòìÂÆåÂêéÁöÑÂà©Ê∂¶ //Âú®Á¨¨0Â§©Êú™ÊåÅÊúâËÇ°Á•®Âà©Ê∂¶ dp[0][0] = 0; //Âú®Á¨¨0Â§©ÊåÅÊúâËÇ°Á•®ÁöÑÂà©Ê∂¶ dp[1][0] = -prices[0]; for(int i=1;i&lt;len;i++)&#123; //Á¨¨iÂ§©Ê≤°ÊåÅÊúâËÇ°Á•®ÔºåË¶Å‰πàÊòØÂâç‰∏ÄÂ§©ÊúâÔºåÂçñ‰∫ÜÔºõË¶Å‰πàÊòØÊò®Â§©‰πüÊ≤° dp[0][i] = Math.max(dp[1][i-1]+prices[i],dp[0][i-1]); //Á¨¨iÂ§©ÊåÅÊúâËÇ°Á•®Ôºå‰ªäÂ§©Âàö‰π∞ÔºåÊàñËÄÖÊò®Â§©Â∞±ÊúâÔºåÊ≤°Âçñ dp[1][i] = Math.max(dp[1][i-1],dp[0][i-1]-prices[i]); &#125; return dp[0][len-1]; &#125; //ÂØπ‰∏äËø∞dp‰ª£Á†ÅËøõË°åÁ©∫Èó¥‰ºòÂåñ public int maxProfit(int[] prices)&#123; int len = prices.length; int hold = -prices[0],unhold = 0; for (int i = 0; i &lt; len; i++) &#123; int tmpHold = hold,tmpUnhold = unhold; hold = Math.max(tmpHold,tmpUnhold-prices[i]); unhold = Math.max(tmpUnhold,tmpHold+prices[i]); &#125; return unhold; &#125;&#125; 123. ‰π∞ÂçñËÇ°Á•®ÁöÑÊúÄ‰Ω≥Êó∂Êú∫ IIIÁªôÂÆö‰∏Ä‰∏™Êï∞ÁªÑÔºåÂÆÉÁöÑÁ¨¨ i ‰∏™ÂÖÉÁ¥†ÊòØ‰∏ÄÊîØÁªôÂÆöÁöÑËÇ°Á•®Âú®Á¨¨ i Â§©ÁöÑ‰ª∑Ê†º„ÄÇËÆæËÆ°‰∏Ä‰∏™ÁÆóÊ≥ïÊù•ËÆ°ÁÆó‰Ω†ÊâÄËÉΩËé∑ÂèñÁöÑÊúÄÂ§ßÂà©Ê∂¶„ÄÇ‰Ω†ÊúÄÂ§öÂèØ‰ª•ÂÆåÊàê ‰∏§Á¨î ‰∫§Êòì„ÄÇÊ≥®ÊÑèÔºö‰Ω†‰∏çËÉΩÂêåÊó∂ÂèÇ‰∏éÂ§öÁ¨î‰∫§ÊòìÔºà‰Ω†ÂøÖÈ°ªÂú®ÂÜçÊ¨°Ë¥≠‰π∞ÂâçÂá∫ÂîÆÊéâ‰πãÂâçÁöÑËÇ°Á•®Ôºâ„ÄÇ Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàíÂàÜÊûêÔºöÂè™ËÉΩ‰∫§Êòì‰∏§Ê¨°Ôºå‰πüÂ∞±ÊòØÊå£‰∏§‰∏™Â∑ÆÂÄºÔºåÊúÄÂêé‰∏ÄÂ§©ÁªìÊùüÁöÑÊó∂ÂÄôÔºåÊúâ‰∫îÁßçÊÉÖÂÜµÔºö ‰∏ÄÊ¨°‰∫§ÊòìÈÉΩÊ≤°Êúâ Âè™‰π∞Ëøõ‰∫Ü‰∏ÄÊ¨° ‰π∞‰∏ÄÊ¨°ÔºåÂçñ‰∏ÄÊ¨°ÔºåÂç≥ÂÆåÊàê‰∏ÄÊ¨°‰∫§Êòì ‰∫§Êòì‰∏ÄÊ¨°Ôºå‰π∞Á¨¨‰∫åÊ¨° ‰∫§Êòì‰∏§Ê¨°„ÄÇ Á¨¨‰∏ÄÁßç‰∏∫0Ôºå‰∏çÂøÖÁêÜ‰ºö„ÄÇ‰ª•‰∏ãÂõõÁßçÁöÑÂà©Ê∂¶ÂàÜÂà´ËÆ∞‰∏∫‰∏çÁî®buy1Ôºåsell1Ôºåbuy2Ôºåsell2„ÄÇËØ¶ÊÉÖËßÅ‰ª£Á†Å ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415class Solution &#123; public int maxProfit(int[] prices) &#123; int buy1 = -prices[0]; int sell1 = 0; int buy2 = -prices[0]; int sell2 = 0; for(int i=1;i&lt;prices.length;i++)&#123; buy1 = Math.max(buy1,-prices[i]); sell1 = Math.max(sell1,buy1+prices[i]); buy2 = Math.max(buy2,sell1-prices[i]); sell2 = Math.max(sell2,buy2+prices[i]); &#125; return sell2; &#125;&#125; 188. ‰π∞ÂçñËÇ°Á•®ÁöÑÊúÄ‰Ω≥Êó∂Êú∫ IVÁªôÂÆö‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑ prices ÔºåÂÆÉÁöÑÁ¨¨ i ‰∏™ÂÖÉÁ¥† prices[i] ÊòØ‰∏ÄÊîØÁªôÂÆöÁöÑËÇ°Á•®Âú®Á¨¨ i Â§©ÁöÑ‰ª∑Ê†º„ÄÇËÆæËÆ°‰∏Ä‰∏™ÁÆóÊ≥ïÊù•ËÆ°ÁÆó‰Ω†ÊâÄËÉΩËé∑ÂèñÁöÑÊúÄÂ§ßÂà©Ê∂¶„ÄÇ‰Ω†ÊúÄÂ§öÂèØ‰ª•ÂÆåÊàê k Á¨î‰∫§Êòì„ÄÇÊ≥®ÊÑèÔºö‰Ω†‰∏çËÉΩÂêåÊó∂ÂèÇ‰∏éÂ§öÁ¨î‰∫§ÊòìÔºà‰Ω†ÂøÖÈ°ªÂú®ÂÜçÊ¨°Ë¥≠‰π∞ÂâçÂá∫ÂîÆÊéâ‰πãÂâçÁöÑËÇ°Á•®Ôºâ„ÄÇ Áü•ËØÜÁÇπÔºöÊï∞ÁªÑ„ÄÅÂä®ÊÄÅËßÑÂàíÂàÜÊûêÔºöËøô‰∏™ÂÖ∂ÂÆû‰πüÂ∞±ÊòØ‰∏™ÂèòÂΩ¢ÔºåÊúâÁÇπ‰∏çÂ§™Â•ΩÁêÜËß£Ôºå‰Ω†Â∞±Ëøô‰πàËÆ∞ÂêßÔºõ[È¢òËß£](‰π∞ÂçñËÇ°Á•®ÁöÑÊúÄ‰Ω≥Êó∂Êú∫ IV - ‰π∞ÂçñËÇ°Á•®ÁöÑÊúÄ‰Ω≥Êó∂Êú∫ IV - ÂäõÊâ£ÔºàLeetCodeÔºâ (leetcode-cn.com)) ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718192021222324class Solution &#123; public int maxProfit(int k, int[] prices) &#123; int len = prices.length; k = Math.min(k, len / 2); if(k==0)&#123; return 0; &#125; //Êâã‰∏äÊåÅÊúâËÇ°Á•®ÁöÑÂà©Ê∂¶ int[] buy = new int[k]; //Êâã‰∏äÊú™ÊåÅÊúâËÇ°Á•®ÁöÑÂà©Ê∂¶ int[] sell = new int[k]; for(int i = 0;i&lt;k;i++)&#123; buy[i] = -prices[0]; &#125; //Â∑≤ÁªèÂÆåÊàêÁ¨¨iÁ¨î‰∫§ÊòìÔºåÁ¨¨jÂ§© for(int i=1;i&lt;len;i++)&#123; for(int j = 0;j&lt;k;j++)&#123; buy[j] = Math.max((j==0?0:sell[j-1])-prices[i],buy[j]); sell[j] = Math.max(buy[j]+prices[i],sell[j]); &#125; &#125; return sell[k-1]; &#125;&#125; 714. ‰π∞ÂçñËÇ°Á•®ÁöÑÊúÄ‰Ω≥Êó∂Êú∫Âê´ÊâãÁª≠Ë¥πÁªôÂÆö‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑ pricesÔºåÂÖ∂‰∏≠Á¨¨ i ‰∏™ÂÖÉÁ¥†‰ª£Ë°®‰∫ÜÁ¨¨ i Â§©ÁöÑËÇ°Á•®‰ª∑Ê†º ÔºõÈùûË¥üÊï¥Êï∞ fee ‰ª£Ë°®‰∫Ü‰∫§ÊòìËÇ°Á•®ÁöÑÊâãÁª≠Ë¥πÁî®„ÄÇ‰Ω†ÂèØ‰ª•Êó†ÈôêÊ¨°Âú∞ÂÆåÊàê‰∫§ÊòìÔºå‰ΩÜÊòØ‰Ω†ÊØèÁ¨î‰∫§ÊòìÈÉΩÈúÄË¶Å‰ªòÊâãÁª≠Ë¥π„ÄÇÂ¶ÇÊûú‰Ω†Â∑≤ÁªèË¥≠‰π∞‰∫Ü‰∏Ä‰∏™ËÇ°Á•®ÔºåÂú®ÂçñÂá∫ÂÆÉ‰πãÂâç‰Ω†Â∞±‰∏çËÉΩÂÜçÁªßÁª≠Ë¥≠‰π∞ËÇ°Á•®‰∫Ü„ÄÇËøîÂõûËé∑ÂæóÂà©Ê∂¶ÁöÑÊúÄÂ§ßÂÄº„ÄÇÊ≥®ÊÑèÔºöËøôÈáåÁöÑ‰∏ÄÁ¨î‰∫§ÊòìÊåá‰π∞ÂÖ•ÊåÅÊúâÂπ∂ÂçñÂá∫ËÇ°Á•®ÁöÑÊï¥‰∏™ËøáÁ®ãÔºåÊØèÁ¨î‰∫§Êòì‰Ω†Âè™ÈúÄË¶Å‰∏∫ÊîØ‰ªò‰∏ÄÊ¨°ÊâãÁª≠Ë¥π„ÄÇ Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàí„ÄÅÊï∞ÁªÑÂàÜÊûêÔºöÂíåIIÊúÄ‰∏∫Áõ∏‰ººÔºåÂè™ÊòØÂä†‰∫Ü‰∏™ÊâãÁª≠Ë¥πËÄåÂ∑≤„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011class Solution &#123; public int maxProfit(int[] prices, int fee) &#123; int hold = -prices[0],unhold = 0; for(int i=0;i&lt;prices.length;i++)&#123; int tmpHold = hold,tmpUnhold = unhold; hold = Math.max(tmpHold,tmpUnhold-prices[i]); unhold = Math.max(tmpUnhold,tmpHold+prices[i]-fee); &#125; return unhold; &#125;&#125; 309. ÊúÄ‰Ω≥‰π∞ÂçñËÇ°Á•®Êó∂Êú∫Âê´ÂÜ∑ÂÜªÊúüÁªôÂÆö‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑÔºåÂÖ∂‰∏≠Á¨¨ i ‰∏™ÂÖÉÁ¥†‰ª£Ë°®‰∫ÜÁ¨¨ i Â§©ÁöÑËÇ°Á•®‰ª∑Ê†º „ÄÇËÆæËÆ°‰∏Ä‰∏™ÁÆóÊ≥ïËÆ°ÁÆóÂá∫ÊúÄÂ§ßÂà©Ê∂¶„ÄÇÂú®Êª°Ë∂≥‰ª•‰∏ãÁ∫¶ÊùüÊù°‰ª∂‰∏ãÔºå‰Ω†ÂèØ‰ª•Â∞ΩÂèØËÉΩÂú∞ÂÆåÊàêÊõ¥Â§öÁöÑ‰∫§ÊòìÔºàÂ§öÊ¨°‰π∞Âçñ‰∏ÄÊîØËÇ°Á•®Ôºâ:‰Ω†‰∏çËÉΩÂêåÊó∂ÂèÇ‰∏éÂ§öÁ¨î‰∫§ÊòìÔºà‰Ω†ÂøÖÈ°ªÂú®ÂÜçÊ¨°Ë¥≠‰π∞ÂâçÂá∫ÂîÆÊéâ‰πãÂâçÁöÑËÇ°Á•®Ôºâ„ÄÇÂçñÂá∫ËÇ°Á•®ÂêéÔºå‰Ω†Êó†Ê≥ïÂú®Á¨¨‰∫åÂ§©‰π∞ÂÖ•ËÇ°Á•® (Âç≥ÂÜ∑ÂÜªÊúü‰∏∫ 1 Â§©)„ÄÇ **Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàíÂàÜÊûêÔºöÁÆó‰∏ãÊù•ÔºåÂΩìÂâçÁöÑÁä∂ÊÄÅÂ∞±‰∏âÁßçÔºå‰∏ÄÁßçÊòØÊåÅÊúâËÇ°Á•®ÔºàÂΩìÁÑ∂‰∏çÂú®ÂÜ∑ÂÜªÊúüÔºâÔºõ‰∏ÄÁßçÊòØÊú™ÊåÅÊúâÔºàÂú®ÂÜ∑ÂÜªÊúüÔºâÔºõËøòÊúâ‰∏ÄÁßçÊú™ÊåÅÊúâÔºà‰∏çÂú®ÂÜ∑ÂÜªÊúüÔºâÔºåËØ¶ÊÉÖËßÅ‰ª£Á†Å„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122class Solution &#123; public int maxProfit(int[] prices) &#123; //ÂΩìÂâçÊåÅÊúâËÇ°Á•® int hold = -prices[0]; //ÂΩìÂâç‰∏çÊåÅÊúâËÇ°Á•® int unhold = 0; //ÂΩìÂâçÂú®ÂÜ∑ÂÜªÊúü int cold = 0; for(int i=0;i&lt;prices.length;i++)&#123; int tmpHold = hold; int tmpUnhold = unhold; int tmpCold = cold; //‰ªäÂ§©ÊåÅÊúâÔºåÈÇ£ËØ¥ÊòéË¶Å‰πàÊòØÊò®Â§©Â∞±ÊúâÔºõË¶Å‰πàÊò®Â§©ÂÜ∑ÂÜªÊúüÔºå‰ªäÂ§©Âèà‰π∞ÁöÑ hold = Math.max(tmpHold,tmpCold-prices[i]); //‰ªäÂ§©Êú™ÊåÅÊúâÔºöË¶Å‰πàÊò®Â§©Â∞±Ê≤°ÔºõË¶Å‰πàÊò®Â§©ÊåÅÊúâ‰ªäÂ§©Âçñ‰∫Ü unhold = Math.max(tmpUnhold,tmpHold+prices[i]); //‰ªäÂ§©ÂÜ∑ÂÜªÊúüÔºöÂøÖÂÆöÊò®Â§©Âçñ‰∫Ü cold = tmpUnhold; &#125; return Math.max(Math.max(unhold,cold),0); &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"}]},{"title":"leetcode-ËøõÂà∂Áõ∏ÂÖ≥","slug":"leetcode-ËøõÂà∂Áõ∏ÂÖ≥","date":"2021-06-19T16:00:00.000Z","updated":"2021-07-30T02:01:38.094Z","comments":true,"path":"2021/06/20/leetcode-ËøõÂà∂Áõ∏ÂÖ≥/","link":"","permalink":"http://example.com/2021/06/20/leetcode-%E8%BF%9B%E5%88%B6%E7%9B%B8%E5%85%B3/","excerpt":"","text":"171. ExcelË°®ÂàóÂ∫èÂè∑ÁªôÂÆö‰∏Ä‰∏™ExcelË°®Ê†º‰∏≠ÁöÑÂàóÂêçÁß∞ÔºåËøîÂõûÂÖ∂Áõ∏Â∫îÁöÑÂàóÂ∫èÂè∑„ÄÇ ‰æãÂ¶ÇÔºå A -&gt; 1 B -&gt; 2 C -&gt; 3 ‚Ä¶ Z -&gt; 26 AA -&gt; 27 AB -&gt; 28 ‚Ä¶ Á§∫‰æã 1: ËæìÂÖ•: ‚ÄúA‚Äù ËæìÂá∫: 1 Á§∫‰æã 2: ËæìÂÖ•: ‚ÄúAB‚Äù ËæìÂá∫: 28 Á§∫‰æã 3: ËæìÂÖ•: ‚ÄúZY‚Äù ËæìÂá∫: 701 Áü•ËØÜÁÇπÔºöËøõÂà∂Áõ∏ÂÖ≥ÂàÜÊûêÔºöËøôÊú¨Ë¥®‰∏äÊòØ‰∏™26ËøõÂà∂È¢òÁõÆÔºåÂ∞Ü26ËøõÂà∂ËΩ¨‰∏∫10ËøõÂà∂„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011class Solution &#123; public int titleToNumber(String columnTitle) &#123; int sum = 0,multiple = 1; for(int i=columnTitle.length()-1;i&gt;=0;i--)&#123; int curNumber = columnTitle.charAt(i)-&#x27;A&#x27;+1; sum += curNumber*multiple; multiple *= 26; &#125; return sum; &#125;&#125; 168. ExcelË°®ÂàóÂêçÁß∞Áªô‰Ω†‰∏Ä‰∏™Êï¥Êï∞ columnNumber ÔºåËøîÂõûÂÆÉÂú® Excel Ë°®‰∏≠Áõ∏ÂØπÂ∫îÁöÑÂàóÂêçÁß∞„ÄÇ ‰æãÂ¶ÇÔºö A -&gt; 1 B -&gt; 2 C -&gt; 3 ‚Ä¶ Z -&gt; 26 AA -&gt; 27 AB -&gt; 28 ‚Ä¶ Á§∫‰æã 1Ôºö ËæìÂÖ•ÔºöcolumnNumber = 1 ËæìÂá∫Ôºö‚ÄùA‚Äù Á§∫‰æã 2Ôºö ËæìÂÖ•ÔºöcolumnNumber = 28 ËæìÂá∫Ôºö‚ÄùAB‚Äù Á§∫‰æã 3Ôºö ËæìÂÖ•ÔºöcolumnNumber = 701 ËæìÂá∫Ôºö‚ÄùZY‚Äù Á§∫‰æã 4Ôºö ËæìÂÖ•ÔºöcolumnNumber = 2147483647 ËæìÂá∫Ôºö‚ÄùFXSHRXW‚Äù ÊèêÁ§∫Ôºö 1 &lt;= columnNumber &lt;= 231 - 1 Áü•ËØÜÁÇπÔºöËøõÂà∂ÈóÆÈ¢òÂàÜÊûêÔºöAÊòØ‰ªé1ÂºÄÂßãÁöÑÔºåÊâÄ‰ª•ÂΩìÊï∞Â≠óÊòØ1Êó∂ÔºåÊ≤°Ê≥ïÁõ¥Êé•ËÆ©ÂÆÉ+‚ÄòA‚ÄôÊù•ÂØπÂ∫îÂ≠óÁ¨¶ÔºåÂøÖÈ°ªÂÖàÂáè1„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011class Solution &#123; public String convertToTitle(int columnNumber) &#123; StringBuilder sb = new StringBuilder(); while(columnNumber&gt;0)&#123; columnNumber--; sb.append((char)(&#x27;A&#x27;+columnNumber%26)); columnNumber /= 26; &#125; return sb.reverse().toString(); &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ËøõÂà∂ÈóÆÈ¢ò","slug":"ËøõÂà∂ÈóÆÈ¢ò","permalink":"http://example.com/tags/%E8%BF%9B%E5%88%B6%E9%97%AE%E9%A2%98/"}]},{"title":"leetcode-Êó†ÈáçÂ§çÊúÄÈïøÂ≠óÁ¨¶‰∏≤","slug":"leetcode-Êó†ÈáçÂ§çÊúÄÈïøÂ≠óÁ¨¶‰∏≤","date":"2021-06-17T16:00:00.000Z","updated":"2021-07-21T01:34:20.052Z","comments":true,"path":"2021/06/18/leetcode-Êó†ÈáçÂ§çÊúÄÈïøÂ≠óÁ¨¶‰∏≤/","link":"","permalink":"http://example.com/2021/06/18/leetcode-%E6%97%A0%E9%87%8D%E5%A4%8D%E6%9C%80%E9%95%BF%E5%AD%97%E7%AC%A6%E4%B8%B2/","excerpt":"","text":"3. Êó†ÈáçÂ§çÂ≠óÁ¨¶ÁöÑÊúÄÈïøÂ≠ê‰∏≤ÁªôÂÆö‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÔºåËØ∑‰Ω†ÊâæÂá∫ÂÖ∂‰∏≠‰∏çÂê´ÊúâÈáçÂ§çÂ≠óÁ¨¶ÁöÑ ÊúÄÈïøÂ≠ê‰∏≤ ÁöÑÈïøÂ∫¶„ÄÇ Áü•ËØÜÁÇπÔºöÂèåÊåáÈíà„ÄÅÊªëÂä®Á™óÂè£ ÂàÜÊûêÔºöËøô‰∏™ÈóÆÈ¢òÁöÑËß£ÂÜ≥Ê®°ÂûãÊòØÊªëÂä®Á™óÂè£„ÄÇÂêåÊó∂ÂÆö‰πâ‰∏§‰∏™ÊåáÈíàÔºå‰∏Ä‰∏™‰∏¥Êó∂Âõ∫ÂÆöp1Ôºå‰∏Ä‰∏™‰∏çÊñ≠Êâ´Êèèp2ÔºõÂΩìp2Êâ´ÊèèËá≥Â∑≤ÂåÖÂê´ÁöÑÂ≠óÁ¨¶Êó∂ÔºåËÆ©p1ÂêéÁßªÔºåÁõ¥Ëá≥‰∏çÂåÖÂê´ÈáçÂ§çÂ≠óÁ¨¶„ÄÇÂú®Ê≠§ÈúÄË¶ÅÁî®Âà∞‰∏Ä‰∏™collectionÔºöHashSetÔºåÁî®‰∫éËÆ∞ÂΩïÂ∑≤Êâ´ÊèèÁöÑÂ≠óÁ¨¶ÂíåÂà§Êñ≠ÊòØÂê¶ÂåÖÂê´‰∏ã‰∏Ä‰∏™Â≠óÁ¨¶ÔºõÊØèÊ¨°p1ÂêéÁßª‰πãÂâçÔºåËÆ∞ÂΩï‰∏ãÊó†ÈáçÂ§çÁöÑÊúÄÂ§ßÈïøÂ∫¶„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718class Solution &#123; public int lengthOfLongestSubstring(String s) &#123; int len = s.length(); HashSet&lt;Character&gt; set = new HashSet&lt;&gt;(); int right = -1,res = 0; for(int i=0;i&lt;len;i++)&#123; if(i!=0)&#123; set.remove(s.charAt(i-1)); &#125; while(right&lt;len-1&amp;&amp;!set.contains(s.charAt(right+1)))&#123; set.add(s.charAt(right+1)); ++right; &#125; res = Math.max(res,right-i+1); &#125; return res; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ÊªëÂä®Á™óÂè£","slug":"ÊªëÂä®Á™óÂè£","permalink":"http://example.com/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"}]},{"title":"VueÂü∫Á°Ä","slug":"vueÂü∫Á°Ä","date":"2021-06-16T16:00:00.000Z","updated":"2021-08-02T07:46:50.325Z","comments":true,"path":"2021/06/17/vueÂü∫Á°Ä/","link":"","permalink":"http://example.com/2021/06/17/vue%E5%9F%BA%E7%A1%80/","excerpt":"","text":"ÂÖ•Èó®1234567891011121314151617181920212223242526272829&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;script src=&quot;vue.min.js&quot;&gt;&lt;/script&gt; &lt;div id=&quot;app&quot;&gt; &lt;!--ÊèíÂÄºË°®ËææÂºè--&gt; &#123;&#123;message&#125;&#125; &lt;/div&gt; &lt;script&gt; new Vue(&#123; //ÂèñË∑ØÂæÑ el:&#x27;#app&#x27;, //ÂÆö‰πâÂèòÈáèÂêçÂ≠óÂíåÂèòÈáèÂÄº data:&#123; message:&#x27;Hello Vue&#x27; &#125; &#125;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; ÂçïÂêëÁªëÂÆöÂíåÂèåÂêëÁªëÂÆö ÈááÁî®ÂèåÂêëÁªëÂÆöÊó∂ÔºåÁõ∏ÂΩì‰∫éÂ∞Ü‰øÆÊîπÊùÉ‰∏ÄÂπ∂ÁªôÂá∫ÔºåËã•Âú®ÁΩëÈ°µÁ´ØËøõË°å‰øÆÊîπÔºåÂÖ∂‰ªñ‰ΩçÁΩÆÁöÑÂºïÁî®ÂÄº‰∏ÄÂπ∂ÂèòÂåñ ÈááÁî®ÂçïÂêëÁªëÂÆöÊó∂Ôºå‰øÆÊîπËØ•ÂÄº‰ªÖ‰ªÖÊòØ‰øÆÊîπËØ•‰ΩçÁΩÆÁöÑÂÄºÔºåÂÖ∂‰ªñ‰ΩçÁΩÆÁöÑÂºïÁî®ÂÄº‰∏ç‰ºöÂèòÂåñ 12345678910111213141516171819202122232425262728293031&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;!--ÂçïÂêëÁªëÂÆö--&gt; &lt;div v-bind:style=&quot;msg&quot;&gt;ÂçïÂêëÁªëÂÆö&lt;/div&gt; &lt;!--ÁÆÄÂÜôÊñπÂºèÔºöÁõ¥Êé•ÂÜôÔºö--&gt; &lt;div :style=&quot;msg&quot;&gt;ÂçïÂêëÁªëÂÆöÁÆÄÂÜô&lt;/div&gt; &lt;/div&gt; &lt;script src=&quot;vue.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; new Vue(&#123; el: &#x27;#app&#x27;, data: &#123; msg:&quot;color:red;&quot; &#125; &#125;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 12345678910111213141516171819202122232425262728293031323334353637&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;!--ÂÜÖÂÆπ‰∏≠ÂèØÈÄöËøáÊèíÂÄºË°®ËææÂºèÂèñÂà∞ÂÄºÔºåÂú®Â±ûÊÄß‰∏≠‰ΩøÁî®ÂçïÂêëÁªëÂÆöÊàñËÄÖÂèåÂêëÁªëÂÆö--&gt; &#123;&#123;msg&#125;&#125; &lt;br/&gt; &lt;!--ÂçïÂêëÁªëÂÆö--&gt; &lt;input type=&quot;text&quot; :value=&quot;msg&quot;/&gt; &lt;br/&gt; &lt;!--ÂèåÂêëÁªëÂÆö--&gt; &lt;input type=&quot;text&quot; v-model=&quot;msg&quot;/&gt; &lt;/div&gt; &lt;script src=&quot;vue.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; new Vue(&#123; el: &#x27;#app&#x27;, data: &#123; msg:&quot;vueÈ°πÁõÆ&quot; &#125; &#125;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; ‰∫ã‰ª∂ÁªëÂÆö1234567891011121314151617181920212223242526272829303132333435363738&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;button v-on:click=&quot;show1&quot;&gt;‰∫ã‰ª∂ÁªëÂÆö&lt;/button&gt; &lt;!-- ÁÆÄÂÜôÊñπÂºèÂ¶Ç‰∏ã --&gt; &lt;button @click=&quot;show2&quot;&gt;‰∫ã‰ª∂ÁªëÂÆö2&lt;/button&gt; &lt;/div&gt; &lt;script src=&quot;vue.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; new Vue(&#123; el: &#x27;#app&#x27;, data: &#123; msg:&quot;vueÈ°πÁõÆ&quot; &#125;, methods:&#123; show1()&#123; console.log(&quot;ËøôÊòØvue‰∏≠ÂÆö‰πâÁöÑ‰∏Ä‰∏™ÊñπÊ≥ï&quot;) &#125;, show2()&#123; console.log(&quot;ËøôÊòØvue‰∏≠ÂÆö‰πâÁöÑÁ¨¨‰∫å‰∏™ÊñπÊ≥ï&quot;) &#125; &#125; &#125;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; Êù°‰ª∂Ê∏≤ÊüìÊåá‰ª§1234567891011121314151617181920212223242526272829&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;input type=&quot;checkbox&quot; v-model=&quot;ok&quot;/&gt; &lt;br/&gt; &lt;div v-if=&quot;ok&quot;&gt;Â∑≤ÈÄâ&lt;/div&gt; &lt;div v-else&gt;Êú™ÈÄâ&lt;/div&gt; &lt;/div&gt; &lt;script src=&quot;vue.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; new Vue(&#123; el: &#x27;#app&#x27;, data: &#123; ok:false &#125; &#125;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; Âæ™ÁéØÊåá‰ª§1234567891011121314151617181920212223242526272829303132&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;!-- Âæ™ÁéØÈÅçÂéÜuserListÔºåÊØè‰∏™ÈÅçÂéÜÂà∞ÁöÑÂØπË±°ÂèñÂêçuser;Ê∑ªÂä†indexÊòØÂàóË°®ÁöÑÁ¥¢ÂºïÔºà‰ªé0ÂºÄÂßãÔºâ --&gt; &lt;div v-for=&quot;(user,index) in userList&quot;&gt; &#123;&#123;index&#125;&#125;--&#123;&#123;user.name&#125;&#125;--&#123;&#123;user.age&#125;&#125; &lt;/div&gt; &lt;/div&gt; &lt;script src=&quot;vue.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; new Vue(&#123; el: &#x27;#app&#x27;, data: &#123; userList:[ &#123;&quot;name&quot;:&quot;Neo&quot;,age:31&#125;, &#123;&quot;name&quot;:&quot;Alex&quot;,age:29&#125; ] &#125; &#125;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; ÁîüÂëΩÂë®ÊúücreatedÊñπÊ≥ïÂú®È°µÈù¢Ê∏≤Êüì‰πãÂâçÊâßË°åÔºåmountedÊñπÊ≥ïÂú®È°µÈù¢Ê∏≤Êüì‰πãÂêéÊâßË°å ‰ª£Á†ÅÊµãËØïÔºö 12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &#123;&#123;msg&#125;&#125; &lt;/div&gt; &lt;script src=&quot;vue.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; new Vue(&#123; el: &#x27;#app&#x27;, data: &#123; msg:&quot;hello&quot; &#125;, created()&#123; debugger console.log(&quot;created...&quot;)//È°µÈù¢Ê∏≤Êüì‰πãÂâçÊâßË°å &#125;, mounted()&#123; debugger console.log(&quot;mounted...&quot;)//È°µÈù¢Ê∏≤Êüì‰πãÂêéÊâßË°å &#125; &#125;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; axiosÈÄöËøáaxiosÂèëÈÄÅajaxËØ∑Ê±ÇÔºåÊù•Ëé∑Âèñjson‰∏≠ÁöÑÊï∞ÊçÆ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;!-- ÈÄöËøáÂàóË°®ËøõË°åËæìÂá∫ --&gt; &lt;table&gt; &lt;!-- ÈááÁî®Âæ™ÁéØÊåá‰ª§ --&gt; &lt;tr v-for=&quot;user in userList&quot;&gt; &lt;td&gt;&#123;&#123;user.name&#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123;user.age&#125;&#125;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;script src=&quot;vue.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;axios.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; new Vue(&#123; el: &#x27;#app&#x27;, data: &#123; userList:[] &#125;, created()&#123;//Âú®È°µÈù¢Ê∏≤Êüì‰πãÂâçÊâßË°å //Ë∞ÉÁî®ÊñπÊ≥ïÔºåÂæóÂà∞ËøîÂõûÁöÑjsonÊï∞ÊçÆ this.getList() &#125;, methods:&#123; getList()&#123; //‰ΩøÁî®axiosÊñπÂºèajaxËØ∑Ê±Ç axios.get(&quot;user.json&quot;) .then(response =&gt; &#123;//ËØ∑Ê±ÇÊàêÂäü console.log(response) this.userList=response.data.data.items console.log(this.userList) &#125;) .catch(error =&gt; &#123;//ËØ∑Ê±ÇÂ§±Ë¥• console.log(error) &#125;) &#125; &#125; &#125;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"HelloWorldÁ≥ªÂàó","slug":"HelloWorldÁ≥ªÂàó","permalink":"http://example.com/categories/HelloWorld%E7%B3%BB%E5%88%97/"}],"tags":[]},{"title":"ES6ËØ≠Ê≥ï","slug":"ES6ËØ≠Ê≥ï","date":"2021-06-15T16:00:00.000Z","updated":"2021-08-02T07:48:57.955Z","comments":true,"path":"2021/06/16/ES6ËØ≠Ê≥ï/","link":"","permalink":"http://example.com/2021/06/16/ES6%E8%AF%AD%E6%B3%95/","excerpt":"","text":"ÂÆö‰πâÂèòÈáè12345678//varÊòØÂÖ®Â±ÄÂèòÈáèÔºåletÊòØÂ±ÄÈÉ®ÂèòÈáèvar a = 1;let b = 2;//varÂèØÂØπ‰∏ÄÂèòÈáèËøõË°åÂ§öÊ¨°ÂÆö‰πâÔºåletÂØπÂêå‰∏ÄÂèòÈáèÂ∞ΩÂèØÂÆö‰πâ‰∏ÄÊ¨°var a = 10;var a = 20;let b = 30; ÂÆö‰πâÂ∏∏ÈáèÂ∏∏ÈáèÂÆö‰πâÊó∂ÔºåÂ£∞ÊòéÊó∂ÂøÖÈ°ªËøõË°åÂàùÂßãÂåñÔºõ‰∏ÄÊó¶Â£∞Êòé‰∏çÂèØÊõ¥Êîπ 123456789101112131415161718&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;script&gt; const A = 10; console.log(A) //10 const B = &quot;‰Ω†Â•ΩÔºåES&quot; //‰Ω†Â•ΩÔºåES console.log(B) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; Ëß£ÊûÑËµãÂÄº12345678910111213141516171819202122232425262728293031&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;script&gt; //Ëß£ÊûÑËµãÂÄº let a = 1,b = 2, c = 3 console.log(a,b,c) //ES6ÂèØÂÜôÊ≥ïÂ¶Ç‰∏ã let[x,y,z] = [1,2,3] console.log(x,y,z) //ÂØπË±°Ëß£ÊûÑ(Â∏∏Áî®) let user = &#123;name:&#x27;Helen&#x27;,age:18&#125; //‰º†ÁªüÊñπÂºè let name1 = user.name let age1 = user.age console.log(name1,age1) //ES6 let&#123;name,age&#125; = user console.log(name,age) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; Ê®°ÊùøÂ≠óÁ¨¶‰∏≤Ê®°ÊùøÂ≠óÁ¨¶‰∏≤ÂèØÂØπÂÆö‰πâÁöÑÂèòÈáèËøõË°åÈÄöËøá$ËøõË°åÂºïÁî®ÔºåÂπ∂ËøõË°åÁÆÄÂçïÁöÑËøêÁÆóÔºå‰ª•ÂèäÂú®ËæìÂá∫Êó∂ËøõË°åÊç¢Ë°å 12345678910111213141516171819&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;script&gt; let name = &quot;Luna&quot; let age = 19 let info = `My name is $&#123;name&#125; and I am $&#123;age+1&#125; years old next year.` console.log(info) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; ÂÆö‰πâÂØπË±°12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;script&gt; const name = &quot;Alex&quot;,age = 20 //‰º†ÁªüÂÜôÊ≥ï // const user = &#123;name:name,age:age&#125; // console.log(user) //ES6 const user = &#123;name,age&#125; //Ë¶ÅÊÉ≥ËøôÊ†∑ÂÜôÔºåÂèòÈáèÂêçÁß∞ÂøÖÈ°ª‰∏ÄËá¥ console.log(user) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; ÂØπË±°ÊãìÂ±ïËøêÁÆóÁ¨¶‰∏ªË¶ÅÁî®‰∫éÂØπË±°ÁöÑÂ§çÂà∂ÂíåÂØπË±°ÁöÑÂêàÂπ∂ 1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;script&gt; //ÂØπË±°Â§çÂà∂ let person = &#123;name:&quot;Alex&quot;,age:38&#125; //ÈÄöËøá...ÂèØÂØπÊåáÂÆöÂØπË±°ÂÜÖÊâÄÊúâÂ±ûÊÄßËøõË°åÈÅçÂéÜÂπ∂ËøõË°åËµãÂÄºÁªôÂΩìÂâçÂØπË±° let someone = &#123;...person&#125; console.log(someone) //ÂØπË±°ÂêàÂπ∂ let name1 = &#123;name:&quot;Hony&quot;&#125;,age1 = &#123;age:40&#125; let someother = &#123;...name1,...age1&#125; console.log(someother) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; ÁÆ≠Â§¥ÂáΩÊï∞1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;script&gt; //‰º†ÁªüÊñπÂºèÂÆö‰πâÂáΩÊï∞ var f1 = function(a) &#123; return a+1 &#125; console.log(f1(4)) //ÁÆ≠Â§¥ÂáΩÊï∞ //Âçï‰∏™ÂèÇÊï∞Êó∂ÔºåÂèØÁúÅÁï•ÔºàÔºâ var f2 = (a) =&gt; 2*a console.log(f2(2)) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"HelloWorldÁ≥ªÂàó","slug":"HelloWorldÁ≥ªÂàó","permalink":"http://example.com/categories/HelloWorld%E7%B3%BB%E5%88%97/"}],"tags":[]},{"title":"leetcode-ÂõûÊñáÂ≠óÁ¨¶‰∏≤","slug":"leetcode-ÂõûÊñáÂ≠óÁ¨¶‰∏≤","date":"2021-06-09T16:00:00.000Z","updated":"2021-06-10T12:53:24.431Z","comments":true,"path":"2021/06/10/leetcode-ÂõûÊñáÂ≠óÁ¨¶‰∏≤/","link":"","permalink":"http://example.com/2021/06/10/leetcode-%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2/","excerpt":"","text":"5. ÊúÄÈïøÂõûÊñáÂ≠ê‰∏≤Áü•ËØÜÁÇπÔºömanacherÁÆóÊ≥ïÈ¢òÁõÆÊèèËø∞ÔºöÁªô‰Ω†‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ sÔºåÊâæÂà∞ s ‰∏≠ÊúÄÈïøÁöÑÂõûÊñáÂ≠ê‰∏≤„ÄÇ ÂàÜÊûêÔºömanacherÁÆóÊ≥ïÁöÑÂø´Êç∑Âú®‰∫éÂ∞ÜÊØè‰∏™ËäÇÁÇπÁöÑÊúÄÂ§ßËáÇÈïøÈÉΩËÆ∞ÂΩïÂú®ÂÜÖÔºåËøôÊ†∑‰∏ãÊ¨°ÂÜçÊü•ÊâæÁöÑÊó∂ÂÄôÂ∞±‰∏çÂøÖÂÜçÂÅöÈáçÂ§çÂ∑•‰ΩúÔºõÂè¶Â§ñÔºåÂØπÂ≠óÁ¨¶‰∏≤ËøõË°åÂ§ÑÁêÜÔºàÂä†ÁâπÊÆäÁ¨¶Âè∑ÔºâÔºå‰ΩøÂæóÂ≠óÁ¨¶‰∏≤ÁöÑÈïøÂ∫¶ÂÖ®ÈÉ®ÈÉΩ‰∏∫Â•áÊï∞„ÄÇ Â§çÊùÇÂ∫¶ÂàÜÊûê:Êó∂Èó¥Â§çÊùÇÂ∫¶ÔºöO(n)ÔºåÂÖ∂‰∏≠ n ÊòØÂ≠óÁ¨¶‰∏≤ÁöÑÈïøÂ∫¶„ÄÇÁî±‰∫éÂØπ‰∫éÊØè‰∏™‰ΩçÁΩÆÔºåÊâ©Â±ïË¶Å‰πà‰ªéÂΩìÂâçÁöÑÊúÄÂè≥‰æßËáÇÈïø right ÂºÄÂßãÔºåË¶Å‰πàÂè™‰ºöËøõË°å‰∏ÄÊ≠•ÔºåËÄå right ÊúÄÂ§öÂêëÂâçËµ∞ O(n) Ê≠•ÔºåÂõ†Ê≠§ÁÆóÊ≥ïÁöÑÂ§çÊùÇÂ∫¶‰∏∫ O(n)„ÄÇ Á©∫Èó¥Â§çÊùÇÂ∫¶ÔºöO(n)ÔºåÊàë‰ª¨ÈúÄË¶Å O(n) ÁöÑÁ©∫Èó¥ËÆ∞ÂΩïÊØè‰∏™‰ΩçÁΩÆÁöÑËáÇÈïø„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950public String longestPalindrome(String s) &#123; //Â§ÑÁêÜÂ≠óÁ¨¶‰∏≤ StringBuffer t = new StringBuffer(&quot;$&quot;); for(int i=0;i&lt;s.length();i++)&#123; t.append(s.charAt(i)); t.append(&#x27;$&#x27;); &#125; s=t.toString(); //start‰∏∫ÊúÄÈïøÂ≠óÁ¨¶‰∏≤ÁöÑËµ∑ÂßãÔºåend‰∏∫ÂÖ∂Êú´Á´Ø int start=0,end=-1; //right‰∏∫ÂΩìÂâçÊúÄÈïøÂõûÊñá‰∏≤ÁöÑÊúÄÂè≥Á´ØÔºåj‰∏∫ÊúÄÈïøÂõûÊñá‰∏≤ÂØπÁß∞‰∏≠ÂøÉ int right=-1,j=-1; List&lt;Integer&gt; armLength = new ArrayList&lt;&gt;(); for(int i=0;i&lt;s.length();i++)&#123; int curArmLength; if(i&lt;=right)&#123;//Â¶ÇÊûúÂΩìÂâç‰ΩçÁΩÆÂú®ÊúÄÈïøÂõûÊñá‰∏≤ËåÉÂõ¥ÂÜÖÈÉ® int iSym=j*2-i; int minArm=Math.min(right-i,armLength.get(iSym));//ÊâæÂà∞ÂèØ‰ª•Á°ÆÂÆöÁöÑËáÇÈïø curArmLength=getArmLength(s,i-minArm,i+minArm);//Êâ©Â±ïËáÇÈïø &#125;else&#123;//Ê≤°ÊúâÂ∞±ÈáçÂ§¥ÂºÄÂßãÊâæ curArmLength=getArmLength(s,i,i); &#125; //ÂØπÊï∞ÊçÆËøõË°åÊõ¥Êñ∞ armLength.add(curArmLength); if(right&lt;i+curArmLength)&#123; j=i; right=i+curArmLength; &#125; if(end-start&lt;curArmLength*2+1)&#123; start=i-curArmLength; end=i+curArmLength; &#125; &#125; //ÂÜçÊ¨°Â§ÑÁêÜÂ≠óÁ¨¶‰∏≤ÔºåÊ∂àÈô§ÁâπÊÆäÂ≠óÁ¨¶ StringBuffer res = new StringBuffer(); for(int i=start;i&lt;=end;i++)&#123; if(s.charAt(i)!=&#x27;$&#x27;)&#123; res.append(s.charAt(i)); &#125; &#125; return res.toString(); &#125; //ÊâæÂà∞Â≠óÁ¨¶‰∏≤ÁöÑËáÇÈïø public int getArmLength(String s,int left,int right)&#123; while(left&gt;=0&amp;&amp;right&lt;s.length()&amp;&amp;s.charAt(left)==s.charAt(right))&#123; --left; ++right; &#125; return (right-left-2)/2; &#125; 214. ÊúÄÁü≠ÂõûÊñá‰∏≤È¢òÁõÆÊèèËø∞ÔºöÁªôÂÆö‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ sÔºå‰Ω†ÂèØ‰ª•ÈÄöËøáÂú®Â≠óÁ¨¶‰∏≤ÂâçÈù¢Ê∑ªÂä†Â≠óÁ¨¶Â∞ÜÂÖ∂ËΩ¨Êç¢‰∏∫ÂõûÊñá‰∏≤„ÄÇÊâæÂà∞Âπ∂ËøîÂõûÂèØ‰ª•Áî®ËøôÁßçÊñπÂºèËΩ¨Êç¢ÁöÑÊúÄÁü≠ÂõûÊñá‰∏≤„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºös = ‚Äúaacecaaa‚Äù ËæìÂá∫Ôºö‚Äùaaacecaaa‚Äù Á§∫‰æã 2Ôºö ËæìÂÖ•Ôºös = ‚Äúabcd‚Äù ËæìÂá∫Ôºö‚Äùdcbabcd‚Äù Áü•ËØÜÁÇπÔºöÂ≠óÁ¨¶‰∏≤„ÄÅmanacher„ÄÅKMPÂàÜÊûêÔºöËøô‰∏™È¢òÁõÆÂâçÊ≤°Ëß£ÂÜ≥ÔºåËµ∞‰∫Ü‰∏™ÈÄíÂΩíÁöÑË∑ØÂ≠êÔºåÊàëÂ∞ùËØïÁî®manacherËøõË°åËÆ°ÁÆóÔºåË∂ÖÊó∂‰∫ÜÔºå‰ΩÜÊòØÊúâ‰∫∫ÁöÑmanacherÊ≤°Ë∂ÖÊó∂ÔºåËØ¥ÊòéÊàëÁöÑmanacherËøòÊúâÂæÖÊîπËøõÔºõËøô‰∏™È¢òÁî®KMPÊòØÊúÄÂ•ΩÁöÑÔºåËøòÊúâ‰∏™Ëß£Ê≥ïÊòØÁî®ÁöÑÂ≠óÁ¨¶‰∏≤ÂìàÂ∏åÔºåÈÇ£‰∏™ÊòØ‚ÄúÊäïÊú∫ÂèñÂ∑ß‚Äù‰∫Ü(Êàë‰πü‰∏ç‰ºöÁî®)„ÄÇ Â∑≤ÁªèÊéåÊè°KMPÊ®°ÂºèÂåπÈÖçÁÆóÊ≥ï„ÄÇ KMP‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728293031class Solution &#123; public String shortestPalindrome(String s) &#123; int len = s.length(); //next‰∏∫ÂΩìÂâçÂ≠óÁ¨¶‰∏≤ÁöÑÊúÄÂ§ßÂâçÁºÄÂêéÁºÄÂåπÈÖç‰∏™Êï∞ int[] next = new int[len]; for(int i=1,size=0;i&lt;len;i++)&#123; //Ëøô‰∏™ÊòØÂõûÊ∫ØÁöÑÊÑèÊÄùÔºåÂ¶ÇÊûúÂΩìÂâçÂ≠óÁ¨¶Âíå‰∏ã‰∏Ä‰∏™Â≠óÁ¨¶‰∏çÁõ∏Á≠âÔºåÈÇ£Â∞±Â∞ÜsizeÊîπ‰∏∫‰∏äÊ¨°Áõ∏Á≠âÁöÑÈÇ£‰∏™‰ΩçÁΩÆ while(size&gt;0&amp;&amp;s.charAt(i)!=s.charAt(size))&#123; size=next[size-1]; &#125; if(s.charAt(i)==s.charAt(size))&#123; ++size; &#125; next[i]=size; &#125; int index=0; for(int i=len-1;i&gt;=0;i--)&#123; //Ëøô‰∏™ÊòØÁõ∏ÂΩì‰∫éÂ∞ÜSÂíåÂÖ∂ÂÄíÂ∫èÂ≠óÁ¨¶‰∏≤ËøõË°å‰∫ÜÊ±ÇÊúÄÂ§ßÂâçÁºÄÂêéÁºÄÂåπÈÖç‰∏™Êï∞ while(index&gt;0&amp;&amp;s.charAt(i)!=s.charAt(index))&#123; index=next[index-1]; &#125; if(s.charAt(index)==s.charAt(i))&#123; ++index; &#125; &#125; //Ê≥®ÊÑèÊ≠§Â§ÑÁöÑindexÔºåÂ¶ÇÊûús‰∏∫ÂõûÊñáÂ≠óÁ¨¶‰∏≤ÔºåÂàôindexÂ∞±ÊòØsÁöÑlength String add = (index==len?&quot;&quot;:s.substring(index)); StringBuilder sb = new StringBuilder(add); return sb.reverse().append(s).toString(); &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[]},{"title":"leetcode-Ë∑≥Ë∑ÉÊ¨°Êï∞","slug":"leetcode-Ë∑≥Ë∑ÉÊ¨°Êï∞","date":"2021-06-09T16:00:00.000Z","updated":"2021-06-10T12:40:17.238Z","comments":true,"path":"2021/06/10/leetcode-Ë∑≥Ë∑ÉÊ¨°Êï∞/","link":"","permalink":"http://example.com/2021/06/10/leetcode-%E8%B7%B3%E8%B7%83%E6%AC%A1%E6%95%B0/","excerpt":"","text":"55. Ë∑≥Ë∑ÉÊ∏∏ÊàèÁü•ËØÜÁÇπÔºöË¥™ÂøÉÁÆóÊ≥ïÈ¢òÁõÆÊèèËø∞ÔºöÁªôÂÆö‰∏Ä‰∏™ÈùûË¥üÊï¥Êï∞Êï∞ÁªÑnumsÔºå‰Ω†ÊúÄÂàù‰Ωç‰∫éÊï∞ÁªÑÁöÑÁ¨¨‰∏Ä‰∏™‰∏ãÊ†á „ÄÇÊï∞ÁªÑ‰∏≠ÁöÑÊØè‰∏™ÂÖÉÁ¥†‰ª£Ë°®‰Ω†Âú®ËØ•‰ΩçÁΩÆÂèØ‰ª•Ë∑≥Ë∑ÉÁöÑÊúÄÂ§ßÈïøÂ∫¶„ÄÇÂà§Êñ≠‰Ω†ÊòØÂê¶ËÉΩÂ§üÂà∞ËææÊúÄÂêé‰∏Ä‰∏™‰∏ãÊ†á ÂàÜÊûêÔºöÁª¥Êä§ÊØè‰∏™‰ΩçÁΩÆÊâÄËÉΩÂà∞ËææÁöÑÊúÄÂè≥‰ΩçÁΩÆrightPositonÔºå‰∏çÊñ≠Êõ¥Êñ∞Ëøô‰∏™rightPositonÔºåÁõ¥Âà∞rightPositonÂ§ß‰∫éÁ≠â‰∫éÊúÄÂêéÁöÑ‰ΩçÁΩÆÔºåÊàñËÄÖÈÅçÂéÜËá≥Êï∞ÁªÑÊúÄÂêé‰∏Ä‰Ωç‰πüÊó†Ê≥ïÂà∞Ëææ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 123456789101112131415class Solution &#123; public boolean canJump(int[] nums) &#123; int len = nums.length; int rightMost = 0;//Áª¥ÊåÅ‰∏Ä‰∏™ÊúÄÂè≥ËæπÁöÑ‰ΩçÁΩÆ for(int i = 0;i&lt;len;i++)&#123; if(i&lt;=rightMost)&#123; rightMost = Math.max(rightMost,i+nums[i]);//Âä®ÊÄÅÁª¥Êä§ÊúÄÂè≥‰æßÁöÑ‰ΩçÁΩÆ if(rightMost&gt;=len-1)&#123;//Ê≠§Êó∂ËØ¥ÊòéÂ∑≤ÁªèÂèØ‰ª•Âà∞ËææÊúÄÂêé‰ΩçÁΩÆ return true; &#125; &#125; &#125; return false; &#125;&#125; 45. Ë∑≥Ë∑ÉÊ∏∏Êàè IIÁü•ËØÜÁÇπÔºöË¥™ÂøÉÁÆóÊ≥ïÈ¢òÁõÆÊèèËø∞ÔºöÁªôÂÆö‰∏Ä‰∏™ÈùûË¥üÊï¥Êï∞Êï∞ÁªÑÔºå‰Ω†ÊúÄÂàù‰Ωç‰∫éÊï∞ÁªÑÁöÑÁ¨¨‰∏Ä‰∏™‰ΩçÁΩÆ„ÄÇÊï∞ÁªÑ‰∏≠ÁöÑÊØè‰∏™ÂÖÉÁ¥†‰ª£Ë°®‰Ω†Âú®ËØ•‰ΩçÁΩÆÂèØ‰ª•Ë∑≥Ë∑ÉÁöÑÊúÄÂ§ßÈïøÂ∫¶„ÄÇ‰Ω†ÁöÑÁõÆÊ†áÊòØ‰ΩøÁî®ÊúÄÂ∞ëÁöÑË∑≥Ë∑ÉÊ¨°Êï∞Âà∞ËææÊï∞ÁªÑÁöÑÊúÄÂêé‰∏Ä‰∏™‰ΩçÁΩÆ„ÄÇ ÂàÜÊûêÔºöÂÖ≥ÈîÆÁÇπÂú®‰∫é‰ªÄ‰πàÊó∂ÂÄôËÆ∞ÂΩïË∑≥Ë∑ÉÊ¨°Êï∞stepÔºåÊòéÁ°Æ‰∏ÄÁÇπÔºåÂ¶ÇÊûúÂú®Êüê‰∏ÄÁÇπiÔºåÊâÄËÉΩÂà∞ËææÁöÑÊúÄËøúÂ§ÑrightPosition‰πüÊó†Ê≥ïÂà∞ËææÊúÄÂêé‰∏Ä‰∏™‰ΩçÁΩÆÊó∂ÔºåÈÇ£Â∞±ÈúÄË¶ÅÂÜçË∑≥‰∏ÄÊ¨°ÔºåÂç≥step++ÔºõÊïÖÔºåÊØèÂΩìiÊâÄËÉΩÂà∞ËææÁöÑrightPositionÊú™Âà∞ËææÊúÄÂêé‰∏Ä‰∏™‰ΩçÁΩÆÔºåiÂèàÂ∑≤ÁªèÂà∞Ëææ‰∫ÜÂΩìÂâçËÉΩÂà∞ËææÁöÑÊúÄËøú‰ΩçÁΩÆÔºàÂ∑≤Áªè‰∏çÂæó‰∏çË∑≥‰∫ÜÔºâÔºåÂàôstep++„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415class Solution &#123; public int jump(int[] nums) &#123; int size=nums.length; //end‰∏∫Êú™Ë∑≥‰πãÂâçÊâÄËÉΩÂà∞ËææÁöÑÊúÄËøú‰ΩçÁΩÆ int end=0,mostRight=0,steps=0; for(int i=0;i&lt;size-1;i++)&#123; mostRight=Math.max(mostRight,i+nums[i]); if(i==end)&#123; end=mostRight; steps++; &#125; &#125; return steps; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[]},{"title":"leetcode-ÈáçÊûÑ‰∫åÂèâÊ†ë","slug":"leetcode-ÈáçÊûÑ‰∫åÂèâÊ†ë","date":"2021-06-09T16:00:00.000Z","updated":"2021-08-03T02:36:20.969Z","comments":true,"path":"2021/06/10/leetcode-ÈáçÊûÑ‰∫åÂèâÊ†ë/","link":"","permalink":"http://example.com/2021/06/10/leetcode-%E9%87%8D%E6%9E%84%E4%BA%8C%E5%8F%89%E6%A0%91/","excerpt":"","text":"105. ‰ªéÂâçÂ∫è‰∏é‰∏≠Â∫èÈÅçÂéÜÂ∫èÂàóÊûÑÈÄ†‰∫åÂèâÊ†ëÈ¢òÁõÆÊèèËø∞ÔºöËæìÂÖ•Êüê‰∫åÂèâÊ†ëÁöÑÂâçÂ∫èÈÅçÂéÜÂíå‰∏≠Â∫èÈÅçÂéÜÁöÑÁªìÊûúÔºåËØ∑ÈáçÂª∫ËØ•‰∫åÂèâÊ†ë„ÄÇÂÅáËÆæËæìÂÖ•ÁöÑÂâçÂ∫èÈÅçÂéÜÂíå‰∏≠Â∫èÈÅçÂéÜÁöÑÁªìÊûú‰∏≠ÈÉΩ‰∏çÂê´ÈáçÂ§çÁöÑÊï∞Â≠ó„ÄÇ Áü•ËØÜÁÇπ:‰∫åÂèâÊ†ë,ÈÄíÂΩíÂàÜÊûêÔºö ‰∫åÂèâÊ†ëÈÅçÂéÜ ÂâçÂ∫è Ê†πËäÇÁÇπ Â∑¶Â≠êÊ†ë Âè≥Â≠êÊ†ë ‰∏≠Â∫è Â∑¶Â≠êÊ†ë Ê†πËäÇÁÇπ Âè≥Â≠êÊ†ë ÂêéÂ∫è Â∑¶Â≠êÊ†ë Âè≥Â≠êÊ†ë Ê†πËäÇÁÇπ Ê†πÊçÆ‰∫åÂèâÊ†ëÈÅçÂéÜÁöÑÁâπÁÇπ ÔºåÂâçÂ∫èÈÅçÂéÜÁöÑÁ¨¨‰∏Ä‰∏™ËäÇÁÇπÂ∞±ÊòØÊ†πËäÇÁÇπÔºõËÄåÂú®‰∏≠Â∫èÈÅçÂéÜ‰∏≠ÂèØÊ†πÊçÆÊ†πËäÇÁÇπÁöÑÂùêÊ†á‰ΩçÁΩÆÂ∞ÜÊï¥‰∏™Êï∞ÁªÑÂàÜ‰∏∫Â∑¶Â≠êÊ†ëÂíåÂè≥Â≠êÊ†ë„ÄÇÂú®Êú¨È¢ò‰∏≠ÔºåÈáçÁÇπËêΩÂú®‰∫Ü‰∏≠Â∫èÈÅçÂéÜ‰∏äÔºåÈ¶ñÂÖàÂØπ‰∏≠Â∫èÈÅçÂéÜÂª∫Á´ã‰∏Ä‰∏™HashMapÔºåk‰∏∫Êï∞ÁªÑÁöÑÂÄºÔºåv‰∏∫ËØ•ÂÄºÂú®‰∏≠Â∫èÈÅçÂéÜ‰∏≠ÁöÑ‰ΩçÁΩÆ„ÄÇÊ†πÊçÆÂâçÂ∫èÈÅçÂéÜÊâæÂà∞Ê†πËäÇÁÇπrootÁöÑ‰ΩçÁΩÆÔºåÁÑ∂ÂêéÈÄöËøáHashMapÊâæÂà∞rootÂú®‰∏≠Â∫èÈÅçÂéÜ‰∏≠ÁöÑ‰ΩçÁΩÆÔºå‰πãÂêé‰æøÂèØÊ†πÊçÆ‰∏≠Â∫èÈÅçÂéÜÁ°ÆÂÆöÂ∑¶Â≠êÊ†ëÂíåÂè≥Â≠êÊ†ëÁöÑÈïøÂ∫¶ÔºõÁî±‰∫éÂ≠êÊ†ëÈïøÂ∫¶Á°ÆÂÆö‰∫ÜÔºåÂàôÂèØÂú®ÂâçÂ∫èÈÅçÂéÜ‰∏≠Á°ÆÂÆöÂ∑¶Âè≥Â≠êÊ†ëÁöÑÊ†πËäÇÁÇπÔºå‰æøÂèØËøõË°åÈÄíÂΩíÊü•ÊâæÊâÄÊúâËäÇÁÇπÁöÑ‰ΩçÁΩÆ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223242526272829class Solution &#123; //preorderÂíåHashMapÂú®‰∏§‰∏™ÂáΩÊï∞‰∏≠ÈÉΩ‰ºöÁî®Âà∞ int[] preorder; HashMap&lt;Integer,Integer&gt; map=new HashMap&lt;&gt;(); public TreeNode buildTree(int[] preorder, int[] inorder) &#123; this.preorder=preorder; for(int i=0;i&lt;inorder.length;i++)&#123; map.put(inorder[i],i); &#125; return recur(0,0,inorder.length-1); &#125; //rootIndex‰∏∫ÂâçÂ∫èÈÅçÂéÜ‰∏≠Ê†πËäÇÁÇπÁöÑ‰ΩçÁΩÆÔºåleftIndex‰∏∫‰∏≠Â∫èÈÅçÂéÜ‰∏≠Â≠êÊ†ëÁöÑÂ∑¶Á´ØÔºårightIndex‰∏∫‰∏≠Â∫èÈÅçÂéÜ‰∏≠Â≠êÊ†ëÁöÑÂè≥Á´ØÔºå public TreeNode recur(int rootIndex,int leftIndex,int rightIndex)&#123; if(leftIndex&gt;rightIndex)&#123; return null; &#125; TreeNode root=new TreeNode(preorder[rootIndex]); int rootIndexInOrder=map.get(preorder[rootIndex]); //ÈÄíÂΩíÂª∫Á´ãÂ∑¶Â≠êÊ†ë root.left=recur(rootIndex+1,leftIndex,rootIndexInOrder-1); //Ëß£Èáä‰∏ãrootIndex+rootIndexInOrder-leftIndex+1ÔºåËøô‰∏™ÂºèÂ≠ê‰∏∫ //rootIndex+[ÔºàrootIndexInOrder-1Ôºâ-leftIndex+1]+1Ôºå //ÂÖ∂ÂÆûÂ∞±ÊòØÊâæÂà∞ÂâçÂ∫èÈÅçÂéÜ‰∏≠Âè≥Â≠êÊ†ëÂºÄÂßãÁöÑÈÇ£‰∏™‰ΩçÁΩÆÔºåÂΩìÂâçÊ†πËäÇÁÇπÁöÑ‰ΩçÁΩÆ+Â∑¶Â≠êÊ†ëÈïøÂ∫¶+1 //ÈÄíÂΩíÂª∫Á´ãÂè≥Â≠êÊ†ë root.right=recur(rootIndex+rootIndexInOrder-leftIndex+1,rootIndexInOrder+1,rightIndex); //ËøîÂõûÊ†πËäÇÁÇπ return root; &#125;&#125; 106. ‰ªé‰∏≠Â∫è‰∏éÂêéÂ∫èÈÅçÂéÜÂ∫èÂàóÊûÑÈÄ†‰∫åÂèâÊ†ëÈ¢òÁõÆÊèèËø∞ÔºöÊ†πÊçÆ‰∏ÄÊ£µÊ†ëÁöÑ‰∏≠Â∫èÈÅçÂéÜ‰∏éÂêéÂ∫èÈÅçÂéÜÊûÑÈÄ†‰∫åÂèâÊ†ë„ÄÇ Ê≥®ÊÑè: ‰Ω†ÂèØ‰ª•ÂÅáËÆæÊ†ë‰∏≠Ê≤°ÊúâÈáçÂ§çÁöÑÂÖÉÁ¥†„ÄÇ ‰æãÂ¶ÇÔºåÁªôÂá∫ ‰∏≠Â∫èÈÅçÂéÜ inorder = [9,3,15,20,7] ÂêéÂ∫èÈÅçÂéÜ postorder = [9,15,7,20,3] Áü•ËØÜÁÇπÔºö‰∫åÂèâÊ†ë‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223242526272829303132333435363738394041424344454647/** * Definition for a binary tree node. * public class TreeNode &#123; * int val; * TreeNode left; * TreeNode right; * TreeNode() &#123;&#125; * TreeNode(int val) &#123; this.val = val; &#125; * TreeNode(int val, TreeNode left, TreeNode right) &#123; * this.val = val; * this.left = left; * this.right = right; * &#125; * &#125; */class Solution &#123; Map&lt;Integer,Integer&gt; map= new HashMap&lt;&gt;(); int[] postorder; public TreeNode buildTree(int[] inorder, int[] postorder) &#123; this.postorder=postorder; int len = inorder.length; for(int i=0;i&lt;inorder.length;i++)&#123; map.put(inorder[i],i); &#125; TreeNode root = dfs(len-1,0,len-1); return root; &#125; /** * ÂØπÂΩìÂâçËäÇÁÇπÁöÑÂ∑¶Âè≥Â≠êÊ†ëËøõË°åÊûÑÂª∫ * @param rootIndex Ê†πËäÇÁÇπÂú®ÂêéÂ∫èÈÅçÂéÜ‰∏≠ÁöÑ‰ΩçÁΩÆ * @param leftIndex ÂΩìÂâçÂ≠êÊ†ëÂú®‰∏≠Â∫èÈÅçÂéÜ‰∏≠ÁöÑÂ∑¶ËæπÁïå * @param rightIndex ÂΩìÂâçÂ≠êÊ†ëÂú®‰∏≠Â∫èÈÅçÂéÜ‰∏≠ÁöÑÂè≥ËæπÁïå * @return Ê†πËäÇÁÇπ */ private TreeNode dfs(int rootIndex, int leftIndex, int rightIndex) &#123; if(leftIndex&gt;rightIndex)&#123; return null; &#125; TreeNode node = new TreeNode(postorder[rootIndex]); int rootInorder = map.get(postorder[rootIndex]); int leftLen = rootInorder-leftIndex; node.left=dfs(rootIndex-(rightIndex-leftIndex+1)+leftLen,leftIndex, rootInorder-1); node.right=dfs(rootIndex-1,rootInorder+1,rightIndex); return node; &#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"‰∫åÂèâÊ†ë","slug":"‰∫åÂèâÊ†ë","permalink":"http://example.com/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"}]},{"title":"leetcode-ÈáçÊéíÈìæË°®","slug":"leetcode-ÈáçÊéíÈìæË°®","date":"2021-06-09T16:00:00.000Z","updated":"2021-08-10T02:58:05.991Z","comments":true,"path":"2021/06/10/leetcode-ÈáçÊéíÈìæË°®/","link":"","permalink":"http://example.com/2021/06/10/leetcode-%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8/","excerpt":"","text":"206. ÂèçËΩ¨ÈìæË°®ÂèçËΩ¨‰∏Ä‰∏™ÂçïÈìæË°®„ÄÇ ËæìÂÖ•: 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL ËæìÂá∫: 5-&gt;4-&gt;3-&gt;2-&gt;1-&gt;NULL ÂàÜÊûêÔºöÊ≤°Âï•Â•ΩÂàÜÊûêÁöÑ,ÈÄíÂΩíÂ∞±Ë°å‰∫Ü. ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920class Solution &#123; public ListNode reverseList(ListNode head) &#123; if(head==null||head.next==null)&#123; return head; &#125; ListNode pre=null; while(head!=null)&#123; //ËÆ∞ÂΩï‰∏ã‰∏Ä‰∏™ËäÇÁÇπ ListNode tmpNext=head.next; //‰ΩøÂΩìÂâçËäÇÁÇπÊåáÂêëÂâç‰∏Ä‰∏™ËäÇÁÇπ head.next=pre; //Êõ¥Êñ∞ÂâçËäÇÁÇπ pre=head; //Êõ¥Êñ∞head head=tmpNext; &#125; // head.next=pre; return pre; &#125;&#125; 92. ÂèçËΩ¨ÈìæË°® IIÁªô‰Ω†ÂçïÈìæË°®ÁöÑÂ§¥ÊåáÈíàheadÂíå‰∏§‰∏™Êï¥Êï∞ left Âíå right ÔºåÂÖ∂‰∏≠ left &lt;= right „ÄÇËØ∑‰Ω†ÂèçËΩ¨‰ªé‰ΩçÁΩÆ left Âà∞‰ΩçÁΩÆ right ÁöÑÈìæË°®ËäÇÁÇπÔºåËøîÂõûÂèçËΩ¨ÂêéÁöÑÈìæË°®„ÄÇ ËæìÂÖ•Ôºöhead = [1,2,3,4,5], left = 2, right = 4 ËæìÂá∫Ôºö[1,4,3,2,5] ÂàÜÊûêÔºöËØ¥ÁôΩ‰∫ÜÂ∞±ÊòØÂèçËΩ¨ÊåáÂÆöÂå∫Èó¥ÁöÑÈìæË°®ÔºåÂÖ∂‰ªñ‰∏çÂèòÔºõËøô‰∏™ÂèØ‰ª•Áî®Â§¥ÊèíÊ≥ïÔºàÂ∞±ÊòØÊñ∞Â¢ûËäÇÁÇπÊèíÂú®Â§¥ÈÉ®ÔºâÔºåÂÖ∂ÂÆû‰∏çÈöæÔºåÂ∞±ÊòØÊ≥®ÊÑèÁªÜËäÇÈóÆÈ¢ò„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223242526272829303132333435/** * Definition for singly-linked list. * public class ListNode &#123; * int val; * ListNode next; * ListNode() &#123;&#125; * ListNode(int val) &#123; this.val = val; &#125; * ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125; * &#125; */class Solution &#123; public ListNode reverseBetween(ListNode head, int left, int right) &#123; if(head.next==null||left==right)&#123; return head; &#125; int index = 1; ListNode dummyHead = new ListNode(-1,head); ListNode preNode = dummyHead; while(index&lt;left)&#123; preNode = preNode.next; ++index; &#125; int count = right-left; ListNode curNode = preNode.next; ListNode suc = null; while(count&gt;0)&#123; suc = curNode.next; curNode.next = suc.next; suc.next = preNode.next; preNode.next = suc; count--; &#125; return dummyHead.next; &#125;&#125; 24. ‰∏§‰∏§‰∫§Êç¢ÈìæË°®‰∏≠ÁöÑËäÇÁÇπÁªôÂÆö‰∏Ä‰∏™ÈìæË°®Ôºå‰∏§‰∏§‰∫§Êç¢ÂÖ∂‰∏≠Áõ∏ÈÇªÁöÑËäÇÁÇπÔºåÂπ∂ËøîÂõû‰∫§Êç¢ÂêéÁöÑÈìæË°®„ÄÇ ‰Ω†‰∏çËÉΩÂè™ÊòØÂçïÁ∫ØÁöÑÊîπÂèòËäÇÁÇπÂÜÖÈÉ®ÁöÑÂÄºÔºåËÄåÊòØÈúÄË¶ÅÂÆûÈôÖÁöÑËøõË°åËäÇÁÇπ‰∫§Êç¢„ÄÇ Á§∫‰æã 1Ôºö ËæìÂÖ•Ôºöhead = [1,2,3,4] ËæìÂá∫Ôºö[2,1,4,3] Áü•ËØÜÁÇπÔºöÈìæË°®ÂàÜÊûêÔºöÈô§‰∫Ü‰∫íÁõ∏‰∫§Êç¢ÁöÑ‰∏§‰∏™ËäÇÁÇπ‰πãÂ§ñÔºåËøòÈúÄË¶ÅÂâç‰∏Ä‰∏™ËäÇÁÇπËøõË°åËæÖÂä©„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425/** * Definition for singly-linked list. * public class ListNode &#123; * int val; * ListNode next; * ListNode() &#123;&#125; * ListNode(int val) &#123; this.val = val; &#125; * ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125; * &#125; */class Solution &#123; public ListNode swapPairs(ListNode head) &#123; ListNode dummyHead = new ListNode(-1,head); ListNode preHead = dummyHead; while(preHead.next!=null&amp;&amp;preHead.next.next!=null)&#123; ListNode start = preHead.next; ListNode end = preHead.next.next; preHead.next = end; start.next = end.next; end.next = start; preHead = start; &#125; return dummyHead.next; &#125;&#125; 25. K ‰∏™‰∏ÄÁªÑÁøªËΩ¨ÈìæË°®Áªô‰Ω†‰∏Ä‰∏™ÈìæË°®ÔºåÊØè k ‰∏™ËäÇÁÇπ‰∏ÄÁªÑËøõË°åÁøªËΩ¨ÔºåËØ∑‰Ω†ËøîÂõûÁøªËΩ¨ÂêéÁöÑÈìæË°®„ÄÇk ÊòØ‰∏Ä‰∏™Ê≠£Êï¥Êï∞ÔºåÂÆÉÁöÑÂÄºÂ∞è‰∫éÊàñÁ≠â‰∫éÈìæË°®ÁöÑÈïøÂ∫¶„ÄÇÂ¶ÇÊûúËäÇÁÇπÊÄªÊï∞‰∏çÊòØ k ÁöÑÊï¥Êï∞ÂÄçÔºåÈÇ£‰πàËØ∑Â∞ÜÊúÄÂêéÂâ©‰ΩôÁöÑËäÇÁÇπ‰øùÊåÅÂéüÊúâÈ°∫Â∫è„ÄÇ ËøõÈò∂Ôºö ‰Ω†ÂèØ‰ª•ËÆæËÆ°‰∏Ä‰∏™Âè™‰ΩøÁî®Â∏∏Êï∞È¢ùÂ§ñÁ©∫Èó¥ÁöÑÁÆóÊ≥ïÊù•Ëß£ÂÜ≥Ê≠§ÈóÆÈ¢òÂêóÔºü ‰Ω†‰∏çËÉΩÂè™ÊòØÂçïÁ∫ØÁöÑÊîπÂèòËäÇÁÇπÂÜÖÈÉ®ÁöÑÂÄºÔºåËÄåÊòØÈúÄË¶ÅÂÆûÈôÖËøõË°åËäÇÁÇπ‰∫§Êç¢„ÄÇ ÂàÜÊûê:Èô§‰∫ÜÂèçËΩ¨‰πãÂ§ñÔºåËøòÊ∂âÂèäÂà∞‰∏Ä‰∏™Ê£ÄÊü•Ââ©‰ΩôËäÇÁÇπÂ§ü‰∏çÂ§üÂèçËΩ¨ÁöÑÈóÆÈ¢òÔºåÂú®ÂèçËΩ¨‰πãÂâçÊ£ÄÊü•‰∏ãÂç≥ÂèØ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718192021222324252627282930313233343536373839404142434445464748/** * Definition for singly-linked list. * public class ListNode &#123; * int val; * ListNode next; * ListNode() &#123;&#125; * ListNode(int val) &#123; this.val = val; &#125; * ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125; * &#125; */class Solution &#123; public ListNode reverseKGroup(ListNode head, int k) &#123; if(head.next==null)&#123; return head; &#125; ListNode dummyHead = new ListNode(-1,head); ListNode pre = dummyHead; while(head!=null)&#123; ListNode tail = pre; for(int i=0;i&lt;k;i++)&#123; tail = tail.next; if(tail==null)&#123; return dummyHead.next; &#125; &#125; ListNode nextNode = tail.next; ListNode[] ans = myReverse(head,tail); head = ans[0]; tail = ans[1]; pre.next = head; tail.next = nextNode; pre = tail; head = tail.next; &#125; return dummyHead.next; &#125; private ListNode[] myReverse(ListNode head,ListNode tail)&#123; ListNode pre = tail.next; ListNode curNode = head; while(pre!=tail)&#123; ListNode suc = curNode.next; curNode.next = pre; pre = curNode; curNode = suc; &#125; return new ListNode[]&#123;tail,head&#125;; &#125;&#125; 143. ÈáçÊéíÈìæË°®ÁªôÂÆö‰∏Ä‰∏™ÂçïÈìæË°® LÔºöL0‚ÜíL1‚Üí‚Ä¶‚ÜíLn-1‚ÜíLn Ôºå Â∞ÜÂÖ∂ÈáçÊñ∞ÊéíÂàóÂêéÂèò‰∏∫Ôºö L0‚ÜíLn‚ÜíL1‚ÜíLn-1‚ÜíL2‚ÜíLn-2‚Üí‚Ä¶ ‰Ω†‰∏çËÉΩÂè™ÊòØÂçïÁ∫ØÁöÑÊîπÂèòËäÇÁÇπÂÜÖÈÉ®ÁöÑÂÄºÔºåËÄåÊòØÈúÄË¶ÅÂÆûÈôÖÁöÑËøõË°åËäÇÁÇπ‰∫§Êç¢„ÄÇ Á§∫‰æã 1: ÁªôÂÆöÈìæË°® 1-&gt;2-&gt;3-&gt;4, ÈáçÊñ∞ÊéíÂàó‰∏∫ 1-&gt;4-&gt;2-&gt;3. Á§∫‰æã 2: ÁªôÂÆöÈìæË°® 1-&gt;2-&gt;3-&gt;4-&gt;5, ÈáçÊñ∞ÊéíÂàó‰∏∫ 1-&gt;5-&gt;2-&gt;4-&gt;3. Áü•ËØÜÁÇπÔºöÈìæË°®ÂàÜÊûêÔºö‰ªîÁªÜËßÇÂØüÂèØÂèëÁé∞ÔºåÈáçÊñ∞ÊéíÂàóÊòØÂ∞ÜÈìæË°®ÂàÜ‰∏∫‰∏§ÊÆµÂêéËøõË°åÊå®‰∏™Á©øÊèíÂæóÂà∞Ôºõ‰∫éÊòØÊú¨È¢òÊÄùË∑Ø‰∏∫ÔºåÊâæÂà∞ÈìæË°®ÂêéÂçäÈÉ®ÂàÜÔºàÊ≥®ÊÑèÂ¶ÇÊûúÊòØÂ•áÊï∞Âàô‰∏çÂåÖÊã¨‰∏≠Èó¥ÈÇ£‰∏™ÔºâÂ§¥ÈÉ®ÔºõÂØπÂêéÂçäÊÆµËøõË°åÂèçËΩ¨ÔºõÁÑ∂ÂêéÂ∞Ü‰∏§ÊÆµÈìæË°®ËøõË°åÁ©øÊèí„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223242526272829303132333435363738394041424344/** * Definition for singly-linked list. * public class ListNode &#123; * int val; * ListNode next; * ListNode() &#123;&#125; * ListNode(int val) &#123; this.val = val; &#125; * ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125; * &#125; */class Solution &#123; public void reorderList(ListNode head) &#123; //ÂÖàÊâæÂà∞ÂêéÂçäÊÆµÈìæË°® ListNode fast = head,slow = head; while(fast.next!=null&amp;&amp;fast.next.next!=null)&#123; slow = slow.next; fast = fast.next.next; &#125; ListNode secHead = slow.next; slow.next = null; ListNode pre = null; // ListNode curNode = secHead; //ÂèçËΩ¨Á¨¨‰∫åÊÆµÈìæË°® while(secHead!=null)&#123; ListNode tmpNext = secHead.next; secHead.next = pre; pre = secHead; secHead = tmpNext; &#125; secHead = pre; ListNode firHead = head; //ÊãºÊé•‰∏§ÊÆµÈìæË°® while(firHead!=null&amp;&amp;secHead!=null)&#123; ListNode firNext = firHead.next; ListNode secNext = secHead.next; firHead.next = secHead; firHead = firNext; secHead.next = firHead; secHead = secNext; &#125; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"ÈìæË°®","slug":"ÈìæË°®","permalink":"http://example.com/tags/%E9%93%BE%E8%A1%A8/"}]},{"title":"leetcode-Â≤õÂ±øÈóÆÈ¢ò","slug":"leetcode-Â≤õÂ±øÈóÆÈ¢ò","date":"2021-06-07T16:00:00.000Z","updated":"2021-08-26T10:03:00.333Z","comments":true,"path":"2021/06/08/leetcode-Â≤õÂ±øÈóÆÈ¢ò/","link":"","permalink":"http://example.com/2021/06/08/leetcode-%E5%B2%9B%E5%B1%BF%E9%97%AE%E9%A2%98/","excerpt":"","text":"200. Â≤õÂ±øÊï∞ÈáèÁü•ËØÜÁÇπÔºöDFSÂàÜÊûêÔºöËøôÈ¢òËÆ©Ê±ÇÁöÑÊòØÂ≤õÂ±øÁöÑÊï∞ÈáèÊúâÂ§öÂ∞ë‰∏™ÔºåÂ∞±ÂÖ∂Ëß£Ê≥ïÊÄùË∑Ø‰∏äÂπ∂‰∏çÂõ∞Èöæ„ÄÇÂæ™ÁéØÈÅçÂéÜÊØè‰∏ÄÂùóÈôÜÂú∞ÔºåÊØèÈÅáÂà∞‰∏Ä‰∏™ÈôÜÂú∞Â∞±ÂØπÂÖ∂‰∏ä‰∏ãÂ∑¶Âè≥Âõõ‰∏™ÊñπÂêëËøõË°åÊü•ÊâæÔºåÊØèÊâæÂà∞‰∏Ä‰∏™Â∞±ËÆ©ËØ•ÈôÜÂú∞ÁΩÆ0ÔºåËøôÊ†∑Âú®ÊúÄÂ§ñÂ±ÇÈÅçÂéÜÊó∂Â∞±‰∏ç‰ºöÈáçÂ§çÈÅáÂà∞ÔºådfsÁöÑ‰∏ªË¶Å‰ΩúÁî®Â∞±ÊòØÂØπÈÅáÂà∞ÁöÑÈôÜÂú∞ËøõË°åÂõõ‰∏™ÊñπÂêëÁöÑÊü•Êâæ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728293031class Solution &#123; public int numIslands(char[][] grid) &#123; if(grid == null || grid.length==0)&#123;//ÁÆÄÂçïÂà§Êñ≠ÊòØÂê¶‰∏∫Á©∫ return 0; &#125; int count= 0,m =grid.length,n=grid[0].length; for(int i = 0;i&lt;m;i++)&#123; for(int j = 0;j&lt;n;j++)&#123;//Â§ñÂ±ÇÈÅçÂéÜ if(grid[i][j]==&#x27;1&#x27;)&#123;//Âè™Ë¶ÅÊâæÂà∞‰∏Ä‰∏™ÈôÜÂú∞ÔºåËµ∑Á†ÅÂ∞±ÊòØ‰∏Ä‰∏™Â≤õÂ±øÔºåÂØπÂÖ∂ËøõË°ådfs count++; dfs(grid,i,j); &#125; &#125; &#125; return count; &#125; void dfs(char[][] grid,int r,int c)&#123; int gr = grid.length; int gc = grid[0].length; if(r&lt;0||r&gt;=gr||c&lt;0||c&gt;=gc||grid[r][c]==&#x27;0&#x27;)&#123;//Ê≠§Â§ÑË¶ÅÊ≥®ÊÑèËæπÁïåÊù°‰ª∂ return; &#125; grid[r][c] = &#x27;0&#x27;;//ÈÅçÂéÜ‰πãÂâçËÆ∞ÂæóËÆ©ÂΩìÂâçÂ≤õÂ±ø‰∏ãÊ≤âÔºå‰∏çÁÑ∂‰πãÂêé‰ºöÂá∫Áé∞ÈáçÂ§çÊü•Êâæ dfs(grid,r+1,c); dfs(grid,r-1,c); dfs(grid,r,c+1); dfs(grid,r,c-1); &#125;&#125; 695. Â≤õÂ±øÁöÑÊúÄÂ§ßÈù¢ÁßØÁü•ËØÜÁÇπÔºödfsÂàÜÊûêÔºöËøô‰∏§ÈÅìÈ¢òÂûãÂü∫Êú¨‰∏ÄËá¥ÔºåÂè™ÊòØÂú®Êú¨È¢ò‰∏≠ÈúÄË¶ÅËÆ∞ÂΩïÁöÑÊï∞ÊçÆ‰∏çÊòØÊï∞ÈáèÔºåËÄåÊòØËÆ∞ÂΩï‰∏ãÊØèÊ¨°dfsÁöÑÊúÄÂ§ßÂÄºÔºåÂÖ≥ÈîÆÁÇπÂú®dfsÁöÑÁºñÂÜô‰∏≠ÔºåÊØèÊ¨°dfsËøîÂõû‰∏Ä‰∏™Êï∞Â≠óÔºö0ÊàñËÄÖ1„ÄÇÂØπ‰∫éÊØè‰∏™ÈôÜÂú∞ËÄåË®ÄÔºåÊúÄÂ∞èÈù¢ÁßØÊòØ1ÔºåÊúÄÁªàÈù¢ÁßØÂèñÂÜ≥‰∫éÊúâÂ§öÂ∞ëÂíåÂÆÉÈó¥Êé•„ÄÅÁõ¥Êé•Áõ∏ËøûÁöÑÈôÜÂú∞„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºöËøòÊúâ‰∏™Â≤õÂ±øÁöÑÂë®ÈïøÔºåÊàëËßâÂæóÊúâ‰∏™ÊÉ≥Ê≥ïÊå∫Áã¨Ê†ë‰∏ÄÂ∏úÁöÑÔºåÂÄºÂæóÂ≠¶‰π† 1234567891011121314151617181920212223class Solution &#123; public int maxAreaOfIsland(int[][] grid) &#123; int res=0; for(int i=0;i&lt;grid.length;i++)&#123;// for(int j=0;j&lt;grid[0].length;j++)&#123;//Â§ñÂ±ÇËøòÊòØÈÅçÂéÜ if(grid[i][j]==1)&#123; res=Math.max(res,dfs(grid,i,j)); &#125; &#125; &#125; return res; &#125; public int dfs(int[][] grid,int m,int n)&#123; //Ë¶ÅÁ°ÆÂÆöÂΩìÂâçËäÇÁÇπÂú®ËåÉÂõ¥ÂÜÖ,‰∏îÊòØ‰∏™Â≤õ if(m&lt;0||m&gt;=grid.length||n&lt;0||n&gt;=grid[0].length||grid[m][n]==0)&#123; return 0; &#125; //Â∞ÜÂΩìÂâçËäÇÁÇπÁΩÆÈõ∂ grid[m][n]=0; return 1+dfs(grid,m-1,n)+dfs(grid,m+1,n)+dfs(grid,m,n+1)+dfs(grid,m,n-1); &#125;&#125; 463. Â≤õÂ±øÁöÑÂë®ÈïøÁü•ËØÜÁÇπÔºödfsÂàÜÊûêÔºöÊÄùË∑ØÊå∫Â•ΩÔºåÂÄºÂæóÂ≠¶‰π†„ÄÇÈ¢òÁõÆ‰∏≠Â∑≤ÁªèÁ°ÆÂÆöÂè™Êúâ‰∏Ä‰∏™Â≤õÂ±ø‰∫ÜÔºåÂè™ÊòØËÆ©Ê±ÇÂá∫Â≤õÂ±øÁöÑÂë®Èïø„ÄÇÈöæÁÇπÂú®‰∫éÊÄé‰πàÁ°ÆÂÆöÂ≤õÂ±øÁöÑÂì™‰∏ÄÊù°ËæπÊòØÊúâÊïàÂë®ÈïøÔºåÊúâ‰∏™ÊÄùË∑ØÂæàÂ•ΩÔºöÂú®ÊØè‰∏™ÈôÜÂú∞Âêë‰∏ä‰∏ãÂ∑¶Âè≥Âõõ‰∏™ÊñπÂêëÊü•ÊâæÁöÑÊó∂ÂÄôÔºåÂ¶ÇÊûúÈÅáÂà∞ËæπÁïåÊàñËÄÖÊòØÊ∞¥ÂüüÔºåÂàôÂë®Èïø+1ÔºåËøô‰∏™ÊÉ≥Ê≥ïÊå∫Â•ΩÁöÑÔºåÂèØ‰ª•ËØ¥ÂæàÂÆåÁæéÁöÑË¥¥Âàá‰∫ÜÂ≤õÂ±øËæπÁöÑËøô‰∏™ÂÆö‰πâ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö Ê≥®ÔºöÂÖ∂ÂÆûËøô‰∏™Êü•ÊâæÂë®Èïø‰πüÂèØ‰ª•Êâ©Â±ï‰∏Ä‰∏ãÔºåÊîπ‰∏∫Êü•ÊâæÊúÄÂ§ßÂë®Èïø„ÄÇ 123456789101112131415161718192021222324252627282930class Solution &#123; public int islandPerimeter(int[][] grid) &#123; int res=0; for(int i=0;i&lt;grid.length;i++)&#123; for(int j=0;j&lt;grid[0].length;j++)&#123; if(grid[i][j]==1)&#123; res=dfs(grid,i,j); &#125; &#125; &#125; return res; &#125; public int dfs(int[][] grid,int r,int c)&#123; //Â¶ÇÊûú‰ªéÈôÜÂú∞ÈÅáÂà∞ËæπÁïåÔºåÂàôÂë®Èïø+1 if(!(r&gt;=0&amp;&amp;r&lt;grid.length&amp;&amp;c&gt;=0&amp;&amp;c&lt;grid[0].length))&#123; return 1; &#125; //Â¶ÇÊûú‰ªéÈôÜÂú∞ÈÅáÂà∞Ê∞¥ÂüüÔºåÂàôÂë®Èïø+1 if(grid[r][c]==0)&#123; return 1; &#125; //ËÇØÂÆöÊòØ‰∏™2ÔºåÈÇ£Â∞±ËØ¥ÊòéÂ∑≤ÁªèÊâæËøá‰∫Ü if(grid[r][c]!=1)&#123; return 0; &#125; //ÂØπÈÅçÂéÜËøáÁöÑÁÇπÔºåÁΩÆ‰∏∫2 grid[r][c]=2; return dfs(grid,r+1,c)+dfs(grid,r-1,c)+dfs(grid,r,c+1)+dfs(grid,r,c-1); &#125;&#125; 576. Âá∫ÁïåÁöÑË∑ØÂæÑÊï∞Áªô‰Ω†‰∏Ä‰∏™Â§ßÂ∞è‰∏∫ m x n ÁöÑÁΩëÊ†ºÂíå‰∏Ä‰∏™ÁêÉ„ÄÇÁêÉÁöÑËµ∑ÂßãÂùêÊ†á‰∏∫ [startRow, startColumn] „ÄÇ‰Ω†ÂèØ‰ª•Â∞ÜÁêÉÁßªÂà∞Âú®Âõõ‰∏™ÊñπÂêë‰∏äÁõ∏ÈÇªÁöÑÂçïÂÖÉÊ†ºÂÜÖÔºàÂèØ‰ª•Á©øËøáÁΩëÊ†ºËæπÁïåÂà∞ËææÁΩëÊ†º‰πãÂ§ñÔºâ„ÄÇ‰Ω† ÊúÄÂ§ö ÂèØ‰ª•ÁßªÂä® maxMove Ê¨°ÁêÉ„ÄÇ Áªô‰Ω†‰∫î‰∏™Êï¥Êï∞ m„ÄÅn„ÄÅmaxMove„ÄÅstartRow ‰ª•Âèä startColumn ÔºåÊâæÂá∫Âπ∂ËøîÂõûÂèØ‰ª•Â∞ÜÁêÉÁßªÂá∫ËæπÁïåÁöÑË∑ØÂæÑÊï∞Èáè„ÄÇÂõ†‰∏∫Á≠îÊ°àÂèØËÉΩÈùûÂ∏∏Â§ßÔºåËøîÂõûÂØπ 109 + 7 Âèñ‰Ωô ÂêéÁöÑÁªìÊûú„ÄÇ ÊèêÁ§∫Ôºö 1 &lt;= m, n &lt;= 50 0 &lt;= maxMove &lt;= 50 0 &lt;= startRow &lt; m 0 &lt;= startColumn &lt; n Áü•ËØÜÁÇπÔºöÂä®ÊÄÅËßÑÂàíÂàÜÊûêÔºöÊÑüËßâÂíåÂ≤õÂ±øÁ±ªÂûãÁöÑÈóÆÈ¢òÊØîËæÉÂÉè„ÄÇÊØè‰∏™‰ΩçÁΩÆÂè™ÊúâÂõõ‰∏™ÊñπÂêëÂèØ‰ª•ÁßªÂä®Ôºå‰∏îÊØèÊ¨°ÁßªÂä®‰πãÂêéÊúâ‰∏§ÁßçÊÉÖÂÜµÔºö1„ÄÅÊú™Âá∫ÁïåÔºõ2„ÄÅÂá∫Áïå Êú™Âá∫ÁïåÊó∂ÔºåÂΩìÂâçÊâÄÂú®‰ΩçÁΩÆÁöÑÂèØËææË∑ØÂæÑÊï∞‰∏∫‰∏ä‰∏™‰ΩçÁΩÆÁöÑË∑ØÂæÑÊï∞+ÂΩìÂâç‰ΩçÁΩÆÊú¨Ë∫´ÁöÑË∑ØÂæÑÊï∞Ôºõ Âá∫ÁïåÊó∂ÔºåÂ∞Ü‰∏ä‰∏™‰ΩçÁΩÆÁöÑÂèØËææË∑ØÂæÑÊï∞ËÆ∞ÂΩïËøõËøîÂõûÁ≠îÊ°à‰∏≠„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718192021222324252627class Solution &#123; public int findPaths(int m, int n, int maxMove, int startRow, int startColumn) &#123; final int MOD = 1000000007; int[][] directions = &#123;&#123;-1,0&#125;,&#123;1,0&#125;,&#123;0,-1&#125;,&#123;0,1&#125;&#125;; int sumCount = 0; int[][][] dp = new int[maxMove+1][m][n]; dp[0][startRow][startColumn] = 1; for(int i=0;i&lt;maxMove;i++)&#123; for(int j=0;j&lt;m;j++)&#123; for(int k=0;k&lt;n;k++)&#123; int count = dp[i][j][k]; if(count&gt;0)&#123; for(int[] direction:directions)&#123; int j1 = j+direction[0],k1 = k+direction[1]; if(j1&gt;=0&amp;&amp;j1&lt;m&amp;&amp;k1&gt;=0&amp;&amp;k1&lt;n)&#123; dp[i+1][j1][k1] = (dp[i+1][j1][k1]+count)%MOD; &#125;else&#123; sumCount = (sumCount+count)%MOD; &#125; &#125; &#125; &#125; &#125; &#125; return sumCount; &#125;&#125; 934. ÊúÄÁü≠ÁöÑÊ°•Âú®ÁªôÂÆöÁöÑ‰∫åÁª¥‰∫åËøõÂà∂Êï∞ÁªÑ A ‰∏≠ÔºåÂ≠òÂú®‰∏§Â∫ßÂ≤õ„ÄÇÔºàÂ≤õÊòØÁî±ÂõõÈù¢Áõ∏ËøûÁöÑ 1 ÂΩ¢ÊàêÁöÑ‰∏Ä‰∏™ÊúÄÂ§ßÁªÑ„ÄÇÔºâ Áé∞Âú®ÔºåÊàë‰ª¨ÂèØ‰ª•Â∞Ü 0 Âèò‰∏∫ 1Ôºå‰ª•‰Ωø‰∏§Â∫ßÂ≤õËøûÊé•Ëµ∑Êù•ÔºåÂèòÊàê‰∏ÄÂ∫ßÂ≤õ„ÄÇ ËøîÂõûÂøÖÈ°ªÁøªËΩ¨ÁöÑ 0 ÁöÑÊúÄÂ∞èÊï∞ÁõÆ„ÄÇÔºàÂèØ‰ª•‰øùËØÅÁ≠îÊ°àËá≥Â∞ëÊòØ 1 „ÄÇÔºâ Á§∫‰æã 1Ôºö ËæìÂÖ•ÔºöA = [[0,1],[1,0]] ËæìÂá∫Ôºö1 Á§∫‰æã 2Ôºö ËæìÂÖ•ÔºöA = [[0,1,0],[0,0,0],[0,0,1]] ËæìÂá∫Ôºö2 Á§∫‰æã 3Ôºö ËæìÂÖ•ÔºöA = [[1,1,1,1,1],[1,0,0,0,1],[1,0,1,0,1],[1,0,0,0,1],[1,1,1,1,1]] ËæìÂá∫Ôºö1 ÊèêÁ§∫Ôºö 2 &lt;= A.length == A[0].length &lt;= 100 A[i][j] == 0 Êàñ A[i][j] == 1 Áü•ËØÜÁÇπÔºödfs„ÄÅbfsÂàÜÊûêÔºöÂíåÂÖ∂‰ªñÂ≤õÂ±øÈ¢òÁõÆÂ∑Æ‰∏çÂ§öÔºåÊúÄÁÆÄÂçïÁöÑÊñπÊ≥ïÊòØdfsÂíåbfsÁªìÂêà‰ΩøÁî®ÔºåÂÖ∑‰ΩìÊÄùË∑ØÂ¶Ç‰∏ãÔºö Âõ†‰∏∫È¢òÁõÆË°®ÊòéÊúâ‰∏§Â∫ßÂ≤õÂ±øÔºåÈááÁî®dfsÊü•ÊâæÂÖ∂‰∏≠‰∏ÄÂ∫ßÔºåÂÜçÈÅçÂéÜËøáÁ®ã‰∏≠Â∞ÜËøô‰∏™Â≤õÂ±øÁöÑÂÄºÊîπ‰∏∫2Ôºå‰ª•Ê¨°ÂíåÂè¶Â§ñ‰∏Ä‰∏™Â≤õÂ±øÂå∫ÂàÜÔºõÂπ∂‰∏îÔºåÂú®dfsÁöÑÊó∂ÂÄôÔºåÊàë‰ª¨Â∞ÜÊâÄÊúâÂíåÁ¨¨‰∏ÄÂ∫ßÂ≤õÂ±øÁõ∏ÈÇªÁöÑÂùêÊ†áÔºàÊòØÁõ∏ÈÇªÔºâËÆ∞ÂΩïÂú®‰∏Ä‰∏™ÈòüÂàóÈáåÈù¢Ôºå‰æø‰∫é‰πãÂêéËøõË°åbfsÔºõ ‰πãÂêéÊàë‰ª¨ÂØπÈòüÂàóÈáåÈù¢ÁöÑËäÇÁÇπËøõË°åbfs„ÄÇ Ê≥®ÔºöÂú®dfsÂíåbfsÊó∂ÔºåËÆ∞ÂæóÂØπÂ∑≤ÁªèÊü•ÊâæËøáÁöÑ‰ΩúÊ†áËøõË°åÊ†áËÆ∞ÔºåÈò≤Ê≠¢Ê≠ªÂæ™ÁéØ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364class Solution &#123; //ÊÄª‰ΩìÊÄùË∑ØÔºö //ÂÖàÊâæÂà∞‰∏Ä‰∏™Â≤õÔºåËøõË°ådfsÔºåÂ∞ÜÂÖ∂ÊâÄÊúâËäÇÁÇπÊîπ‰∏∫2 //‰ªéËøô‰∏™Â≤õÂºÄÂßãÔºåËøõË°åbfsÔºåËøîÂõûÁ¨¨‰∏Ä‰∏™ÊâæÂà∞Âè¶Â§ñ‰∏Ä‰∏™Â≤õÁöÑÈïøÂ∫¶ public int shortestBridge(int[][] grid) &#123; int gRows = grid.length,gCols = grid[0].length; int dis = 0; //ÂáÜÂ§á‰∏Ä‰∏™ÈòüÂàóÔºåÂ∞ÜÁ¨¨‰∏Ä‰∏™Â≤õÂ±øÁõ∏ÈÇªÁöÑÁ©∫Âú∞Ôºà‰πüÂ∞±ÊòØ‰∏∫0ÁöÑÂùêÊ†áÔºâÊîæÂÖ•ÈòüÂàó‰∏≠Ôºå‰∏∫bfsÂÅöÂáÜÂ§á Deque&lt;int[]&gt; stack = new ArrayDeque&lt;&gt;(); boolean mark = false; for(int row=0;row&lt;gRows;row++)&#123; if(mark)&#123; break; &#125; for(int col = 0;col&lt;gCols;col++)&#123; if(grid[row][col]==1)&#123; dfs(stack,grid,row,col,gRows,gCols); mark = true; break; &#125; &#125; &#125; int[][] directions = &#123;&#123;-1,0&#125;,&#123;1,0&#125;,&#123;0,-1&#125;,&#123;0,1&#125;&#125;; while(!stack.isEmpty())&#123; dis++; int size = stack.size(); while(size&gt;0)&#123; size--; int[] coordinate = stack.removeFirst(); for(int[] direction:directions)&#123; int x = coordinate[0]+direction[0]; int y = coordinate[1]+direction[1]; if(x&gt;=0&amp;&amp;x&lt;gRows&amp;&amp;y&gt;=0&amp;&amp;y&lt;gCols)&#123; if(grid[x][y]==1)&#123; return dis; &#125;else if(grid[x][y]==2)&#123; continue; &#125; grid[x][y] = 2; stack.offerLast(new int[]&#123;x,y&#125;); &#125; &#125; &#125; &#125; return dis; &#125; //Â∞ÜÁ¨¨‰∏ÄÂ∫ßÂ≤õÊâÄÊúâÁõ∏ÈÇªÁöÑÊµ∑ÂüüÔºà‰ΩúÊ†áÂÄº‰∏∫0ÔºâÊîæÂÖ•stack‰∏≠Ôºå‰∏∫‰πãÂêéÁöÑbfsÂÅöÂáÜÂ§á //ÂêëÂõõ‰∏™ÊñπÂêëÈÅçÂéÜÊó∂ÔºåÂ¶ÇÊûúÊòØÔºå2Â∞±Áõ¥Êé•ËøîÂõûÔºõÂ¶ÇÊûúÊòØ1ÔºåÈÇ£Â∞±Êîπ‰∏∫2ÔºåÁÑ∂ÂêéÂØπÂõõ‰∏™ÊñπÂêëÊé•ÁùÄÈÅçÂéÜÔºõÂ¶ÇÊûúÊòØ0ÔºåÊîæËøõÈòüÂàóÔºåÁÑ∂ÂêéËøîÂõû public void dfs(Deque&lt;int[]&gt; stack,int[][] grid,int row,int col,int gRows,int gCols)&#123; if(row&lt;0||row&gt;=gRows||col&lt;0||col&gt;=gCols||grid[row][col]==2)&#123; return; &#125; if(grid[row][col]==0)&#123; stack.offerLast(new int[]&#123;row,col&#125;); return; &#125; grid[row][col] = 2; dfs(stack,grid,row-1,col,gRows,gCols); dfs(stack,grid,row+1,col,gRows,gCols); dfs(stack,grid,row,col-1,gRows,gCols); dfs(stack,grid,row,col+1,gRows,gCols); &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"dfs„ÄÅbfs","slug":"dfs„ÄÅbfs","permalink":"http://example.com/tags/dfs%E3%80%81bfs/"}]},{"title":"leetcode-KÂ≠ó‰πãË∞ú","slug":"leetcode-KÂ≠ó‰πãË∞ú","date":"2021-06-06T16:00:00.000Z","updated":"2021-08-11T02:25:56.500Z","comments":true,"path":"2021/06/07/leetcode-KÂ≠ó‰πãË∞ú/","link":"","permalink":"http://example.com/2021/06/07/leetcode-K%E5%AD%97%E4%B9%8B%E8%B0%9C/","excerpt":"","text":"1337. Áü©Èòµ‰∏≠ÊàòÊñóÂäõÊúÄÂº±ÁöÑ K Ë°åÁªô‰Ω†‰∏Ä‰∏™Â§ßÂ∞è‰∏∫ m * n ÁöÑÁü©Èòµ matÔºåÁü©ÈòµÁî±Ëã•Âπ≤ÂÜõ‰∫∫ÂíåÂπ≥Ê∞ëÁªÑÊàêÔºåÂàÜÂà´Áî® 1 Âíå 0 Ë°®Á§∫„ÄÇ ËØ∑‰Ω†ËøîÂõûÁü©Èòµ‰∏≠ÊàòÊñóÂäõÊúÄÂº±ÁöÑ k Ë°åÁöÑÁ¥¢ÂºïÔºåÊåâ‰ªéÊúÄÂº±Âà∞ÊúÄÂº∫ÊéíÂ∫è„ÄÇ Â¶ÇÊûúÁ¨¨ i Ë°åÁöÑÂÜõ‰∫∫Êï∞ÈáèÂ∞ë‰∫éÁ¨¨ j Ë°åÔºåÊàñËÄÖ‰∏§Ë°åÂÜõ‰∫∫Êï∞ÈáèÁõ∏Âêå‰ΩÜ i Â∞è‰∫é jÔºåÈÇ£‰πàÊàë‰ª¨ËÆ§‰∏∫Á¨¨ i Ë°åÁöÑÊàòÊñóÂäõÊØîÁ¨¨ j Ë°åÂº±„ÄÇ ÂÜõ‰∫∫ ÊÄªÊòØ ÊéíÂú®‰∏ÄË°å‰∏≠ÁöÑÈù†Ââç‰ΩçÁΩÆÔºå‰πüÂ∞±ÊòØËØ¥ 1 ÊÄªÊòØÂá∫Áé∞Âú® 0 ‰πãÂâç„ÄÇ Á§∫‰æã 1Ôºö 12345678910111213141516ËæìÂÖ•Ôºömat = [[1,1,0,0,0], [1,1,1,1,0], [1,0,0,0,0], [1,1,0,0,0], [1,1,1,1,1]], k = 3ËæìÂá∫Ôºö[2,0,3]Ëß£ÈáäÔºöÊØèË°å‰∏≠ÁöÑÂÜõ‰∫∫Êï∞ÁõÆÔºöË°å 0 -&gt; 2 Ë°å 1 -&gt; 4 Ë°å 2 -&gt; 1 Ë°å 3 -&gt; 2 Ë°å 4 -&gt; 5 ‰ªéÊúÄÂº±Âà∞ÊúÄÂº∫ÂØπËøô‰∫õË°åÊéíÂ∫èÂêéÂæóÂà∞ [2,0,3,1,4] Á§∫‰æã 2Ôºö 1234567891011121314ËæìÂÖ•Ôºömat = [[1,0,0,0], [1,1,1,1], [1,0,0,0], [1,0,0,0]], k = 2ËæìÂá∫Ôºö[0,2]Ëß£ÈáäÔºö ÊØèË°å‰∏≠ÁöÑÂÜõ‰∫∫Êï∞ÁõÆÔºöË°å 0 -&gt; 1 Ë°å 1 -&gt; 4 Ë°å 2 -&gt; 1 Ë°å 3 -&gt; 1 ‰ªéÊúÄÂº±Âà∞ÊúÄÂº∫ÂØπËøô‰∫õË°åÊéíÂ∫èÂêéÂæóÂà∞ [0,2,3,1] Áü•ËØÜÁÇπÔºö‰∫åÂàÜÊü•Êâæ„ÄÅÂ†ÜÊéíÂ∫èÂàÜÊûêÔºöËøô‰∏™È¢òÁõÆÁöÑËß£ÂÜ≥ÂàÜ‰∏∫‰∏§Ê≠•ÔºöÊâæÂá∫ÊØè‰∏ÄË°å1ÁöÑ‰∏™Êï∞ÔºõÊåâÊØèË°å1ÁöÑ‰∏™Êï∞„ÄÅË°åÁöÑÁ¥¢ÂºïËøõË°åÊéíÂ∫è„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö1234567891011121314151617181920212223242526272829303132333435class Solution &#123; public int[] kWeakestRows(int[][] mat, int k) &#123; int len = mat.length,n = mat[0].length; ArrayList&lt;int[]&gt; lists = new ArrayList&lt;&gt;(); for(int i=0;i&lt;len;i++)&#123; int left = 0,right = n-1,pos = -1; while(left&lt;=right)&#123; int mid = left+(right-left)/2; if(mat[i][mid]==0)&#123; right = mid-1; &#125;else&#123; pos = mid; left = mid+1; &#125; &#125; lists.add(new int[]&#123;pos+1,i&#125;); &#125; Collections.sort(lists, new Comparator&lt;int[]&gt;() &#123; @Override public int compare(int[] o1, int[] o2) &#123; if(o1[0]!=o2[0])&#123; return o1[0]-o2[0]; &#125;else&#123; return o1[1]-o2[1]; &#125; &#125; &#125;); int[] res = new int[k]; for(int i=0;i&lt;k;i++)&#123; res[i] = lists.get(i)[1]; &#125; return res; &#125;&#125; Ê≥®ÔºöÊàëËøôÈáåÈááÁî®‰∫ÜÊôÆÈÄöÊéíÂ∫èÔºå[È¢òËß£](Áü©Èòµ‰∏≠ÊàòÊñóÂäõÊúÄÂº±ÁöÑ K Ë°å - Áü©Èòµ‰∏≠ÊàòÊñóÂäõÊúÄÂº±ÁöÑ K Ë°å - ÂäõÊâ£ÔºàLeetCodeÔºâ (leetcode-cn.com))ÈáåÈááÁî®ÁöÑÊòØÂ∞èÈ°∂Â†ÜÔºåÂøòËÆ∞ÁöÑËØùÂèØ‰ª•Áúã‰∏ã„ÄÇ 215. Êï∞ÁªÑ‰∏≠ÁöÑÁ¨¨K‰∏™ÊúÄÂ§ßÂÖÉÁ¥†Âú®Êú™ÊéíÂ∫èÁöÑÊï∞ÁªÑ‰∏≠ÊâæÂà∞Á¨¨ k ‰∏™ÊúÄÂ§ßÁöÑÂÖÉÁ¥†„ÄÇËØ∑Ê≥®ÊÑèÔºå‰Ω†ÈúÄË¶ÅÊâæÁöÑÊòØÊï∞ÁªÑÊéíÂ∫èÂêéÁöÑÁ¨¨ k ‰∏™ÊúÄÂ§ßÁöÑÂÖÉÁ¥†ÔºåËÄå‰∏çÊòØÁ¨¨ k ‰∏™‰∏çÂêåÁöÑÂÖÉÁ¥†„ÄÇ Á§∫‰æã 1: ËæìÂÖ•: [3,2,1,5,6,4] Âíå k = 2 ËæìÂá∫: 5 Á§∫‰æã 2: ËæìÂÖ•: [3,2,3,1,2,4,5,5,6] Âíå k = 4 ËæìÂá∫: 4 Áü•ËØÜÁÇπÔºöÂ†Ü„ÄÅÂø´Êéí ÂàÜÊûêÔºö ÂèØ‰ª•Áª¥Êä§‰∏Ä‰∏™Â§ßÈ°∂Â†ÜÔºåÂà†Èô§kÊ¨°ÊúÄÂ§ßÂÖÉÁ¥†ÔºåÊØèÊ¨°Âà†Èô§ÂÖÉÁ¥†‰πãÂêéÂ∞±ÈáçÊñ∞Ë∞ÉÊï¥Â†ÜÂÜÖÁöÑÊï∞ÊçÆ‰ΩçÁΩÆÔºåÊ≠§Êó∂Â∞±ÊòØÁ¨¨KÂ§ßÁöÑÂÖÉÁ¥†ÔºõËøôÈáåÁÆÄÂçïÂàõÂª∫Âπ∂Áª¥Êä§‰∏Ä‰∏™Â§ßÈ°∂Â†Ü„ÄÇ ‰ª£Á†ÅÂÖ•‰∏ãÔºöÔºàÂ†ÜÊéíÂ∫èÊ≥ïÔºâ 123456789101112131415161718192021222324252627package LC0215_kth_largest_element_in_an_array;import java.util.Comparator;import java.util.PriorityQueue;public class KthLargestElementInAnArray &#123; public int findKthLargest(int[] nums, int k) &#123; //Âª∫Á´ãÂ§ßÈ°∂Â†Ü PriorityQueue&lt;Integer&gt; priorityQueue = new PriorityQueue&lt;&gt;(new Comparator&lt;Integer&gt;() &#123; @Override public int compare(Integer o1, Integer o2) &#123; return o2 - o1; &#125; &#125;); for(int num:nums)&#123; priorityQueue.offer(num); &#125; int ans = 0; while(k&gt;1)&#123; priorityQueue.poll(); --k; &#125; ans = priorityQueue.peek(); return ans; &#125;&#125; Èô§‰∫ÜÁõ¥Êé•Áî®PriorityQueue‰πãÂ§ñÔºå‰πüÂæóÁü•ÈÅìÊòØÊÄé‰πàÂª∫Á´ãÂ§ßÈ°∂Â†ÜÁöÑÔºàÂ∞èÈ°∂Â†ÜÂêåÁêÜÔºâ 1234567891011121314151617181920212223242526272829303132333435363738394041424344class Solution &#123; public int findKthLargest(int[] nums, int k) &#123; int len=nums.length; //ÂàõÂª∫‰∏Ä‰∏™Â§ßÈ°∂Â†ÜÔºålen‰∏∫Â†ÜÁöÑÂ§ßÂ∞è buildHeap(nums,len); //Ë¶ÅÊâæÂà∞Á¨¨kÂ§ßÁöÑÂÖÉÁ¥†ÔºåÈúÄË¶ÅÂâîÈô§k-1‰∏™Êï∞ÊçÆÔºå‰πüÂ∞±ÊòØÊâßË°åk-1Ê¨°ÔºåÊâÄÊúâi&gt;=nums.length-1-Ôºàk-2Ôºâ for(int i=nums.length-1;i&gt;=nums.length-k+1;--i)&#123; //Â∞ÜÊúÄÂ∞èÁöÑÂÖÉÁ¥†ÂêåÊúÄÂ§ßÁöÑÂÖÉÁ¥† swap(nums,0,i); --len; //ÊØèÊ¨°Ê∂àÈô§ÂÖÉÁ¥†‰πãÂêéÔºåÈáçÊñ∞Ë∞ÉÊï¥Â†Ü maxHeapify(nums,0,len); &#125; return nums[0]; &#125; //ÂàõÂª∫‰∏Ä‰∏™Â§ßÈ°∂Â†Ü public void buildHeap(int[] nums,int len)&#123; for(int i=len/2;i&gt;=0;i--)&#123;//Ê≠§Â§Ñi‰∏∫Â†Ü‰∏≠ÊúÄÈù†ÂêéÁöÑ‰∏Ä‰∏™ÊúâÂ≠êÊ†ëÁöÑËäÇÁÇπÔºå‰æùÊ¨°Âêë‰∏äË∞ÉÊï¥ÊâÄÊúâÂ∏¶ÊúâÂ≠êÊ†ëÁöÑËäÇÁÇπ maxHeapify(nums,i,len); &#125; &#125; public void maxHeapify(int[] nums,int i,int size)&#123; //left‰∏∫iÁöÑÂ∑¶Â≠êÊ†ëÔºåright‰∏∫iÁöÑÂè≥Â≠êÊ†ë int left=2*i+1,right=2*i+2; //ÈªòËÆ§i‰∏∫ÂΩìÂâçÂ∞èÂ≠êÊ†ë‰∏≠ÁöÑÊúÄÂ§ßÂÄº int largest=i; if(left&lt;size&amp;&amp;nums[left]&gt;nums[largest])&#123; largest=left; &#125; if(right&lt;size&amp;&amp;nums[right]&gt;nums[largest])&#123; largest=right; &#125; if(largest!=i)&#123;//Á°Æ‰øùi‰ΩçÁΩÆÁöÑÂÄº‰∏∫ÂΩìÂâçÂ∞èÂ≠êÊ†ëÁöÑ‰∏≠ÁöÑÊúÄÂ§ßÂÄº swap(nums,i,largest); maxHeapify(nums,largest,size);//Âπ∂Ë∞ÉÊï¥‰∏ãÊõ¥Êç¢Ëøá‰ΩçÁΩÆÁöÑÂ≠êÊ†ë &#125; &#125; public void swap(int[] nums,int i,int j)&#123; int tmp=nums[i]; nums[i]=nums[j]; nums[j]=tmp; &#125;&#125; Ëøô‰∏™È¢òÁõÆËøòÊúâ‰∏™Ëß£Ê≥ïÔºåÂèØ‰ª•Áî®Âø´ÊéíÁöÑÊÄùÊÉ≥Êù•Ëß£ÂÜ≥ÔºöÊàë‰ª¨ÊâæÂà∞‰∏Ä‰∏™Êï∞ÁªÑÂÜÖÁöÑÈöèÊú∫Êï∞ÔºåÁÑ∂ÂêéÂ∞ÜÂÖ∂ÊîæÁΩÆÂú®ÂêàÈÄÇÁöÑ‰ΩçÁΩÆÔºåÂ¶ÇÊûúËøô‰∏™‰ΩçÁΩÆÂàöÂ•ΩÊòØÊàë‰ª¨Ê±ÇÁöÑ‰ΩçÁΩÆÔºåÈÇ£Â∞±Áõ¥Êé•ËøîÂõûËøô‰∏™Êï∞Â≠óÂç≥ÂèØ„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051/** * Ëß£Ê≥ï‰∫åÔºöÂø´Êéí * @param nums * @param k * @return */ public int findKthLargest2(int[] nums, int k) &#123; return quickSelect(nums,0,nums.length-1,nums.length-k); &#125; private int quickSelect(int[] nums, int left, int right, int index) &#123; int q = randomPartition(nums,left,right); if(q==index)&#123; return nums[q]; &#125;else&#123; return q&lt;index?quickSelect(nums, q+1, right, index):quickSelect(nums, left, q-1, index); &#125; &#125; /** * Âú®leftÂíåright‰πãÈó¥ÈöèÊú∫‰∏Ä‰∏™‰ΩçÁΩÆÔºåÂπ∂Â∞ÜËØ•‰ΩçÁΩÆÁöÑÊï∞Â≠óÊîæÁΩÆÂêàÈÄÇÁöÑ‰ΩçÁΩÆ * @param nums * @param left * @param right * @return */ private int randomPartition(int[] nums, int left, int right) &#123; Random random = new Random(); int randomIndex = random.nextInt(right-left+1)+left; swap(nums,randomIndex,right); int x = nums[right],curIndex = left-1; for(int i=left;i&lt;right;i++)&#123; if(nums[i]&lt;x)&#123; swap(nums,++curIndex,i); &#125; &#125; swap(nums,curIndex+1,right); return curIndex+1; &#125; /** * Ë¥üË¥£‰∫§Êç¢ÊåáÂÆöÁöÑ‰∏§‰∏™‰ΩçÁΩÆ * @param nums * @param index1 * @param index2 */ private void swap(int[] nums, int index1, int index2) &#123; int num = nums[index1]; nums[index1] = nums[index2]; nums[index2] = num; &#125; 347. Ââç K ‰∏™È´òÈ¢ëÂÖÉÁ¥†ÁªôÂÆö‰∏Ä‰∏™ÈùûÁ©∫ÁöÑÊï¥Êï∞Êï∞ÁªÑÔºåËøîÂõûÂÖ∂‰∏≠Âá∫Áé∞È¢ëÁéáÂâç k È´òÁöÑÂÖÉÁ¥†„ÄÇ Á§∫‰æã 1: ËæìÂÖ•: nums = [1,1,1,2,2,3], k = 2 ËæìÂá∫: [1,2] Á§∫‰æã 2: ËæìÂÖ•: nums = [1], k = 1 ËæìÂá∫: [1] Áü•ËØÜÁÇπÔºöÂ†ÜÂàÜÊûêÔºöÂè™Ë¶ÅÊòØÊü•ÊâæÂâçk‰∏™ÂÖÉÁ¥†ÔºåÈ¶ñÂÖàËÄÉËôëÂ†ÜÁªìÊûÑÁöÑ‰ΩøÁî®Ôºõ‰ª•‰∏ãÁî®ÁöÑÊòØjavaËá™Â∏¶ÁöÑÂ†ÜÁªìÊûÑÔºåËØ∑Â§öÁªÉ‰π†Âπ∂ÁÜüÊÇâÊìç‰Ωú„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö12345678910111213141516171819202122232425262728293031323334353637class Solution &#123; public int[] topKFrequent(int[] nums, int k) &#123; HashMap&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;(); //ÂàõÂª∫‰∏Ä‰∏™mapÔºåmapÁöÑk‰∏∫ÂÖÉÁ¥†ÂÄºÔºåv‰∏∫ÂÖÉÁ¥†Âá∫Áé∞ÁöÑÈ¢ëÁéá for(int num : nums)&#123; map.put(num, map.getOrDefault(num, 0)+1); &#125; //ÂàõÂª∫‰∏Ä‰∏™Â∞èÈ°∂Â†ÜÔºåÊ≥®ÊÑècomparatorÁöÑ‰ΩøÁî®ÔºåÊòØÁ°Æ‰øùÂâçkÂ§ßËøòÊòØÂâçkÂ∞èÁöÑÂÖ≥ÈîÆ PriorityQueue&lt;Integer&gt; pq = new PriorityQueue&lt;&gt;(new Comparator&lt;Integer&gt;() &#123; @Override public int compare(Integer o1, Integer o2) &#123; return map.get(o1)-map.get(o2);//Êåâvalue‰ªéÂ∞èÂà∞Â§ßÊéíÂ∫è &#125; &#125;); //Áª¥ÊåÅ‰∏Ä‰∏™Êï∞Èáè‰∏∫kÁöÑÂ∞èÈ°∂Â†Ü //Ê≠§Â§ÑËß£Èáä‰∏ã‰∏∫‰ªÄ‰πàÊòØÂ∞èÈ°∂Â†Ü //Êàë‰ª¨Ë¶ÅÊâæÁöÑÊòØÂâçkÂ§ßÁöÑÂÖÉÁ¥†ÔºåÂê¨‰∏äÂéªÔºåÂ∫îËØ•Âª∫Á´ã‰∏Ä‰∏™ÂÆπÈáè‰∏∫kÁöÑÂ§ßÈ°∂Â†ÜÔºõ //‰ΩÜÊòØÔºåhashÈõÜÂêàÁöÑkeyÊòØÂÖÉÁ¥†ÔºåvalueÊòØÈ¢ëÁéáÔºåÊó†Ê≥ïÊ†πÊçÆvalueÊâæÂà∞key //ÊïÖÔºåÂª∫Á´ã‰∏Ä‰∏™Â∞èÈ°∂Â†ÜÔºåÊØèÊ¨°ÊõøÊç¢Â†ÜÈ°∂ÁöÑÈÇ£‰∏™ÂÖÉÁ¥†Ôºà‰πüÂ∞±ÊòØÈ¢ëÁéáÊúÄ‰ΩéÁöÑÂÖÉÁ¥†Ôºâ //ÂΩìÈÅçÂéÜÂÆåÊâÄÊúâÁöÑÂÖÉÁ¥†Êó∂ÔºåÂ†ÜÈáåÁöÑÊâÄÊúâÂÖÉÁ¥†Âç≥ÊòØÊâÄÊ±Ç for (Integer key :map.keySet()) &#123; if(pq.size()&lt;k)&#123; pq.add(key); &#125;else if(map.get(key)&gt;map.get(pq.peek()))&#123;//Â¶ÇÊûúmapÈáåÁöÑÂÄºÂ§ß‰∫éÂΩìÂâçÂ†ÜÈ°∂ÂÄºÔºåÂ∞±ÊõøÊç¢Ëøô‰∏™Â†ÜÈ°∂ pq.remove(); pq.add(key); &#125; &#125; //ÂèñÂá∫Â∞èÈ°∂Â†Ü‰∏≠ÁöÑÊâÄÊúâÂÖÉÁ¥† int[] res = new int[pq.size()]; int i=0; while (!pq.isEmpty())&#123; res[i++]=(pq.remove()); &#125; return res; &#125;&#125;","categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Â†ÜÊéíÂ∫è„ÄÅÂø´Êéí„ÄÅ‰∫åÂàÜ","slug":"Â†ÜÊéíÂ∫è„ÄÅÂø´Êéí„ÄÅ‰∫åÂàÜ","permalink":"http://example.com/tags/%E5%A0%86%E6%8E%92%E5%BA%8F%E3%80%81%E5%BF%AB%E6%8E%92%E3%80%81%E4%BA%8C%E5%88%86/"}]},{"title":"SpringÂÆûÊàòÁ¨¨ÂõõÁâàËØª‰π¶Á¨îËÆ∞","slug":"SpringÂÆûÊàòÁ¨¨ÂõõÁâàËØª‰π¶Á¨îËÆ∞","date":"2021-06-03T16:00:00.000Z","updated":"2021-06-10T01:50:49.559Z","comments":true,"path":"2021/06/04/SpringÂÆûÊàòÁ¨¨ÂõõÁâàËØª‰π¶Á¨îËÆ∞/","link":"","permalink":"http://example.com/2021/06/04/Spring%E5%AE%9E%E6%88%98%E7%AC%AC%E5%9B%9B%E7%89%88%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/","excerpt":"","text":"SpringÂÆûÊàòÁ¨¨ÂõõÁâàspringÊú¨Ë¥®‰∏äÊòØÁÆÄÂåñjavaÂºÄÂèë„ÄÇ Âá†‰∏™ÁÆÄÂÜôÔºö EJB Enterprise JavaBean ‰ºÅ‰∏öÁ∫ßjavabean JDO Java Data Object javaÊï∞ÊçÆÂØπË±° POJO Plian Old Java Object ÁÆÄÂçïËÄÅÂºèjavaÂØπË±° DI Dependency Injection ‰æùËµñÊ≥®ÂÖ• AOP Aspect-Oriented Programing Èù¢ÂêëÂàáÈù¢ÁºñÁ®ã Á¨¨‰∏ÄÁ´†ÔºöÁÆÄ‰ªãÊÄé‰πàÁÆÄÂåñjavaÂºÄÂèëÁöÑÔºöÈÄöËøáDIÂíåAOPÂÆûÁé∞ÊùæËÄ¶ÂêàÔºõÂü∫‰∫éÂàáÈù¢ÂíåÊÉØ‰æãËøõË°åÂ£∞ÊòéÂºèÁºñÁ®ãÔºõÈÄöËøáÂàáÈù¢ÂíåÊ®°ÊùøÂáèÂ∞ëÊ†∑ÊùøÂºè‰ª£Á†Å AOPÁöÑ‰ΩúÁî®ÔºöAOPÈÄöËøáÂ∞ÜÈÅçÂ∏ÉÂ∫îÁî®ÂêÑÂ§ÑÁöÑÂäüËÉΩÂàÜÁ¶ªÂá∫Êù•ÔºåÂΩ¢ÊàêÂèØÈáçÁî®ÁöÑÁªÑ‰ª∂Ôºå‰ªéËÄåÁ°Æ‰øùpojoÁöÑÁÆÄÂçïÊÄß SpringÂÆπÂô®ÔºöÂ∞Ü‰∏Ä‰∏™Á±ªËΩ¨Âåñ‰∏∫‰∏Ä‰∏™ÂàáÈù¢ÔºåÈ¶ñÂÖàÈúÄË¶ÅÂ∞ÜÂÖ∂Â£∞Êòé‰∏∫‰∏Ä‰∏™SpringBeanÔºåbeanÂØπË±°ÁîüÂ≠ò‰∫éSpringÂÆπÂô®‰∏≠Ôºõ SpringÁöÑÂÆπÂô®ÂàÜ‰∏∫‰∏§Â§ßÁ±ªÔºöbeanÂ∑•ÂéÇÂíåÂ∫îÁî®‰∏ä‰∏ãÊñá„ÄÇ Á¨¨‰∫åÁ´†ÔºöË£ÖÈÖçbeanË£ÖÈÖçbeanÊúâ‰∏âÁßçÊñπÂºèÔºö 1„ÄÅxmlÈÖçÁΩÆ 2„ÄÅjavaÊòæÁ§∫Ë£ÖÈÖç 3„ÄÅËá™Âä®Ë£ÖÈÖç„ÄêÈáçË¶Å„Äë Ëá™Âä®Ë£ÖÈÖçÊúÄ‰∏∫‰æøÊç∑„ÄÇ ‰ª•‰∏ã‰∏∫ÁÆÄÂçïÁöÑËá™Âä®Ë£ÖÈÖç ÂàÜÂà´ÂàõÂª∫‰∏â‰∏™pojoÂπ∂ËøõË°åÊ≥®Ëß£ 12345678910package com.learn.springlearn.exm3;import org.springframework.stereotype.Component;//Á¨¨‰∏Ä‰∏™pojo@Componentpublic class Cat &#123; public void voice()&#123; System.out.println(&quot;ÂñµÂñµÂñµ&quot;); &#125;&#125; 12345678910package com.learn.springlearn.exm3;import org.springframework.stereotype.Component;//Á¨¨‰∫å‰∏™pojo@Componentpublic class Dog &#123; public void voice()&#123; System.out.println(&quot;Ê±™Ê±™Âè´&quot;); &#125;&#125; 123456789101112131415161718package com.learn.springlearn.exm3;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;//Á¨¨‰∏â‰∏™pojo@Componentpublic class Human &#123; @Autowired private Cat cat; @Autowired private Dog dog; public void say()&#123; System.out.println(&quot;ÊàëÊúâ‰∏§Âè™ÂÆ†Áâ©&quot;); cat.voice(); dog.voice(); &#125;&#125; ‰πãÂêéÂ∞Ü‰∏â‰∏™pojoÂ≠òÊîæËá≥springÂÆπÂô®‰∏≠ 123456789package com.learn.springlearn.exm3;import org.springframework.context.annotation.ComponentScan;import org.springframework.context.annotation.Configuration;@Configuration@ComponentScanpublic class Exm3Config &#123;&#125; ÊúÄÂêé‰æøÂèØÂØπÂÖ∂ËøõË°åÊµãËØï 12345678910111213141516171819202122package com.learn.exam3test;import com.learn.springlearn.exm3.Exm3Config;import com.learn.springlearn.exm3.Human;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.test.context.ContextConfiguration;import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;@ContextConfiguration(classes = Exm3Config.class)//‰∏ãÈù¢Ëøô‰∏™Ê≥®Ëß£ÂøÖÈ°ªË¶ÅÂä†Ôºå‰∏çÁÑ∂‰ºöÊä•nulllpointerexception@RunWith(SpringJUnit4ClassRunner.class)public class Exm3Test &#123; @Autowired private Human human; @Test public void test()&#123; human.say(); &#125;&#125; Á¨¨‰∏âÁ´†ÔºöÈ´òÁ∫ßË£ÖÈÖçÈÖçÁΩÆprofile beanÔºöprofileÂèØ‰ª•Ê†πÊçÆÁéØÂ¢ÉÂàõÂª∫Âì™‰∏™beanÂíå‰∏çÂàõÂª∫Âì™‰∏™bean ÊøÄÊ¥ªprofileÔºöÂ¶ÇÊûúÂÆö‰πâ‰∫Üspring.profiles.activeÔºåÈÇ£Â∞±Ê†πÊçÆËøô‰∏™ÈÖçÁΩÆËøõË°åÊøÄÊ¥ªprofile Ê≤°ËÆæÁΩÆactiveÁöÑËØùÔºåÂ¶ÇÊûúÂÆö‰πâ‰∫Üspring.profiles.defaultÔºåÈÇ£Â∞±Ê†πÊçÆdefaultËøõË°åjihuo Â¶ÇÊûúÈÉΩÊ≤°ËÆæÁΩÆÔºåÈÇ£Â∞±Âè™ÂàõÂª∫ÈÇ£‰∫õÊ≤°ÂÆö‰πâÂú®profile‰∏≠ÁöÑbean Êù°‰ª∂ÂåñÁöÑbeanÈÄöËøáÊ≥®Ëß£ConditionalÂÆûÁé∞ÔºåÂè™ÊúâÊåáÂÆöÂ±ûÊÄß‰∏çÂ≠òÂú®ÁöÑËØùÔºåÊåáÂÆöÁ±ªÂ∞±‰∏ç‰ºöË¢´ÂÆû‰æãÂåñ„ÄÇ Ëá™Âä®Ë£ÖÈÖçÁöÑÊ≠ß‰πâÊÄß‰∏Ä‰∏™Êé•Âè£‰ºöÂ≠òÂú®Â§ö‰∏™ÂÆûÁé∞Á±ªÔºåÊ≠§Êó∂ËøõË°åËá™Âä®Ë£ÖÈÖçÊó∂ÔºåspringÊó†Ê≥ïÁ°ÆÂÆöË£ÖÈÖçÂì™‰∏™Á±ª„ÄÇ„ÄÇ Ëß£ÂÜ≥ÊñπÊ≥ïÔºö 1„ÄÅËÆæÁΩÆÈ¶ñÈÄâbeanÔºö@Primary 2„ÄÅÈááÁî®ÈôêÂÆöÁ¨¶Êù•Á°ÆÂÆöË£ÖÈÖçÊåáÂÆöÁöÑbeanÔºö@QualifierÔºà‚ÄúiceCream‚ÄùÔºâÔºõ@Qualifier‰πüÂèØ‰ª•Áî®‰∫ébean‰∏äÔºåÁõ∏ÂΩì‰∫é‰∏∫ËØ•beanËÆæÁΩÆIDÔºõ@Qualifier‰πüÂèØ‰ª•Â∞ÜÊØè‰∏™beanÁöÑIDËÆæÁΩÆ‰∏∫ËØ•Á±ªÁöÑÁâπÊÄßÔºå‰∏Ä‰∏™bean‰ºöÂ≠òÂú®Â§ö‰∏™ÁâπÊÄßÔºå‰ΩÜÊòØÂêå‰∏Ä‰∏™Á±ª‰∏çÂÖÅËÆ∏Â§öÊ¨°‰ΩøÁî®Âêå‰∏Ä‰∏™Ê≥®Ëß£ÔºåÂõ†Ê≠§ÂèØËá™Ë°åÂàõÂª∫Ê≥®Ëß£ ËøêË°åÊó∂ÂÄºÊ≥®ÂÖ•ÁõÆÁöÑÔºö‰ΩøÂæó‰∏Ä‰∫õÂÄºÂú®ËøêË°åÊó∂ÂÜçÁ°ÆÂÆö ÊñπÊ≥ïÔºö 1„ÄÅÂ±ûÊÄßÂç†‰ΩçÁ¨¶ 2„ÄÅSpringË°®ËææÂºèËØ≠Ë®ÄÔºàSpELÔºâ„ÄêÈáçÁÇπ„Äë SpELÁöÑ‰ΩøÁî®ÊñπÊ≥ïÔºö Ë°®Á§∫Â≠óÈù¢ÂÄºÔºö#{3.1459}Ôºå#{‚ÄòHello‚Äô}Ôºå#{false} ÂºïÁî®bean„ÄÅÂ±ûÊÄß„ÄÅÊñπÊ≥ï #{people}Ôºå#{people.name}Ôºå#{people.speak()} Á¨¨ÂõõÁ´†ÔºöÈù¢ÂêëÂàáÈù¢ÁöÑSpringAOPÊúØËØ≠Ôºö ÈÄöÁü•ÔºàAdviceÔºâÔºöÂàáÈù¢ÁöÑÂ∑•‰ΩúË¢´Áß∞‰∏∫ÈÄöÁü•ÔºõÈÄöÁü•ÂåÖÂê´‰∫ÜÈúÄË¶ÅÁî®‰∫éÂ§ö‰∏™ÂØπË±°ÁöÑÊ®™ÂàáË°å‰∏∫„ÄÇ ËøûÊé•ÁÇπÔºàJoin PointÔºâÔºöÂú®Â∫îÁî®ÊâßË°åËøáÁ®ã‰∏≠ÊèíÂÖ•Âà∞ÂàáÈù¢ÁöÑ‰∏Ä‰∏™ÁÇπÔºåÂàáÈù¢‰ª£Á†ÅÂà©Áî®Ëøô‰∫õÁÇπÊèíÂÖ•Âà∞Â∫îÁî®ÁöÑÊ≠£Â∏∏ÊµÅÁ®ã‰πã‰∏≠ÔºåÂπ∂Ê∑ªÂä†Êñ∞ÁöÑË°å‰∏∫ÔºõËøû Êé•ÁÇπÊòØÁ®ãÂ∫èÊâßË°åËøáÁ®ã‰∏≠ËÉΩÂ§üÂ∫îÁî®ÈÄöÁü•ÁöÑÊâÄÊúâÁÇπ„ÄÇ ÂàáÁÇπÔºàPointcutÔºâÔºöÈÄöÁü•ÂÆö‰πâ‰∫ÜÂàáÈù¢ÁöÑ‚Äú‰ªÄ‰πà‚ÄùÂíå‚Äú‰ΩïÊó∂‚ÄùÔºåÂàáÁÇπÂÆö‰πâ‰∫Ü‚Äú‰ΩïÂ§Ñ‚ÄùÔºõÂàáÁÇπÂÆö‰πâ‰∫ÜÂì™‰∫õËøûÊé•ÁÇπ‰ºöÂæóÂà∞ÈÄöÁü•„ÄÇ ÂàáÈù¢ÔºàAspectÔºâÔºöÈÄöÁü•ÂíåÂàáÁÇπÊûÑÊàê‰∫ÜÂàáÈù¢ÁöÑÂÖ®ÈÉ®ÂÜÖÂÆπ„ÄÇ ÂºïÂÖ•ÔºàIntroductionÔºâÔºöÂêëÁé∞ÊúâÁöÑÁ±ªÊ∑ªÂä†Êñ∞ÁöÑÊñπÊ≥ïÂíåÂ±ûÊÄß„ÄÇ ÁªáÂÖ•ÔºàWeavingÔºâÔºöÂ∞ÜÂàáÈù¢Â∫îÁî®Âà∞ÁõÆÊ†áÂØπË±°Âπ∂ÂàõÂª∫Êñ∞ÁöÑ‰ª£ÁêÜÂØπË±°ÁöÑËøáÁ®ã„ÄÇ Á¨¨‰∫îÁ´†ÔºöÊûÑÂª∫Spring WebÂ∫îÁî®Á®ãÂ∫èË∑üË∏™Spring MVCÁöÑËØ∑Ê±Ç Âú®ËØ∑Ê±ÇÁ¶ªÂºÄÊµèËßàÂô®Êó∂(1)Ôºå‰ºöÂ∏¶ÊúâÁî®Êà∑ÊâÄËØ∑Ê±ÇÂÜÖÂÆπÁöÑ‰ø°ÊÅØÔºåËá≥Â∞ë‰ºöÂåÖÂê´ËØ∑Ê±ÇÁöÑURL„ÄÇ‰ΩÜÊòØËøòÂèØËÉΩÂ∏¶ÊúâÂÖ∂‰ªñÁöÑ‰ø°ÊÅØÔºå‰æãÂ¶ÇÁî®Êà∑Êèê‰∫§ÁöÑË°®Âçï‰ø°ÊÅØ„ÄÇËØ∑Ê±ÇÊóÖÁ®ãÁöÑÁ¨¨‰∏ÄÁ´ôÊòØSpringÁöÑDispatcherServlet„ÄÇ‰∏éÂ§ßÂ§öÊï∞Âü∫‰∫éJavaÁöÑWebÊ°ÜÊû∂‰∏ÄÊ†∑ÔºåSpring MVCÊâÄÊúâÁöÑËØ∑Ê±ÇÈÉΩ‰ºöÈÄöËøá‰∏Ä‰∏™ÂâçÁ´ØÊéßÂà∂Âô®Ôºàfront controllerÔºâSerlet„ÄÇÂâçÁ´ØÊéßÂà∂Âô®ÊòØÂ∏∏Áî®ÁöÑWebÂ∫îÁî®Á®ãÂ∫èÊ®°ÂºèÔºåÂú®ËøôÈáå‰∏Ä‰∏™ÂçïÂÆû‰æãÁöÑSerletÂ∞ÜËØ∑Ê±ÇÂßîÊâòÁªôÂ∫îÁî®Á®ãÂ∫èÁöÑÂÖ∂‰ªñÁªÑ‰ª∂Êù•ÊâßË°åÂÆûÈôÖÁöÑÂ§ÑÁêÜ„ÄÇÂú®Spring MVC‰∏≠ÔºåDispatcherServletÂ∞±ÊòØÂâçÁ´ØÊéßÂà∂Âô®„ÄÇDispatcherServletÁöÑ‰ªªÂä°ÊòØÂ∞ÜËØ∑Ê±ÇÂèëÈÄÅÁªôSpring MVCÊéßÂà∂Âô®Ôºàcontroller)„ÄÇÊéßÂà∂Âô®ÊòØ‰∏Ä‰∏™Áî®‰∫éÂ§ÑÁêÜËØ∑Ê±ÇÁöÑSpringÁªÑ‰ª∂„ÄÇÂú®ÂÖ∏ÂûãÁöÑÂ∫îÁî®Á®ãÂ∫è‰∏≠ÂèØËÉΩ‰ºöÊúâÂ§ö‰∏™ÊéßÂà∂Âô®ÔºåDispatcherservletÈúÄË¶ÅÁü•ÈÅìÂ∫îËØ•Â∞ÜËØ∑Ê±ÇÂèëÈÄÅÁªôÂì™‰∏™ÊéßÂà∂Âô®„ÄÇÊâÄ‰ª•DispatcherServlet‰ª•‰ºöÊü•ËØ¢‰∏Ä‰∏™ÊàñÂ§ö‰∏™Â§ÑÁêÜÂô®Êò†Â∞ÑÔºàhandler mapping)(2)Êù•Á°ÆÂÆöËØ∑Ê±ÇÁöÑ‰∏ã‰∏ÄÁ´ôÂú®Âì™Èáå„ÄÇÂ§ÑÁêÜÂô®Êò†Â∞Ñ‰ºöÊ†πÊçÆËØ∑Ê±ÇÊâÄÊê∫Â∏¶ÁöÑURL‰ø°ÊÅØÊù•ËøõË°åÂÜ≥Á≠ñ„ÄÇ‰∏ÄÊó¶ÈÄâÊã©‰∫ÜÂêàÈÄÇÁöÑÊéßÂà∂Âô®ÔºåDispatcherservlet‰ºöÂ∞ÜËØ∑Ê±ÇÂèëÈÄÅÁªôÈÄâ‰∏≠ÁöÑÊéßÂà∂Âô®(3)„ÄÇÂà∞‰∫ÜÊéßÂà∂Âô®ÔºåËØ∑Ê±Ç‰ºöÂç∏‰∏ãÂÖ∂Ë¥üËΩΩÔºàÁî®Êà∑Êèê‰∫§ÁöÑ‰ø°ÊÅØÔºâÂπ∂ËÄêÂøÉÁ≠âÂæÖÊéßÂà∂Âô®Â§ÑÁêÜËøô‰∫õ‰ø°ÊÅØ„ÄÇÔºàÂÆûÈôÖ‰∏äÔºåËÆæËÆ°ËâØÂ•ΩÁöÑÊéßÂà∂Âô®Êú¨Ë∫´Âè™Â§ÑÁêÜÂæàÂ∞ëÁîöËá≥‰∏çÂ§ÑÁêÜÂ∑•‰ΩúÔºåËÄåÊòØÂ∞Ü‰∏öÂä°ÈÄªËæëÂßîÊâòÁªô‰∏Ä‰∏™ÊàñÂ§ö‰∏™ÊúçÂä°ÂØπË±°ËøõË°åÂ§ÑÁêÜ„ÄÇ)ÊéßÂà∂Âô®Âú®ÂÆåÊàêÈÄªËæëÂ§ÑÁêÜÂêéÔºåÈÄöÂ∏∏‰ºö‰∫ßÁîü‰∏Ä‰∫õ‰ø°ÊÅØÔºåËøô‰∫õ‰ø°ÊÅØÈúÄË¶ÅËøîÂõûÁªôÁî®Êà∑Âπ∂Âú®ÊµèËßàÂô®‰∏äÊòæÁ§∫„ÄÇËøô‰∫õ‰ø°ÊÅØË¢´Áß∞‰∏∫Ê®°ÂûãÔºàmodelÔºâ„ÄÇ‰∏çËøá‰ªÖ‰ªÖÁªôÁî®Êà∑ËøîÂõûÂéüÂßãÁöÑ‰ø°ÊÅØÊòØ‰∏çÂ§üÁöÑ‚Äî‚ÄîËøô‰∫õ‰ø°ÊÅØÈúÄË¶Å‰ª•Áî®Êà∑ÂèãÂ•ΩÁöÑÊñπÂºèËøõË°åÊ†ºÂºèÂåñÔºå‰∏ÄËà¨‰ºöÊòØHTML„ÄÇÊâÄ‰ª•Ôºå‰ø°ÊÅØÈúÄË¶ÅÂèëÈÄÅÁªô‰∏Ä‰∏™ËßÜÂõæÔºàviewÔºâÔºåÈÄöÂ∏∏‰ºöÊòØJSP„ÄÇÊéßÂà∂Âô®ÊâÄÂÅöÁöÑÊúÄÂêé‰∏Ä‰ª∂‰∫ãÂ∞±ÊòØÂ∞ÜÊ®°ÂûãÊï∞ÊçÆÊâìÂåÖÔºåÂπ∂‰∏îÊ†áÁ§∫Âá∫Áî®‰∫éÊ∏≤ÊüìËæìÂá∫ÁöÑËßÜÂõæÂêç„ÄÇÂÆÉÊé•‰∏ãÊù•‰ºöÂ∞ÜËØ∑Ê±ÇËøûÂêåÊ®°ÂûãÂíåËßÜÂõæÂêçÂèëÈÄÅÂõûDispatcherServlet(4)„ÄÇËøôÊ†∑ÔºåÊéßÂà∂Âô®Â∞±‰∏ç‰ºö‰∏éÁâπÂÆöÁöÑËßÜÂõæÁõ∏ËÄ¶ÂêàÔºå‰º†ÈÄíÁªôDispatcherservletÁöÑËßÜÂõæÂêçÂπ∂‰∏çÁõ¥Êé•Ë°®Á§∫Êüê‰∏™ÁâπÂÆöÁöÑJSP„ÄÇÂÆûÈôÖ‰∏äÔºåÂÆÉÁîöËá≥Âπ∂‰∏çËÉΩÁ°ÆÂÆöËßÜÂõæÂ∞±ÊòØJSP„ÄÇÁõ∏ÂèçÔºåÂÆÉ‰ªÖ‰ªÖ‰º†ÈÄí‰∫Ü‰∏Ä‰∏™ÈÄªËæëÂêçÁß∞ÔºåËøô‰∏™ÂêçÂ≠óÂ∞Ü‰ºöÁî®Êù•Êü•Êâæ‰∫ßÁîüÁªìÊûúÁöÑÁúüÊ≠£ËßÜÂõæ„ÄÇDispatcherservletÂ∞Ü‰ºö‰ΩøÁî®ËßÜÂõæËß£ÊûêÂô®Ôºàview resolverÔºâ(5)Êù•Â∞ÜÈÄªËæëËßÜÂõæÂêçÂåπÈÖç‰∏∫‰∏Ä‰∏™ÁâπÂÆöÁöÑËßÜÂõæÂÆûÁé∞ÔºåÂÆÉÂèØËÉΩÊòØ‰πüÂèØËÉΩ‰∏çÊòØJSP„ÄÇÊó¢ÁÑ∂DispatcherServletÂ∑≤ÁªèÁü•ÈÅìÁî±Âì™‰∏™ËßÜÂõæÊ∏≤ÊüìÁªìÊûúÔºåÈÇ£ËØ∑Ê±ÇÁöÑ‰ªªÂä°Âü∫Êú¨‰∏ä‰πüÂ∞±ÂÆåÊàê‰∫Ü„ÄÇÂÆÉÁöÑÊúÄÂêé‰∏ÄÁ´ôÊòØËßÜÂõæÁöÑÂÆûÁé∞ÔºàÂèØËÉΩÊòØJSPÔºâ(6)ÔºåÂú®ËøôÈáåÂÆÉ‰∫§‰ªòÊ®°ÂûãÊï∞ÊçÆ„ÄÇËØ∑Ê±ÇÁöÑ‰ªªÂä°Â∞±ÂÆåÊàê‰∫Ü„ÄÇËßÜÂõæÂ∞Ü‰ΩøÁî®Ê®°ÂûãÊï∞ÊçÆÊ∏≤ÊüìËæìÂá∫ÔºåËøô‰∏™ËæìÂá∫‰ºöÈÄöËøáÂìçÂ∫îÂØπË±°‰º†ÈÄíÁªôÂÆ¢Êà∑Á´ØÔºà‰∏ç‰ºöÂÉèÂê¨‰∏äÂéªÈÇ£Ê†∑Á°¨ÁºñÁ†ÅÔºâ(7)„ÄÇÂèØ‰ª•ÁúãÂà∞ÔºåËØ∑Ê±ÇË¶ÅÁªèËøáÂæàÂ§öÁöÑÊ≠•È™§ÔºåÊúÄÁªàÊâçËÉΩÂΩ¢ÊàêËøîÂõûÁªôÂÆ¢Êà∑Á´ØÁöÑÂìçÂ∫î„ÄÇÂ§ßÂ§öÊï∞ÁöÑÊ≠•È™§ÈÉΩÊòØÂú®SpringÊ°ÜÊû∂ÂÜÖÈÉ®ÂÆåÊàêÁöÑÔºå‰πüÂ∞±ÊòØÂõæ5.1ÊâÄÁ§∫ÁöÑÁªÑ‰ª∂‰∏≠„ÄÇÂ∞ΩÁÆ°Êú¨Á´†ÁöÑ‰∏ªË¶ÅÂÜÖÂÆπÈÉΩÂÖ≥Ê≥®‰∫éÂ¶Ç‰ΩïÁºñÂÜôÊéßÂà∂Âô®Ôºå‰ΩÜÂú®Ê≠§‰πãÂâçÊàë‰ª¨È¶ñÂÖàÁúã‰∏Ä‰∏ãÂ¶Ç‰ΩïÊê≠Âª∫Spring MVCÁöÑÂü∫Á°ÄÁªÑ‰ª∂„ÄÇ Á¨¨ÂÖ≠Á´†ÔºöÊ∏≤ÊüìwebËßÜÂõæËøô‰∏™ÊöÇÊó∂Ë∑≥Ëøá„ÄÇ Á¨¨‰∏ÉÁ´†ÔºöSpringMVCÁöÑÈ´òÁ∫ßÊäÄÊúØËøôÁ´†Áúã‰∫Ü‰∏ÄÈÅçÔºå‰∏çÊòØÂæàÊòéÁôΩ„ÄÇ Á¨¨ÂÖ´Á´†Ôºö‰ΩøÁî®Spring Web Flow Á¨¨‰πùÁ´†Ôºö‰øùÊä§WebÂ∫îÁî®Ê≥®ÔºöÁ¨¨‰∫î~Á¨¨‰πùÁ´†Â∞ÜÁöÑÊòØSpringÂú®web‰∏≠ÁöÑÂ∫îÁî®ÔºåÊöÇ‰∏îË∑≥Ëøá„ÄÇ Á¨¨ÂçÅÁ´†ÔºöÈÄöËøáSpringÂíåJDBCËøûÊé•Êï∞ÊçÆÂ∫ìÈÄöËøájdbcÊ∂àÈô§Ê†∑ÊùøÂºè‰ª£Á†ÅÔºå‰ΩøÂæóÂú®ÁºñÁ®ãÈò∂ÊÆµËÉΩ‰∏ìÊ≥®‰∫é‰ª£Á†ÅÊú¨Ë∫´Ôºõ ÁÆÄÂçïËÆ≤‰∫Ü‰∏ãjdbcÁöÑÁî®Ê≥ï Á¨¨ÂçÅ‰∏ÄÁ´†Ôºö‰ΩøÁî®ÂØπË±°-ÂÖ≥Á≥ªÊò†Â∞ÑÊåÅ‰πÖÂåñÊï∞ÊçÆ","categories":[{"name":"ËØª‰π¶ÊÄªÁªì","slug":"ËØª‰π¶ÊÄªÁªì","permalink":"http://example.com/categories/%E8%AF%BB%E4%B9%A6%E6%80%BB%E7%BB%93/"}],"tags":[]},{"title":"mybatisplus‰ΩøÁî®ÊÄªÁªì","slug":"mybatisplus‰ΩøÁî®ÊÄªÁªì","date":"2021-06-03T16:00:00.000Z","updated":"2021-08-02T07:45:48.260Z","comments":true,"path":"2021/06/04/mybatisplus‰ΩøÁî®ÊÄªÁªì/","link":"","permalink":"http://example.com/2021/06/04/mybatisplus%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/","excerpt":"","text":"‰ΩøÁî®mybatisÂØπÊï∞ÊçÆÂ∫ìËøõË°åÊìç‰ΩúÊó∂Ôºå‰∏∫Êñπ‰æøÂÆö‰ΩçÈîôËØØÔºåÂèØÂú®ÈÖçÁΩÆÊñá‰ª∂‰∏≠ËøõË°åÈÖçÁΩÆ‰ΩøÂæómyqslËØ≠Âè•Âú®ÊéßÂà∂Âè∞ËøõË°åËæìÂá∫ Âú®application.propertiesÈÖçÁΩÆ 12#ÊéßÂà∂Èù¢ÊùøËæìÂá∫mybatisÊó•Âøómybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl MybatisPlusÁöÑ‰∏ªÈîÆÁ≠ñÁï•ÈªòËÆ§ÈááÁî®ÁöÑÊòØÈõ™Ëä±ÁÆóÊ≥ïÔºöÂàÜÂ∏ÉÂºèIDÁîüÊàêÂô® Ê†∏ÂøÉÊÄùÊÉ≥Ôºö ÈïøÂ∫¶ÂÖ±64bitÔºà‰∏Ä‰∏™longÂûãÔºâ„ÄÇ È¶ñÂÖàÊòØ‰∏Ä‰∏™Á¨¶Âè∑‰ΩçÔºå1bitÊ†áËØÜÔºåÁî±‰∫élongÂü∫Êú¨Á±ªÂûãÂú®Java‰∏≠ÊòØÂ∏¶Á¨¶Âè∑ÁöÑÔºåÊúÄÈ´ò‰ΩçÊòØÁ¨¶Âè∑‰ΩçÔºåÊ≠£Êï∞ÊòØ0ÔºåË¥üÊï∞ÊòØ1ÔºåÊâÄ‰ª•id‰∏ÄËà¨ÊòØÊ≠£Êï∞ÔºåÊúÄÈ´ò‰ΩçÊòØ0„ÄÇ 41bitÊó∂Èó¥Êà™(ÊØ´ÁßíÁ∫ß)ÔºåÂ≠òÂÇ®ÁöÑÊòØÊó∂Èó¥Êà™ÁöÑÂ∑ÆÂÄºÔºàÂΩìÂâçÊó∂Èó¥Êà™ - ÂºÄÂßãÊó∂Èó¥Êà™)ÔºåÁªìÊûúÁ∫¶Á≠â‰∫é69.73Âπ¥„ÄÇ 10bit‰Ωú‰∏∫Êú∫Âô®ÁöÑIDÔºà5‰∏™bitÊòØÊï∞ÊçÆ‰∏≠ÂøÉÔºå5‰∏™bitÁöÑÊú∫Âô®IDÔºåÂèØ‰ª•ÈÉ®ÁΩ≤Âú®1024‰∏™ËäÇÁÇπÔºâ„ÄÇ 12bit‰Ωú‰∏∫ÊØ´ÁßíÂÜÖÁöÑÊµÅÊ∞¥Âè∑ÔºàÊÑèÂë≥ÁùÄÊØè‰∏™ËäÇÁÇπÂú®ÊØèÊØ´ÁßíÂèØ‰ª•‰∫ßÁîü 4096 ‰∏™ IDÔºâ„ÄÇ ‰ºòÁÇπÔºöÊï¥‰Ωì‰∏äÊåâÁÖßÊó∂Èó¥Ëá™Â¢ûÊéíÂ∫èÔºåÂπ∂‰∏îÊï¥‰∏™ÂàÜÂ∏ÉÂºèÁ≥ªÁªüÂÜÖ‰∏ç‰ºö‰∫ßÁîüIDÁ¢∞ÊíûÔºåÂπ∂‰∏îÊïàÁéáËæÉÈ´ò„ÄÇ MyBatisPlusËá™Âä®Â°´ÂÖÖÂäüËÉΩÂ•ΩÂ§ÑÔºöËá™Âä®ÂÆûÁé∞setÂäüËÉΩ ‰ΩøÁî®ÊñπÊ≥ïÔºö ‰∏æ‰æãÔºöÊ∑ªÂä†ËÆ∞ÂΩïÁöÑÂàõÂª∫Êó∂Èó¥Âíå‰øÆÊîπÊó∂Èó¥ 1„ÄÅÂú®Êï∞ÊçÆÂ∫ìË°®‰∏≠ÂàõÂª∫ÂØπÂ∫îÂàóÔºöcreate_time,update_time 2„ÄÅÂú®ÂØπÂ∫îÁöÑÂÆû‰ΩìÁ±ª‰∏≠Ê∑ªÂä†ÂØπÂ∫îÂ±ûÊÄßÔºöcreateTime,updateTimeÔºåÂπ∂Ê∑ªÂä†Ê≥®Ëß£ 3„ÄÅÂàõÂª∫‰∏Ä‰∏™Á±ªÔºåÂÆûÁé∞MetaObjectHandlerÊé•Âè£ÔºåÂπ∂ÈáçÂÜôÂÖ∂‰∏≠ÁöÑ‰∏§‰∏™ÊñπÊ≥ï","categories":[{"name":"HelloWorldÁ≥ªÂàó","slug":"HelloWorldÁ≥ªÂàó","permalink":"http://example.com/categories/HelloWorld%E7%B3%BB%E5%88%97/"}],"tags":[]},{"title":"mysqlÁôªÂΩï","slug":"mysqlÁôªÂΩï","date":"2021-06-02T16:00:00.000Z","updated":"2021-06-03T08:19:21.109Z","comments":true,"path":"2021/06/03/mysqlÁôªÂΩï/","link":"","permalink":"http://example.com/2021/06/03/mysql%E7%99%BB%E5%BD%95/","excerpt":"","text":"ÂêØÂä®mysqlÔºösystemctl start mysqld Êü•ÁúãmysqlÂêØÂä®Áä∂ÊÄÅÔºösystemctl status mysqld ÊòæÁ§∫activeË°®Á§∫Â∑≤ÁªèÊøÄÊ¥ª„ÄÇ ËøõË°åÁôªÂΩïÔºömysql -uroot -p","categories":[{"name":"È°πÁõÆHospital","slug":"È°πÁõÆHospital","permalink":"http://example.com/categories/%E9%A1%B9%E7%9B%AEHospital/"}],"tags":[]},{"title":"IDEAÂø´Êç∑ÈîÆÊÄªÁªì","slug":"IDEAÂø´Êç∑ÈîÆÊÄªÁªì","date":"2021-06-01T16:00:00.000Z","updated":"2021-06-02T08:27:36.746Z","comments":true,"path":"2021/06/02/IDEAÂø´Êç∑ÈîÆÊÄªÁªì/","link":"","permalink":"http://example.com/2021/06/02/IDEA%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%80%BB%E7%BB%93/","excerpt":"","text":"1 Âø´Êç∑ÈîÆ ÂäüËÉΩ 2 Ctrl+Shift+A ÊêúÁ¥¢Êìç‰ΩúÊñπÂºè 3 Ctrl+Space Âü∫Êú¨‰ª£Á†ÅË°•ÂÖ®ÔºåËæìÂÖ•Â≠óÊØçÊåâÂêéÂàóÂá∫ÂåπÈÖçÁöÑËØçÁªÑ 4 Ctrl+Shift+Space Êô∫ËÉΩ‰ª£Á†ÅË°•ÂÖ®ÔºåÂàóÂá∫‰∏éÈ¢ÑÊúüÁ±ªÂûã‰∏ÄËá¥ÁöÑÊñπÊ≥ïÊàñÂèòÈáè 5 Ctrl+Alt+Space Ë°•ÂÖ®Á±ªÂêç 6 Ctrl+Shift+Enter Ë°•ÂÖ®ËØ≠Âè• 7 Ctrl+P ÊòæÁ§∫ÊñπÊ≥ïÂèÇÊï∞ 8 Ctrl+Q ÊòæÁ§∫Ê≥®ÈáäÊñáÊ°£ 9 Shift+F1 ÊòæÁ§∫Â§ñÈÉ®ÊñáÊ°£ 10 Ctrl+mouse over code ÊòæÁ§∫ÊèèËø∞‰ø°ÊÅØ 11 Ctrl+F1 Á§∫ÊèêÁ§∫„ÄÅË≠¶Âëä„ÄÅÈîôËØØÁ≠â‰ø°ÊÅØ 12 Alt+lnsert ÁîüÊàê‰ª£Á†ÅÔºåÁîüÊàêGetter„ÄÅSetterÊûÑÈÄ†Âô®Á≠â 13 Ctrl+O ÈáçÂÜôÁà∂Á±ªÊñπÊ≥ï 14 Ctrl+I ÂÆûÁé∞Êé•Âè£ÊñπÊ≥ï 15 Ctrl+/ ‰ΩøÁî®‚Äú//‚ÄùÊ≥®ÈáäÊàñÂèñÊ∂àÊ≥®Èáä 16 Ctrl+Shift+/ ‰ΩøÁî®‚Äú/** **/‚ÄùÊ≥®ÈáäÊàñÂèñÊ∂àÊ≥®Èáä 17 Ctrl+W ÈÄâÊã©‰ª£Á†ÅÂùóÔºåËøûÁª≠Êåâ‰ºöÂ¢ûÂä†ÈÄâÊã©Â§ñÂ±ÇÁöÑ‰ª£Á†ÅÂùó 18 Ctrl+Shift+W ‰∏é‚ÄúCtrl+W‚ÄùÁõ∏ÂèçÔºåÂáèÂ∞ëÈÄâÊã©‰ª£Á†ÅÂùó 19 Alt+Q ÊòæÁ§∫Á±ªÊèèËø∞‰ø°ÊÅØ 20 Alt+Enter-fixes ÊòæÁ§∫Âø´ÈÄü‰øÆÂ§çÂàóË°® 21 Ctrl+Alt+L Ê†ºÂºèÂåñ‰ª£Á†Å 22 Ctrl+Alt+O ‰ºòÂåñ Imports 23 Ctrl+Alt+I Ëá™Âä®‰ºòÂåñ‰ª£Á†ÅÁº©Ëøõ 24 Tab/Shift+Tab Áº©Ëøõ‰ª£Á†Å/ÂèñÊ∂àÁº©Ëøõ‰ª£Á†Å 25 Ctrl+X or Shift+Delete Áº©Ëøõ‰ª£Á†Å/ÂèñÊ∂àÁº©Ëøõ‰ª£Á†Å 26 Ctrl+C or Ctrl+lnsert Ââ™Âàá‰ª£Á†ÅÔºåÊú™ÈÄâÊã©‰ª£Á†ÅÊó∂Ââ™ÂàáÂΩìÂâçË°å 27 Ctrl+V or Shift+lnsert Á≤òË¥¥‰ª£Á†Å 28 Ctrl+Shift+V Á≤òË¥¥ÊúÄËøëÂ§çÂà∂ÁöÑÂÜÖÂÆπ 29 Ctrl+D ÈáçÂ§ç‰ª£Á†ÅÔºåÊú™ÈÄâÊã©‰ª£Á†ÅÊó∂ÈáçÂ§çÂΩìÂâçË°å 30 Ctrl+Y Âà†Èô§Ë°åÔºåÊú™ÈÄâÊã©Êó∂Âà†Èô§ÂΩìÂâçË°å 31 Ctrl+Shift+J ÂêàÂπ∂Â§öË°å‰∏∫‰∏ÄË°å 32 Ctrl+Enter ÂàÜÂâ≤‰∏ÄË°å‰∏∫Â§öË°å 33 Shift+Enter ‰ΩøÂÖâÊ†áÊâÄÂú®‰ΩçÁΩÆÁöÑ‰∏ã‰∏ÄË°å‰∏∫Êñ∞Ë°å 34 Ctrl+Shift+U ÂØπÈÄâ‰∏≠ÂÜÖÂÆπËøõË°åÂ§ßÂ∞èÂÜôÂàáÊç¢ 35 Ctrl+Shift+]/[ ÈÄâ‰∏≠Âà∞‰ª£Á†ÅÂùóÁöÑÂºÄÂßã/ÁªìÊùü 36 Ctrl+Delete Âà†Èô§‰ªéÂÖâÊ†áÊâÄÂú®‰ΩçÁΩÆÂà∞ÂçïËØçÁªìÊùü‰ΩçÁΩÆÁöÑÂ≠óÁ¨¶ 37 Ctrl+Backspace Âà†Èô§‰ªéÂçïËØçËµ∑Âßã‰ΩçÁΩÆÂà∞ÂÖâÊ†áÊâÄÂú®‰ΩçÁΩÆÁöÑÂ≠óÁ¨¶ 38 Ctrl+NumPad+/- Â±ïÂºÄÊàñÊî∂Ëµ∑‰ª£Á†ÅÂùó 39 Ctrl+Shift+NumPad+ Â±ïÂπµÊâÄÊúâ‰ª£Á†ÅÂùó 40 Ctrl+Shift+NumPad- Êî∂Ëµ∑ÊâÄÊúâ‰ª£Á†ÅÂùó 41 Ctrl+F4 ÂÖ≥Èó≠ÂΩìÂâçÁºñËæëÈ°µ 42 Ctrl+F Êü•Êâæ 43 F3 Êü•Êâæ‰∏ã‰∏Ä‰∏™ 44 Shift+F3 Êü•Êâæ‰∏ä‰∏Ä‰∏™ 45 Ctrl+R ÊõøÊç¢ 46 Ctrl+Shift+F ÁõÆÂΩïÂÜÖÊü•Êâæ 47 Ctrl+Shift+R ÁõÆÂΩïÂÜÖÊõøÊç¢ 48 Ctrl+Shift+S ËØ≠Ê≥ïÊ®°ÊùøÊêúÁ¥¢ 49 Ctrl+Shift+M ËØ≠Ê≥ïÊ®°ÊùøÊõøÊç¢ 50 Alt+F7 Êü•ÊâæË¢´‰ΩøÁî®Â§Ñ 51 Ctrl+F7 Êü•ÊâæÂΩìÂâçÊñá‰ª∂‰∏≠ÁöÑ‰ΩøÁî®Â§Ñ 52 Ctrl+Shift+F7 È´ò‰∫ÆÂΩìÂâçÊñá‰ª∂‰∏≠ÁöÑ‰ΩøÁî®Â§Ñ 53 Ctrl+Alt+F7 ÂàóÂá∫‰ΩøÁî®ËÄÖ 54 Ctrl+F9 MakeÊ®°Âùó„ÄÅÈ°πÁõÆ 55 Ctrl+Shift+F9 ÁºñËØëÈÄâ‰∏≠ÁöÑÊñá‰ª∂„ÄÅÊ®°Âùó„ÄÅÈ°πÁõÆ 56 Alt+Shift+F10 ÈÄâÊã©ÈÖçÁΩÆÂêéËøêË°å‰ª£Á†Å 57 Alt+Shift+F9 ÈÄâÊã©ÈÖçÁΩÆÂêéË∞ÉËØï‰ª£Á†Å 58 Shift+F10 ËøêË°å‰ª£Á†Å 59 Shift+F9 Ë∞ÉËØï‰ª£Á†Å 60 Ctrl+F2 ÂÅúÊ≠¢Ë∞ÉËØï 61 F8 ÂçïÊ≠•Ë∞ÉËØïÔºå‰∏çËøõÂÖ•ÂáΩÊï∞ÂÜÖÈÉ® 62 F7 ÂçïÊ≠•Ë∞ÉËØïÔºåËøõÂÖ•ÂáΩÊï∞ÂÜÖÈÉ® 63 Shift+F7 ÈÄâÊã©Ë¶ÅËøõÂÖ•ÁöÑÂáΩÊï∞ 64 Shift+F8 Ë∑≥Âá∫ÂáΩÊï∞ 65 Alt+F9 ËøêË°åÂà∞Êñ≠ÁÇπ 66 Alt+F8 ÊâßË°åË°®ËææÂºèÊü•ÁúãÁªìÊûú 67 F9 ÁªßÁª≠ÊâßË°åÔºåËøõÂÖ•‰∏ã‰∏Ä‰∏™Êñ≠ÁÇπÊàñÊâßË°åÂÆåÁ®ãÂ∫è 68 Ctrl+F8 ËÆæÁΩÆ/ÂèñÊ∂àÂΩìÂâçË°åÊñ≠ÁÇπ 69 Ctrl+Shift+F8 Êü•ÁúãÊñ≠ÁÇπ 70 ÂèåÂáª Shift Êü•ÊâæÊâÄÊúâ 71 Ctrl+N Êü•ÊâæÁ±ª 72 Ctrl+Shift+N Êü•ÊâæÊñá‰ª∂ 73 Ctrl+Alt+Shift+N Go to symbol 74 Alt+Right/Left Â∑¶Âè≥ÂàáÊç¢Tab 75 F12 ÂõûÂà∞‰∏ä‰∏Ä‰∏™ÊâìÂºÄÁöÑÁ™óÂè£ 76 Esc ÁÑ¶ÁÇπÂõûÂà∞ÁºñËæëÂô® 77 Shift+Esc ÈöêËóèÊâìÂºÄÁöÑËßÜÂõæ 78 Ctrl+Shift+F4 ÂÖ≥Èó≠ÂΩìÂâçTab 79 Ctrl+G Ë∑≥Âà∞ÊåáÂÆöË°å 80 Ctrl+E ÊòæÁ§∫ÊúÄËøëÊâìÂºÄÁöÑÊñá‰ª∂ 81 Ctrl+Alt+Left Ë∑≥Âà∞ÂÖâÊ†áÁöÑ‰∏ä‰∏Ä‰∏™‰ΩçÁΩÆ 82 Ctrl+Alt+Right Ë∑≥Âà∞ÂÖâÊ†áÁöÑ‰∏ã‰∏Ä‰∏™‰ΩçÁΩÆ 83 Ctrl+Shift+Backspace Ë∑≥Âà∞‰∏ä‰∏Ä‰∏™ÁºñËæëÂ§Ñ 84 Alt+F1 ÈÄâÊã©ÂΩìÂâçÊñá‰ª∂ÊòæÁ§∫Âú®‰∏çÂêåÁöÑËßÜÂõæ 85 Ctrl+Bor/Ctrl+Click Ë∑≥Âà∞Á±ªÂ£∞ÊòéÂ§Ñ 86 Ctrl+Alt+B Ë∑≥Âà∞ÂÆûÁé∞Á±ª/ÊñπÊ≥ï 87 Ctrl+Shift+I ÊòæÁ§∫Á±ª/ÂèòÈáè/ÊñπÊ≥ïÂÆö‰πâ 88 Ctrl+Shift+B Ë∑≥Âà∞Á±ªÂûãÂÆö‰πâÂ§Ñ 89 Ctrl+U Ë∑≥Âà∞Áà∂Á±ª/ÊñπÊ≥ï 90 Alt+Up ÂÖâÊ†áÁßªÂä®Âà∞‰∏ä‰∏Ä‰∏™ÊñπÊ≥ï 91 Alt+Down ÂÖâÊ†áÁßªÂä®Âà∞‰∏ã‰∏Ä‰∏™ÊñπÊ≥ï 92 Ctrl+[ ÂÖâÊ†áÁßªÂä®Âà∞‰ª£Á†ÅÂùóÁöÑËµ∑Âßã‰ΩçÁΩÆ 93 Ctrl+] ÂÖâÊ†áÁßªÂä®Âà∞‰ª£Á†ÅÂùóÁöÑÁªìÊùü‰ΩçÁΩÆ 94 Ctrl+F12 ÊòæÁ§∫Êñá‰ª∂ÁªìÊûÑ 95 Ctrl+H ÊòæÁ§∫Á±ªÂ±ÇÁ∫ß 96 Ctrl+Shift+H ÊòæÁ§∫ÊñπÊ≥ïÂ±ÇÁ∫ß 97 Ctrl+Alt+H ÊòæÁ§∫Á±ª/ÊñπÊ≥ïË∞ÉÁî®Â±ÇÁ∫ß 98 F2 ÂÖâÊ†áÁßªÂä®Âà∞‰∏ã‰∏Ä‰∏™ÈîôËØØ 99 Shift+F2 ÂÖâÊ†áÁßªÂä®Âà∞‰∏ä‰∏Ä‰∏™ÈîôËØØ 100 F4 ÁºñËæëÊ∫êÁ†ÅÔºåÂÖâÊ†áÁßªÂà∞ÁºñËæëÂô®ÂÜÖ 101 Ctrl+Enter Êü•ÁúãÊ∫êÁ†ÅÔºåÂÖâÊ†áÊ≤°ÁßªÂà∞ÁºñËæëÂô®ÂÜÖ 102 Alt+Home ÊòæÁ§∫ÂØºËà™Èù¢ÂåÖÂ±ë 103 F11 ÂΩìÂâçË°åËÆæÁΩÆ‰π¶Á≠æ 104 Shift+F11 ÊòæÁ§∫ÊâÄÊúâ‰π¶Á≠æ 105 Ctrl+F11 ËÆæÁΩÆ‰π¶Á≠æÂè∑Ôºª0-9ÔºΩ 106 Ctrl+[0-9] Ë∑≥Âà∞‰π¶Á≠æÂè∑Ôºª0-9ÔºΩÊâÄÂú®‰ΩçÁΩÆ 107 F5 Â§çÂà∂Á±ª 108 F6 ÁßªÂä®Á±ª 109 Alt+Delete ÂÆâÂÖ®Âà†Èô§ÔºåÂà†Èô§Ââç‰ºöÊèêÁ§∫Ë∞ÉÁî®Â§Ñ 110 Shift+F6 ÈáçÂëΩÂêç 111 Ctrl+F6 ÈáçÊûÑÊñπÊ≥ïÂèÇÊï∞„ÄÅExceptionÁ≠â 112 Ctrl+Alt+N ÂêàÂπ∂Â§öË°å‰∏∫‰∏ÄË°å 113 Ctrl+Alt+M ÊèêÂèñ‰∏∫Êñ∞ÊñπÊ≥ï 114 Ctrl+Alt+V ÊèêÂèñ‰∏∫Êñ∞ÂèòÈáè 115 Ctrl+Alt+F ÊèêÂèñ‰∏∫ÂØπË±°Êñ∞Â±ûÊÄß 116 Ctrl+Alt+C ÊèêÂèñ‰∏∫Êñ∞ÈùôÊÄÅÂ∏∏Èáè 117 Alt+0 ËÅöÁÑ¶Âà∞MessagesÁ™óÂè£ 118 Alt+1 ÁÑ¶Âà∞ProjectÁ™óÂè£ 119 Alt+2 ËÅöÁÑ¶Âà∞FavoriteÁ™óÂè£ 120 Alt+3 ËÅöÁÑ¶Âà∞FindÁ™óÂè£ 121 Alt+4 ËÅöÁÑ¶Âà∞RunÁ™óÂè£ 122 Alt+5 ËÅöÁÑ¶Âà∞DebugÁ™óÂè£ 123 Alt+6 ËÅöÁÑ¶Âà∞TODOÁ™óÂè£ 124 Alt+7 ËÅöÁÑ¶Âà∞StructureÁ™óÂè£ 125 Alt+8 ËÅöÁÑ¶Âà∞HierarchyÁ™óÂè£ 126 Alt+9 ËÅöÁÑ¶Âà∞ChangeÁ™óÂè£ 127 Ctrl+S ‰øùÂ≠òÊñá‰ª∂ 128 Ctrl+Alt+Y ‰∏éÊú¨Âú∞Êñá‰ª∂ÂêåÊ≠• 129 Alt+Shift+F Ê∑ªÂä†Âà∞Êî∂ËóèÂ§π 130 Alt+Shift+I Ê£ÄÊü•ÂΩìÂâçÊñá‰ª∂ÔºåÂåÖÊã¨JavadocÈóÆÈ¢ò„ÄÅÂèØËÉΩÂ≠òÂú®ÁöÑbugÁ≠â 131 Ctrl+Alt+S ÊâìÂºÄsettingsÁ™óÂè£ 132 Ctrl+BackQuote (‚Äò) Ê®°ÂºèÂàáÊç¢ÔºåÂåÖÊã¨ÊñáÊú¨Â§ñËßÇ„ÄÅÂø´Êç∑ÈîÆ„ÄÅÁºñËæëÂô®Â§ñËßÇ„ÄÅ‰ª£Á†ÅÊ†∑Âºè","categories":[{"name":"Â∞èÊäÄÂ∑ß","slug":"Â∞èÊäÄÂ∑ß","permalink":"http://example.com/categories/%E5%B0%8F%E6%8A%80%E5%B7%A7/"}],"tags":[]},{"title":"mavenÈ¶ñÊ¨°ËøêË°åÈóÆÈ¢ò","slug":"mavenÈ¶ñÊ¨°ËøêË°åÈóÆÈ¢ò","date":"2021-06-01T11:12:55.000Z","updated":"2021-06-01T11:20:35.140Z","comments":true,"path":"2021/06/01/mavenÈ¶ñÊ¨°ËøêË°åÈóÆÈ¢ò/","link":"","permalink":"http://example.com/2021/06/01/maven%E9%A6%96%E6%AC%A1%E8%BF%90%E8%A1%8C%E9%97%AE%E9%A2%98/","excerpt":"","text":"Á¨¨‰∏ÄÊ¨°ËøêË°åmavenÊó∂ÔºåÁî±‰∫émavenÈªòËÆ§Áî®ÁöÑÊòØjreÔºåÁî®ÂëΩ‰ª§Ë°åËøêË°åÊó∂‰ºöÊä•ÈîôÔºåÂ¶Ç‰∏ãÂõæÊâÄÁ§∫ Ê†πÊçÆÊèêÁ§∫ÈîôËØØÔºåÂèØÁü•ËøêË°åÁöÑÊòØjreËÄå‰∏çÊòØjkdÔºåÊü•ÁúãmavenÁâàÊú¨ ÂèëÁé∞Ë∑ØÂæÑ‰∏∫jreÔºåËá≥Ê≠§ÊâæÂà∞ÈóÆÈ¢òÊ†πÊ∫ê„ÄÇ Ëß£ÂÜ≥ÊñπÊ≥ïÔºö Âú®maven\\bin\\settingÊñá‰ª∂‰∏≠ÔºåÂú®È¶ñË°åÂä†‰∏ä set JAVA_HOME=C:\\JDK\\jdk1.8.0_291 Â∞ÜÂÖ∂ÊâÄÁî®ÁöÑJAVA_HOME‰øÆÊîπ‰∏∫Êú¨Êú∫ÊâÄÂÆâË£ÖÁöÑjdkÔºå‰πãÂêéÈóÆÈ¢òËß£ÂÜ≥ÔºåÊñá‰ª∂ÂèØÊ≠£Â∏∏ÁºñËØë„ÄÇ","categories":[{"name":"Ë∏©ÂùëËÆ∞ÂΩï","slug":"Ë∏©ÂùëËÆ∞ÂΩï","permalink":"http://example.com/categories/%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"}],"tags":[]},{"title":"ËøêË°åHaloÈ°πÁõÆÊó∂ÈÅáÂà∞ÁöÑÈóÆÈ¢ò","slug":"ËøêË°åHaloÈ°πÁõÆÊó∂ÈÅáÂà∞ÁöÑÈóÆÈ¢ò","date":"2021-05-31T02:51:55.000Z","updated":"2021-05-31T07:13:56.009Z","comments":true,"path":"2021/05/31/ËøêË°åHaloÈ°πÁõÆÊó∂ÈÅáÂà∞ÁöÑÈóÆÈ¢ò/","link":"","permalink":"http://example.com/2021/05/31/%E8%BF%90%E8%A1%8CHalo%E9%A1%B9%E7%9B%AE%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/","excerpt":"","text":"Ëøô‰∏™ÈóÆÈ¢òÂú®Â∞ÜjdkÁâàÊú¨‰ªé8Êîπ‰∏∫11‰πãÂêéÂ∞±Ê≤°ÈÅáÂà∞‰∫Ü; ‰ΩÜÊòØÂú®ÂêéÁª≠ÁöÑËøêË°å‰∏≠ÂèàÂá∫Áé∞‰∫ÜÂÖ∂‰ªñÈîôËØØÔºåÁªèÊü•ÈòÖËµÑÊñôÔºåÂ∞ÜIDEA‰ªé2019.3ÂçáÁ∫ß‰∏∫2020.3‰πãÂêéËß£ÂÜ≥Ôºõ ÂêéËÆ∞ÔºöÊîπÂÆå‰πãÂêéËøòÈúÄË¶ÅÂ∞ÜgradleÁöÑjdkÁâàÊú¨‰ª•ÂèäÈ°πÁõÆËøêË°å‰æùËµñÁöÑjdkÁâàÊú¨Êîπ‰∏∫11ÔºàÊàëË£Ö‰∫Ü8Âíå11‰∏§‰∏™ÁâàÊú¨ÔºâÔºõ ÊúÄÂêé‰∏ÄÊ¨°ËøêË°åÊä•ÈîôÊòØÊòæÁ§∫Êú™ÊâæÂà∞ÈªòËÆ§‰∏ªÈ¢òÔºåÂú®halo-dev/halo-theme-anatole (github.com)ËøõË°å‰∏ãËΩΩÂπ∂Â≠òÊîæËá≥Halo\\halo\\src\\main\\resources\\templates\\themes\\anatoleÂêéÔºåÊàêÂäüËøêË°å„ÄÇ Ëá≥Ê≠§ÊàêÂäüËøêË°å„ÄÇ","categories":[{"name":"Ë∏©ÂùëËÆ∞ÂΩï","slug":"Ë∏©ÂùëËÆ∞ÂΩï","permalink":"http://example.com/categories/%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"}],"tags":[]},{"title":"AQSÁÆÄËø∞","slug":"AQSÁÆÄËø∞","date":"2021-05-28T16:00:00.000Z","updated":"2021-05-29T13:37:36.984Z","comments":true,"path":"2021/05/29/AQSÁÆÄËø∞/","link":"","permalink":"http://example.com/2021/05/29/AQS%E7%AE%80%E8%BF%B0/","excerpt":"","text":"AbstractQuenedSynchronizerÊäΩË±°ÁöÑÈòüÂàóÂºèÂêåÊ≠•Âô®„ÄÇÊòØÈô§‰∫ÜjavaËá™Â∏¶ÁöÑsynchronizedÂÖ≥ÈîÆÂ≠ó‰πãÂ§ñÁöÑÈîÅÊú∫Âà∂„ÄÇ AQSÁöÑÂÖ®Áß∞‰∏∫ÔºàAbstractQueuedSynchronizerÔºâÔºåËøô‰∏™Á±ªÂú®java.util.concurrent.locksÂåÖ AQSÁöÑÊ†∏ÂøÉÊÄùÊÉ≥ÊòØÔºåÂ¶ÇÊûúË¢´ËØ∑Ê±ÇÁöÑÂÖ±‰∫´ËµÑÊ∫êÁ©∫Èó≤ÔºåÂàôÂ∞ÜÂΩìÂâçËØ∑Ê±ÇËµÑÊ∫êÁöÑÁ∫øÁ®ãËÆæÁΩÆ‰∏∫ÊúâÊïàÁöÑÂ∑•‰ΩúÁ∫øÁ®ãÔºåÂπ∂Â∞ÜÂÖ±‰∫´ËµÑÊ∫êËÆæÁΩÆ‰∏∫ÈîÅÂÆöÁä∂ÊÄÅÔºåÂ¶ÇÊûúË¢´ËØ∑Ê±ÇÁöÑÂÖ±‰∫´ËµÑÊ∫êË¢´Âç†Áî®ÔºåÈÇ£‰πàÂ∞±ÈúÄË¶Å‰∏ÄÂ•óÁ∫øÁ®ãÈòªÂ°ûÁ≠âÂæÖ‰ª•ÂèäË¢´Âî§ÈÜíÊó∂ÈîÅÂàÜÈÖçÁöÑÊú∫Âà∂ÔºåËøô‰∏™Êú∫Âà∂AQSÊòØÁî®CLHÈòüÂàóÈîÅÂÆûÁé∞ÁöÑÔºåÂç≥Â∞ÜÊöÇÊó∂Ëé∑Âèñ‰∏çÂà∞ÈîÅÁöÑÁ∫øÁ®ãÂä†ÂÖ•Âà∞ÈòüÂàó‰∏≠„ÄÇ CLHÔºàCraigÔºåLandinÔºåand HagerstenÔºâÈòüÂàóÊòØ‰∏Ä‰∏™ËôöÊãüÁöÑÂèåÂêëÈòüÂàóÔºåËôöÊãüÁöÑÂèåÂêëÈòüÂàóÂç≥‰∏çÂ≠òÂú®ÈòüÂàóÂÆû‰æãÔºå‰ªÖÂ≠òÂú®ËäÇÁÇπ‰πãÈó¥ÁöÑÂÖ≥ËÅîÂÖ≥Á≥ª„ÄÇ AQSÊòØÂ∞ÜÊØè‰∏ÄÊù°ËØ∑Ê±ÇÂÖ±‰∫´ËµÑÊ∫êÁöÑÁ∫øÁ®ãÂ∞ÅË£ÖÊàê‰∏Ä‰∏™CLHÈîÅÈòüÂàóÁöÑ‰∏Ä‰∏™ÁªìÁÇπÔºàNodeÔºâÔºåÊù•ÂÆûÁé∞ÈîÅÁöÑÂàÜÈÖç„ÄÇ Áî®Â§ßÁôΩËØùÊù•ËØ¥ÔºåAQSÂ∞±ÊòØÂü∫‰∫éCLHÈòüÂàóÔºåÁî®volatile‰øÆÈ•∞ÂÖ±‰∫´ÂèòÈáèstateÔºåÁ∫øÁ®ãÈÄöËøáCASÂéªÊîπÂèòÁä∂ÊÄÅÁ¨¶ÔºåÊàêÂäüÂàôËé∑ÂèñÈîÅÊàêÂäüÔºåÂ§±Ë¥•ÂàôËøõÂÖ•Á≠âÂæÖÈòüÂàóÔºåÁ≠âÂæÖË¢´Âî§ÈÜí„ÄÇ Ê≥®ÊÑèÔºöAQSÊòØËá™ÊóãÈîÅÔºöÂú®Á≠âÂæÖÂî§ÈÜíÁöÑÊó∂ÂÄôÔºåÁªèÂ∏∏‰ºö‰ΩøÁî®Ëá™ÊóãÔºàwhile(!cas())ÔºâÁöÑÊñπÂºèÔºå‰∏çÂÅúÂú∞Â∞ùËØïËé∑ÂèñÈîÅÔºåÁõ¥Âà∞Ë¢´ÂÖ∂‰ªñÁ∫øÁ®ãËé∑ÂèñÊàêÂäü ËΩ¨Ëá™ÔºöAQSÂéüÁêÜ","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"CASÁÆÄËø∞","slug":"CASÁÆÄËø∞","date":"2021-05-28T16:00:00.000Z","updated":"2021-05-29T13:35:37.384Z","comments":true,"path":"2021/05/29/CASÁÆÄËø∞/","link":"","permalink":"http://example.com/2021/05/29/CAS%E7%AE%80%E8%BF%B0/","excerpt":"","text":"Âú®JDK 5‰πãÂâçJavaËØ≠Ë®ÄÊòØÈù†synchronizedÂÖ≥ÈîÆÂ≠ó‰øùËØÅÂêåÊ≠•ÁöÑÔºåËøô‰ºöÂØºËá¥ÊúâÈîÅ ÈîÅÊú∫Âà∂Â≠òÂú®‰ª•‰∏ãÈóÆÈ¢òÔºö Ôºà1ÔºâÂú®Â§öÁ∫øÁ®ãÁ´û‰∫â‰∏ãÔºåÂä†ÈîÅ„ÄÅÈáäÊîæÈîÅ‰ºöÂØºËá¥ÊØîËæÉÂ§öÁöÑ‰∏ä‰∏ãÊñáÂàáÊç¢ÂíåË∞ÉÂ∫¶Âª∂Êó∂ÔºåÂºïËµ∑ÊÄßËÉΩÈóÆÈ¢ò„ÄÇ Ôºà2Ôºâ‰∏Ä‰∏™Á∫øÁ®ãÊåÅÊúâÈîÅ‰ºöÂØºËá¥ÂÖ∂ÂÆÉÊâÄÊúâÈúÄË¶ÅÊ≠§ÈîÅÁöÑÁ∫øÁ®ãÊåÇËµ∑„ÄÇ Ôºà3ÔºâÂ¶ÇÊûú‰∏Ä‰∏™‰ºòÂÖàÁ∫ßÈ´òÁöÑÁ∫øÁ®ãÁ≠âÂæÖ‰∏Ä‰∏™‰ºòÂÖàÁ∫ß‰ΩéÁöÑÁ∫øÁ®ãÈáäÊîæÈîÅ‰ºöÂØºËá¥‰ºòÂÖàÁ∫ßÂÄíÁΩÆÔºåÂºïËµ∑ÊÄßËÉΩÈ£éÈô©„ÄÇ volatileÊòØ‰∏çÈîôÁöÑÊú∫Âà∂Ôºå‰ΩÜÊòØvolatile‰∏çËÉΩ‰øùËØÅÂéüÂ≠êÊÄß„ÄÇÂõ†Ê≠§ÂØπ‰∫éÂêåÊ≠•ÊúÄÁªàËøòÊòØË¶ÅÂõûÂà∞ÈîÅÊú∫Âà∂‰∏äÊù•„ÄÇ Áã¨Âç†ÈîÅÊòØ‰∏ÄÁßçÊÇ≤ËßÇÈîÅÔºåsynchronizedÂ∞±ÊòØ‰∏ÄÁßçÁã¨Âç†ÈîÅÔºå‰ºöÂØºËá¥ÂÖ∂ÂÆÉÊâÄÊúâÈúÄË¶ÅÈîÅÁöÑÁ∫øÁ®ãÊåÇËµ∑ÔºåÁ≠âÂæÖÊåÅÊúâÈîÅÁöÑÁ∫øÁ®ãÈáäÊîæÈîÅ„ÄÇËÄåÂè¶‰∏Ä‰∏™Êõ¥Âä†ÊúâÊïàÁöÑÈîÅÂ∞±ÊòØ‰πêËßÇÈîÅ„ÄÇÊâÄË∞ì‰πêËßÇÈîÅÂ∞±ÊòØÔºåÊØèÊ¨°‰∏çÂä†ÈîÅËÄåÊòØÂÅáËÆæÊ≤°ÊúâÂÜ≤Á™ÅËÄåÂéªÂÆåÊàêÊüêÈ°πÊìç‰ΩúÔºåÂ¶ÇÊûúÂõ†‰∏∫ÂÜ≤Á™ÅÂ§±Ë¥•Â∞±ÈáçËØïÔºåÁõ¥Âà∞ÊàêÂäü‰∏∫Ê≠¢„ÄÇ‰πêËßÇÈîÅÁî®Âà∞ÁöÑÊú∫Âà∂Â∞±ÊòØCASÔºåCompare and Swap„ÄÇ ‰∏Ä„ÄÅ‰ªÄ‰πàÊòØCASCAS,compare and swapÁöÑÁº©ÂÜôÔºå‰∏≠ÊñáÁøªËØëÊàêÊØîËæÉÂπ∂‰∫§Êç¢„ÄÇ Êàë‰ª¨ÈÉΩÁü•ÈÅìÔºåÂú®javaËØ≠Ë®Ä‰πãÂâçÔºåÂπ∂ÂèëÂ∞±Â∑≤ÁªèÂπøÊ≥õÂ≠òÂú®Âπ∂Âú®ÊúçÂä°Âô®È¢ÜÂüüÂæóÂà∞‰∫ÜÂ§ßÈáèÁöÑÂ∫îÁî®„ÄÇÊâÄ‰ª•Á°¨‰ª∂ÂéÇÂïÜËÄÅÊó©Â∞±Âú®ËäØÁâá‰∏≠Âä†ÂÖ•‰∫ÜÂ§ßÈáèÁõ¥Ëá≥Âπ∂ÂèëÊìç‰ΩúÁöÑÂéüËØ≠Ôºå‰ªéËÄåÂú®Á°¨‰ª∂Â±ÇÈù¢ÊèêÂçáÊïàÁéá„ÄÇÂú®intelÁöÑCPU‰∏≠Ôºå‰ΩøÁî®cmpxchgÊåá‰ª§„ÄÇ Âú®JavaÂèëÂ±ïÂàùÊúüÔºåjavaËØ≠Ë®ÄÊòØ‰∏çËÉΩÂ§üÂà©Áî®Á°¨‰ª∂Êèê‰æõÁöÑËøô‰∫õ‰æøÂà©Êù•ÊèêÂçáÁ≥ªÁªüÁöÑÊÄßËÉΩÁöÑ„ÄÇËÄåÈöèÁùÄjava‰∏çÊñ≠ÁöÑÂèëÂ±ï,JavaÊú¨Âú∞ÊñπÊ≥ï(JNI)ÁöÑÂá∫Áé∞Ôºå‰ΩøÂæójavaÁ®ãÂ∫èË∂äËøáJVMÁõ¥Êé•Ë∞ÉÁî®Êú¨Âú∞ÊñπÊ≥ïÊèê‰æõ‰∫Ü‰∏ÄÁßç‰æøÊç∑ÁöÑÊñπÂºèÔºåÂõ†ËÄåjavaÂú®Âπ∂ÂèëÁöÑÊâãÊÆµ‰∏ä‰πüÂ§ö‰∫ÜËµ∑Êù•„ÄÇËÄåÂú®Doug LeaÊèê‰æõÁöÑcucurenctÂåÖ‰∏≠ÔºåCASÁêÜËÆ∫ÊòØÂÆÉÂÆûÁé∞Êï¥‰∏™javaÂåÖÁöÑÂü∫Áü≥„ÄÇ CAS Êìç‰ΩúÂåÖÂê´‰∏â‰∏™Êìç‰ΩúÊï∞ ‚Äî‚Äî ÂÜÖÂ≠ò‰ΩçÁΩÆÔºàVÔºâ„ÄÅÈ¢ÑÊúüÂéüÂÄºÔºàAÔºâÂíåÊñ∞ÂÄº(B)„ÄÇ Â¶ÇÊûúÂÜÖÂ≠ò‰ΩçÁΩÆÁöÑÂÄº‰∏éÈ¢ÑÊúüÂéüÂÄºÁõ∏ÂåπÈÖçÔºåÈÇ£‰πàÂ§ÑÁêÜÂô®‰ºöËá™Âä®Â∞ÜËØ•‰ΩçÁΩÆÂÄºÊõ¥Êñ∞‰∏∫Êñ∞ÂÄº „ÄÇÂê¶ÂàôÔºåÂ§ÑÁêÜÂô®‰∏çÂÅö‰ªª‰ΩïÊìç‰Ωú„ÄÇÊó†ËÆ∫Âì™ÁßçÊÉÖÂÜµÔºåÂÆÉÈÉΩ‰ºöÂú® CAS Êåá‰ª§‰πãÂâçËøîÂõûËØ• ‰ΩçÁΩÆÁöÑÂÄº„ÄÇÔºàÂú® CAS ÁöÑ‰∏Ä‰∫õÁâπÊÆäÊÉÖÂÜµ‰∏ãÂ∞Ü‰ªÖËøîÂõû CAS ÊòØÂê¶ÊàêÂäüÔºåËÄå‰∏çÊèêÂèñÂΩìÂâç ÂÄº„ÄÇÔºâCAS ÊúâÊïàÂú∞ËØ¥Êòé‰∫Ü‚ÄúÊàëËÆ§‰∏∫‰ΩçÁΩÆ V Â∫îËØ•ÂåÖÂê´ÂÄº AÔºõÂ¶ÇÊûúÂåÖÂê´ËØ•ÂÄºÔºåÂàôÂ∞Ü B ÊîæÂà∞Ëøô‰∏™‰ΩçÁΩÆÔºõÂê¶ÂàôÔºå‰∏çË¶ÅÊõ¥ÊîπËØ•‰ΩçÁΩÆÔºåÂè™ÂëäËØâÊàëËøô‰∏™‰ΩçÁΩÆÁé∞Âú®ÁöÑÂÄºÂç≥ÂèØ„ÄÇ‚Äù ÈÄöÂ∏∏Â∞Ü CAS Áî®‰∫éÂêåÊ≠•ÁöÑÊñπÂºèÊòØ‰ªéÂú∞ÂùÄ V ËØªÂèñÂÄº AÔºåÊâßË°åÂ§öÊ≠•ËÆ°ÁÆóÊù•Ëé∑ÂæóÊñ∞ ÂÄº BÔºåÁÑ∂Âêé‰ΩøÁî® CAS Â∞Ü V ÁöÑÂÄº‰ªé A Êîπ‰∏∫ B„ÄÇÂ¶ÇÊûú V Â§ÑÁöÑÂÄºÂ∞öÊú™ÂêåÊó∂Êõ¥ÊîπÔºåÂàô CAS Êìç‰ΩúÊàêÂäü„ÄÇ Á±ª‰ºº‰∫é CAS ÁöÑÊåá‰ª§ÂÖÅËÆ∏ÁÆóÊ≥ïÊâßË°åËØª-‰øÆÊîπ-ÂÜôÊìç‰ΩúÔºåËÄåÊó†ÈúÄÂÆ≥ÊÄïÂÖ∂‰ªñÁ∫øÁ®ãÂêåÊó∂ ‰øÆÊîπÂèòÈáèÔºåÂõ†‰∏∫Â¶ÇÊûúÂÖ∂‰ªñÁ∫øÁ®ã‰øÆÊîπÂèòÈáèÔºåÈÇ£‰πà CAS ‰ºöÊ£ÄÊµãÂÆÉÔºàÂπ∂Â§±Ë¥•ÔºâÔºåÁÆóÊ≥ï ÂèØ‰ª•ÂØπËØ•Êìç‰ΩúÈáçÊñ∞ËÆ°ÁÆó„ÄÇ ‰∫å„ÄÅCASÁöÑÁõÆÁöÑÂà©Áî®CPUÁöÑCASÊåá‰ª§ÔºåÂêåÊó∂ÂÄüÂä©JNIÊù•ÂÆåÊàêJavaÁöÑÈùûÈòªÂ°ûÁÆóÊ≥ï„ÄÇÂÖ∂ÂÆÉÂéüÂ≠êÊìç‰ΩúÈÉΩÊòØÂà©Áî®Á±ª‰ººÁöÑÁâπÊÄßÂÆåÊàêÁöÑ„ÄÇËÄåÊï¥‰∏™J.U.CÈÉΩÊòØÂª∫Á´ãÂú®CAS‰πã‰∏äÁöÑÔºåÂõ†Ê≠§ÂØπ‰∫ésynchronizedÈòªÂ°ûÁÆóÊ≥ïÔºåJ.U.CÂú®ÊÄßËÉΩ‰∏äÊúâ‰∫ÜÂæàÂ§ßÁöÑÊèêÂçá„ÄÇ ‰∏â„ÄÅCASÂ≠òÂú®ÁöÑÈóÆÈ¢òCASËôΩÁÑ∂ÂæàÈ´òÊïàÁöÑËß£ÂÜ≥ÂéüÂ≠êÊìç‰ΩúÔºå‰ΩÜÊòØCAS‰ªçÁÑ∂Â≠òÂú®‰∏âÂ§ßÈóÆÈ¢ò„ÄÇABAÈóÆÈ¢òÔºåÂæ™ÁéØÊó∂Èó¥ÈïøÂºÄÈîÄÂ§ßÂíåÂè™ËÉΩ‰øùËØÅ‰∏Ä‰∏™ÂÖ±‰∫´ÂèòÈáèÁöÑÂéüÂ≠êÊìç‰Ωú \\1. ABA****ÈóÆÈ¢ò„ÄÇÂõ†‰∏∫CASÈúÄË¶ÅÂú®Êìç‰ΩúÂÄºÁöÑÊó∂ÂÄôÊ£ÄÊü•‰∏ãÂÄºÊúâÊ≤°ÊúâÂèëÁîüÂèòÂåñÔºåÂ¶ÇÊûúÊ≤°ÊúâÂèëÁîüÂèòÂåñÂàôÊõ¥Êñ∞Ôºå‰ΩÜÊòØÂ¶ÇÊûú‰∏Ä‰∏™ÂÄºÂéüÊù•ÊòØAÔºåÂèòÊàê‰∫ÜBÔºåÂèàÂèòÊàê‰∫ÜAÔºåÈÇ£‰πà‰ΩøÁî®CASËøõË°åÊ£ÄÊü•Êó∂‰ºöÂèëÁé∞ÂÆÉÁöÑÂÄºÊ≤°ÊúâÂèëÁîüÂèòÂåñÔºå‰ΩÜÊòØÂÆûÈôÖ‰∏äÂç¥ÂèòÂåñ‰∫Ü„ÄÇABAÈóÆÈ¢òÁöÑËß£ÂÜ≥ÊÄùË∑ØÂ∞±ÊòØ‰ΩøÁî®ÁâàÊú¨Âè∑„ÄÇÂú®ÂèòÈáèÂâçÈù¢ËøΩÂä†‰∏äÁâàÊú¨Âè∑ÔºåÊØèÊ¨°ÂèòÈáèÊõ¥Êñ∞ÁöÑÊó∂ÂÄôÊääÁâàÊú¨Âè∑Âä†‰∏ÄÔºåÈÇ£‰πàAÔºçBÔºçA Â∞±‰ºöÂèòÊàê1A-2BÔºç3A„ÄÇ ‰ªé****Java1.5ÂºÄÂßãJDKÁöÑatomicÂåÖÈáåÊèê‰æõ‰∫Ü‰∏Ä‰∏™Á±ªAtomicStampedReferenceÊù•Ëß£ÂÜ≥ABAÈóÆÈ¢ò„ÄÇËøô‰∏™Á±ªÁöÑcompareAndSetÊñπÊ≥ï‰ΩúÁî®ÊòØÈ¶ñÂÖàÊ£ÄÊü•ÂΩìÂâçÂºïÁî®ÊòØÂê¶Á≠â‰∫éÈ¢ÑÊúüÂºïÁî®ÔºåÂπ∂‰∏îÂΩìÂâçÊ†áÂøóÊòØÂê¶Á≠â‰∫éÈ¢ÑÊúüÊ†áÂøóÔºåÂ¶ÇÊûúÂÖ®ÈÉ®Áõ∏Á≠âÔºåÂàô‰ª•ÂéüÂ≠êÊñπÂºèÂ∞ÜËØ•ÂºïÁî®ÂíåËØ•Ê†áÂøóÁöÑÂÄºËÆæÁΩÆ‰∏∫ÁªôÂÆöÁöÑÊõ¥Êñ∞ÂÄº„ÄÇ ÂÖ≥‰∫éABAÈóÆÈ¢òÂèÇËÄÉÊñáÊ°£: http://blog.hesey.net/2011/09/resolve-aba-by-atomicstampedreference.html 2. Âæ™ÁéØÊó∂Èó¥ÈïøÂºÄÈîÄÂ§ß„ÄÇËá™ÊóãCASÂ¶ÇÊûúÈïøÊó∂Èó¥‰∏çÊàêÂäüÔºå‰ºöÁªôCPUÂ∏¶Êù•ÈùûÂ∏∏Â§ßÁöÑÊâßË°åÂºÄÈîÄ„ÄÇÂ¶ÇÊûúJVMËÉΩÊîØÊåÅÂ§ÑÁêÜÂô®Êèê‰æõÁöÑpauseÊåá‰ª§ÈÇ£‰πàÊïàÁéá‰ºöÊúâ‰∏ÄÂÆöÁöÑÊèêÂçáÔºåpauseÊåá‰ª§Êúâ‰∏§‰∏™‰ΩúÁî®ÔºåÁ¨¨‰∏ÄÂÆÉÂèØ‰ª•Âª∂ËøüÊµÅÊ∞¥Á∫øÊâßË°åÊåá‰ª§Ôºàde-pipelineÔºâ,‰ΩøCPU‰∏ç‰ºöÊ∂àËÄóËøáÂ§öÁöÑÊâßË°åËµÑÊ∫êÔºåÂª∂ËøüÁöÑÊó∂Èó¥ÂèñÂÜ≥‰∫éÂÖ∑‰ΩìÂÆûÁé∞ÁöÑÁâàÊú¨ÔºåÂú®‰∏Ä‰∫õÂ§ÑÁêÜÂô®‰∏äÂª∂ËøüÊó∂Èó¥ÊòØÈõ∂„ÄÇÁ¨¨‰∫åÂÆÉÂèØ‰ª•ÈÅøÂÖçÂú®ÈÄÄÂá∫Âæ™ÁéØÁöÑÊó∂ÂÄôÂõ†ÂÜÖÂ≠òÈ°∫Â∫èÂÜ≤Á™ÅÔºàmemory order violationÔºâËÄåÂºïËµ∑CPUÊµÅÊ∞¥Á∫øË¢´Ê∏ÖÁ©∫ÔºàCPU pipeline flushÔºâÔºå‰ªéËÄåÊèêÈ´òCPUÁöÑÊâßË°åÊïàÁéá„ÄÇ 3. Âè™ËÉΩ‰øùËØÅ‰∏Ä‰∏™ÂÖ±‰∫´ÂèòÈáèÁöÑÂéüÂ≠êÊìç‰Ωú„ÄÇÂΩìÂØπ‰∏Ä‰∏™ÂÖ±‰∫´ÂèòÈáèÊâßË°åÊìç‰ΩúÊó∂ÔºåÊàë‰ª¨ÂèØ‰ª•‰ΩøÁî®Âæ™ÁéØCASÁöÑÊñπÂºèÊù•‰øùËØÅÂéüÂ≠êÊìç‰ΩúÔºå‰ΩÜÊòØÂØπÂ§ö‰∏™ÂÖ±‰∫´ÂèòÈáèÊìç‰ΩúÊó∂ÔºåÂæ™ÁéØCASÂ∞±Êó†Ê≥ï‰øùËØÅÊìç‰ΩúÁöÑÂéüÂ≠êÊÄßÔºåËøô‰∏™Êó∂ÂÄôÂ∞±ÂèØ‰ª•Áî®ÈîÅÔºåÊàñËÄÖÊúâ‰∏Ä‰∏™ÂèñÂ∑ßÁöÑÂäûÊ≥ïÔºåÂ∞±ÊòØÊääÂ§ö‰∏™ÂÖ±‰∫´ÂèòÈáèÂêàÂπ∂Êàê‰∏Ä‰∏™ÂÖ±‰∫´ÂèòÈáèÊù•Êìç‰Ωú„ÄÇÊØîÂ¶ÇÊúâ‰∏§‰∏™ÂÖ±‰∫´ÂèòÈáèiÔºù2,j=aÔºåÂêàÂπ∂‰∏Ä‰∏ãij=2aÔºåÁÑ∂ÂêéÁî®CASÊù•Êìç‰Ωúij„ÄÇ‰ªéJava1.5ÂºÄÂßãJDKÊèê‰æõ‰∫ÜAtomicReferenceÁ±ªÊù•‰øùËØÅÂºïÁî®ÂØπË±°‰πãÈó¥ÁöÑÂéüÂ≠êÊÄßÔºå‰Ω†ÂèØ‰ª•ÊääÂ§ö‰∏™ÂèòÈáèÊîæÂú®‰∏Ä‰∏™ÂØπË±°ÈáåÊù•ËøõË°åCAS****Êìç‰Ωú„ÄÇ Âõõ„ÄÅ concurrentÂåÖÁöÑÂÆûÁé∞ Áî±‰∫éjavaÁöÑCASÂêåÊó∂ÂÖ∑Êúâ volatile ËØªÂíåvolatileÂÜôÁöÑÂÜÖÂ≠òËØ≠‰πâÔºåÂõ†Ê≠§JavaÁ∫øÁ®ã‰πãÈó¥ÁöÑÈÄö‰ø°Áé∞Âú®Êúâ‰∫Ü‰∏ãÈù¢ÂõõÁßçÊñπÂºèÔºö AÁ∫øÁ®ãÂÜôvolatileÂèòÈáèÔºåÈöèÂêéBÁ∫øÁ®ãËØªËøô‰∏™volatileÂèòÈáè„ÄÇ AÁ∫øÁ®ãÂÜôvolatileÂèòÈáèÔºåÈöèÂêéBÁ∫øÁ®ãÁî®CASÊõ¥Êñ∞Ëøô‰∏™volatileÂèòÈáè„ÄÇ AÁ∫øÁ®ãÁî®CASÊõ¥Êñ∞‰∏Ä‰∏™volatileÂèòÈáèÔºåÈöèÂêéBÁ∫øÁ®ãÁî®CASÊõ¥Êñ∞Ëøô‰∏™volatileÂèòÈáè„ÄÇ AÁ∫øÁ®ãÁî®CASÊõ¥Êñ∞‰∏Ä‰∏™volatileÂèòÈáèÔºåÈöèÂêéBÁ∫øÁ®ãËØªËøô‰∏™volatileÂèòÈáè„ÄÇ JavaÁöÑCAS‰ºö‰ΩøÁî®Áé∞‰ª£Â§ÑÁêÜÂô®‰∏äÊèê‰æõÁöÑÈ´òÊïàÊú∫Âô®Á∫ßÂà´ÂéüÂ≠êÊåá‰ª§ÔºåËøô‰∫õÂéüÂ≠êÊåá‰ª§‰ª•ÂéüÂ≠êÊñπÂºèÂØπÂÜÖÂ≠òÊâßË°åËØª-Êîπ-ÂÜôÊìç‰ΩúÔºåËøôÊòØÂú®Â§öÂ§ÑÁêÜÂô®‰∏≠ÂÆûÁé∞ÂêåÊ≠•ÁöÑÂÖ≥ÈîÆÔºà‰ªéÊú¨Ë¥®‰∏äÊù•ËØ¥ÔºåËÉΩÂ§üÊîØÊåÅÂéüÂ≠êÊÄßËØª-Êîπ-ÂÜôÊåá‰ª§ÁöÑËÆ°ÁÆóÊú∫Âô®ÔºåÊòØÈ°∫Â∫èËÆ°ÁÆóÂõæÁÅµÊú∫ÁöÑÂºÇÊ≠•Á≠â‰ª∑Êú∫Âô®ÔºåÂõ†Ê≠§‰ªª‰ΩïÁé∞‰ª£ÁöÑÂ§öÂ§ÑÁêÜÂô®ÈÉΩ‰ºöÂéªÊîØÊåÅÊüêÁßçËÉΩÂØπÂÜÖÂ≠òÊâßË°åÂéüÂ≠êÊÄßËØª-Êîπ-ÂÜôÊìç‰ΩúÁöÑÂéüÂ≠êÊåá‰ª§Ôºâ„ÄÇÂêåÊó∂ÔºåvolatileÂèòÈáèÁöÑËØª/ÂÜôÂíåCASÂèØ‰ª•ÂÆûÁé∞Á∫øÁ®ã‰πãÈó¥ÁöÑÈÄö‰ø°„ÄÇÊääËøô‰∫õÁâπÊÄßÊï¥ÂêàÂú®‰∏ÄËµ∑ÔºåÂ∞±ÂΩ¢Êàê‰∫ÜÊï¥‰∏™concurrentÂåÖÂæó‰ª•ÂÆûÁé∞ÁöÑÂü∫Áü≥„ÄÇÂ¶ÇÊûúÊàë‰ª¨‰ªîÁªÜÂàÜÊûêconcurrentÂåÖÁöÑÊ∫ê‰ª£Á†ÅÂÆûÁé∞Ôºå‰ºöÂèëÁé∞‰∏Ä‰∏™ÈÄöÁî®ÂåñÁöÑÂÆûÁé∞Ê®°ÂºèÔºö È¶ñÂÖàÔºåÂ£∞ÊòéÂÖ±‰∫´ÂèòÈáè‰∏∫volatileÔºõ ÁÑ∂ÂêéÔºå‰ΩøÁî®CASÁöÑÂéüÂ≠êÊù°‰ª∂Êõ¥Êñ∞Êù•ÂÆûÁé∞Á∫øÁ®ã‰πãÈó¥ÁöÑÂêåÊ≠•Ôºõ ÂêåÊó∂ÔºåÈÖçÂêà‰ª•volatileÁöÑËØª/ÂÜôÂíåCASÊâÄÂÖ∑ÊúâÁöÑvolatileËØªÂíåÂÜôÁöÑÂÜÖÂ≠òËØ≠‰πâÊù•ÂÆûÁé∞Á∫øÁ®ã‰πãÈó¥ÁöÑÈÄö‰ø°„ÄÇ ËΩ¨Ëá™https://blog.csdn.net/ls5718/article/details/52563959 Ëøô‰∏™ËÆ≤ÁöÑ‰πüÊå∫Â•Ω","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"nativeÂÖ≥ÈîÆÂ≠ó","slug":"nativeÂÖ≥ÈîÆÂ≠ó","date":"2021-05-28T16:00:00.000Z","updated":"2021-05-29T13:16:54.526Z","comments":true,"path":"2021/05/29/nativeÂÖ≥ÈîÆÂ≠ó/","link":"","permalink":"http://example.com/2021/05/29/native%E5%85%B3%E9%94%AE%E5%AD%97/","excerpt":"","text":"nativeÂÖ≥ÈîÆÂ≠ónativeÊòØ‰∏éC++ËÅîÂêàÂºÄÂèëÁöÑÊó∂ÂÄôÁî®ÁöÑÔºÅjavaËá™Â∑±ÂºÄÂèë‰∏çÁî®ÁöÑÔºÅ ‰ΩøÁî®nativeÂÖ≥ÈîÆÂ≠óËØ¥ÊòéËøô‰∏™ÊñπÊ≥ïÊòØÂéüÁîüÂáΩÊï∞Ôºå‰πüÂ∞±ÊòØËøô‰∏™ÊñπÊ≥ïÊòØÁî®C/C++ËØ≠Ë®ÄÂÆûÁé∞ÁöÑÔºåÂπ∂‰∏îË¢´ÁºñËØëÊàê‰∫ÜDLLÔºåÁî±javaÂéªË∞ÉÁî®„ÄÇ Ëøô‰∫õÂáΩÊï∞ÁöÑÂÆûÁé∞‰ΩìÂú®DLL‰∏≠ÔºåJDKÁöÑÊ∫ê‰ª£Á†Å‰∏≠Âπ∂‰∏çÂåÖÂê´Ôºå‰Ω†Â∫îËØ•ÊòØÁúã‰∏çÂà∞ÁöÑ„ÄÇÂØπ‰∫é‰∏çÂêåÁöÑÂπ≥Âè∞ÂÆÉ‰ª¨‰πüÊòØ‰∏çÂêåÁöÑ„ÄÇËøô‰πüÊòØjavaÁöÑÂ∫ïÂ±ÇÊú∫Âà∂ÔºåÂÆûÈôÖ‰∏äjavaÂ∞±ÊòØÂú®‰∏çÂêåÁöÑÂπ≥Âè∞‰∏äË∞ÉÁî®‰∏çÂêåÁöÑnativeÊñπÊ≥ïÂÆûÁé∞ÂØπÊìç‰ΩúÁ≥ªÁªüÁöÑËÆøÈóÆÁöÑ„ÄÇ 1„ÄÇnative ÊòØÁî®ÂÅöjava ÂíåÂÖ∂‰ªñËØ≠Ë®ÄÔºàÂ¶Çc++ÔºâËøõË°åÂçè‰ΩúÊó∂Áî®ÁöÑ‰πüÂ∞±ÊòØnative ÂêéÁöÑÂáΩÊï∞ÁöÑÂÆûÁé∞‰∏çÊòØÁî®javaÂÜôÁöÑ 2„ÄÇÊó¢ÁÑ∂ÈÉΩ‰∏çÊòØjavaÔºåÈÇ£Â∞±Âà´ÁÆ°ÂÆÉÁöÑÊ∫ê‰ª£Á†Å‰∫ÜÔºåÂëµÂëµ nativeÁöÑÊÑèÊÄùÂ∞±ÊòØÈÄöÁü•Êìç‰ΩúÁ≥ªÁªüÔºå Ëøô‰∏™ÂáΩÊï∞‰Ω†ÂøÖÈ°ªÁªôÊàëÂÆûÁé∞ÔºåÂõ†‰∏∫ÊàëË¶Å‰ΩøÁî®„ÄÇ ÊâÄ‰ª•nativeÂÖ≥ÈîÆÂ≠óÁöÑÂáΩÊï∞ÈÉΩÊòØÊìç‰ΩúÁ≥ªÁªüÂÆûÁé∞ÁöÑÔºåjavaÂè™ËÉΩË∞ÉÁî®„ÄÇ javaÊòØË∑®Âπ≥Âè∞ÁöÑËØ≠Ë®ÄÔºåÊó¢ÁÑ∂ÊòØË∑®‰∫ÜÂπ≥Âè∞ÔºåÊâÄ‰ªòÂá∫ÁöÑ‰ª£‰ª∑Â∞±ÊòØÁâ∫Áâ≤‰∏Ä‰∫õÂØπÂ∫ïÂ±ÇÁöÑÊéßÂà∂ÔºåËÄåjavaË¶ÅÂÆûÁé∞ÂØπÂ∫ïÂ±ÇÁöÑÊéßÂà∂ÔºåÂ∞±Ë¶Å‰∏Ä‰∫õÂÖ∂‰ªñËØ≠Ë®ÄÁöÑÂ∏ÆÂä©ÔºåËøô‰∏™Â∞±ÊòØnativeÁöÑ‰ΩúÁî®‰∫Ü","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"waitÂíåsleepÁöÑÂºÇÂêå","slug":"waitÂíåsleepÁöÑÂºÇÂêå","date":"2021-05-28T16:00:00.000Z","updated":"2021-05-29T13:31:07.038Z","comments":true,"path":"2021/05/29/waitÂíåsleepÁöÑÂºÇÂêå/","link":"","permalink":"http://example.com/2021/05/29/wait%E5%92%8Csleep%E7%9A%84%E5%BC%82%E5%90%8C/","excerpt":"","text":"Áõ∏ÂêåÁÇπÔºö‰∏ÄÊó¶ÊâßË°åÊñπÊ≥ïÔºåÈÉΩÂèØ‰ª•‰ΩøÂæóÂΩìÂâçÁöÑÁ∫øÁ®ãËøõÂÖ•ÈòªÂ°ûÁä∂ÊÄÅ„ÄÇ ‰∏çÂêåÁÇπÔºö1Ôºâ‰∏§‰∏™ÊñπÊ≥ïÂ£∞ÊòéÁöÑ‰ΩçÁΩÆ‰∏çÂêåÔºöThreadÁ±ª‰∏≠Â£∞Êòésleep() , ObjectÁ±ª‰∏≠Â£∞Êòéwait() 2ÔºâË∞ÉÁî®ÁöÑË¶ÅÊ±Ç‰∏çÂêåÔºösleep()ÂèØ‰ª•Âú®‰ªª‰ΩïÈúÄË¶ÅÁöÑÂú∫ÊôØ‰∏ãË∞ÉÁî®„ÄÇ wait()ÂøÖÈ°ª‰ΩøÁî®Âú®ÂêåÊ≠•‰ª£Á†ÅÂùóÊàñÂêåÊ≠•ÊñπÊ≥ï‰∏≠ 3ÔºâÂÖ≥‰∫éÊòØÂê¶ÈáäÊîæÂêåÊ≠•ÁõëËßÜÂô®ÔºöÂ¶ÇÊûú‰∏§‰∏™ÊñπÊ≥ïÈÉΩ‰ΩøÁî®Âú®ÂêåÊ≠•‰ª£Á†ÅÂùóÊàñÂêåÊ≠•ÊñπÊ≥ï‰∏≠Ôºåsleep()‰∏ç‰ºöÈáäÊîæÈîÅÔºåwait()‰ºöÈáäÊîæÈîÅ„ÄÇ Sleep()ÊñπÊ≥ïÊòØÂ±û‰∫éThreadÁ±ª‰∏≠ÁöÑÔºåËÄåwait()ÊñπÊ≥ïÊòØÂ±û‰∫éObjectÁ±ª‰∏≠ÁöÑ„ÄÇ Sleep()ÊñπÊ≥ïÂØºËá¥‰∫ÜÁ®ãÂ∫èÊöÇÂÅúÊâßË°åÊåáÂÆöÁöÑÊó∂Èó¥ÔºåËÆ©Âá∫cpuÁªôÂÖ∂‰ªñÁ∫øÁ®ãÔºå‰ΩÜÊòØ‰ªñÁöÑÁõëÊéßÁä∂ÊÄÅ‰æùÁÑ∂‰øùÊåÅÁùÄÔºåÂΩìÊåáÂÆöÁöÑÊó∂Èó¥ÁªìÊùüÂêéÂèà‰ºöËá™Âä®ÊÅ¢Â§çËøêË°åÁä∂ÊÄÅ„ÄÇ Âú®Ë∞ÉÁî®sleepÊñπÊ≥ïÊó∂ÔºåÁ∫øÁ®ã‰∏ç‰ºöÈáäÊîæÂØπË±°ÈîÅ„ÄÇ Âú®Ë∞ÉÁî®waitÊñπÊ≥ïÊó∂ÔºåÁ∫øÁ®ã‰ºöÈáäÊîæÂØπË±°ÈîÅÔºåËøõÂÖ•Á≠âÂæÖÊ≠§ÂØπË±°ÁöÑÁ≠âÂæÖÈîÅÂÆöÊ±†ÔºåÂè™ÊúâÊ≠§ÂØπË±°Ë∞ÉÁî®notifyÊñπÊ≥ïÂêéÊú¨Á∫øÁ®ãÊâçËøõÂÖ•ÂØπË±°ÈîÅÂÆöÊ±†ÂáÜÂ§á„ÄÇ sleepÂèØ‰ª•Âú®‰ªª‰ΩïÂú∞Êñπ‰ΩøÁî®ÔºåËÄåwaitÂè™ËÉΩÂú®ÂêåÊ≠•ÊñπÊ≥ïÊàñËÄÖÂêåÊ≠•Âùó‰∏≠‰ΩøÁî®„ÄÇ Âè¶Â§ñÔºåsleepÊòØÈùôÊÄÅÊñπÊ≥ïÔºåwaitÊòØÈùûÈùôÊÄÅÊñπÊ≥ï„ÄÇ","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"Âø´ÈÄüÂ§±Ë¥•„ÄÅÂÆâÂÖ®Â§±Ë¥•","slug":"Âø´ÈÄüÂ§±Ë¥•„ÄÅÂÆâÂÖ®Â§±Ë¥•","date":"2021-05-28T16:00:00.000Z","updated":"2021-05-29T13:29:02.295Z","comments":true,"path":"2021/05/29/Âø´ÈÄüÂ§±Ë¥•„ÄÅÂÆâÂÖ®Â§±Ë¥•/","link":"","permalink":"http://example.com/2021/05/29/%E5%BF%AB%E9%80%9F%E5%A4%B1%E8%B4%A5%E3%80%81%E5%AE%89%E5%85%A8%E5%A4%B1%E8%B4%A5/","excerpt":"","text":"Âø´ÈÄüÂ§±Ë¥•ÔºöÂú®‰ΩøÁî®Ëø≠‰ª£Âô®ÂØπÈõÜÂêàËøõË°åËø≠‰ª£ÁöÑËøáÁ®ã‰∏≠ÔºåÂ¶ÇÊûú A Á∫øÁ®ãÊ≠£Âú®ÂØπÈõÜÂêàËøõË°åÈÅçÂéÜÔºåÊ≠§Êó∂ B Á∫øÁ®ãÂØπÈõÜÂêàËøõË°å‰øÆÊîπÔºàÂ¢ûÂä†„ÄÅÂà†Èô§„ÄÅ‰øÆÊîπÔºâÔºåÊàñËÄÖ A Á∫øÁ®ãÂú®ÈÅçÂéÜËøáÁ®ã‰∏≠ÂØπÈõÜÂêàËøõË°å‰øÆÊîπÔºåÈÉΩ‰ºöÂØºËá¥ A Á∫øÁ®ãÊäõÂá∫ ConcurrentModificationException ÂºÇÂ∏∏„ÄÇ ÂÆâÂÖ®Â§±Ë¥•ÔºöÈááÁî®ÂÆâÂÖ®Â§±Ë¥•Êú∫Âà∂ÁöÑÈõÜÂêàÂÆπÂô®ÔºåÂú®ÈÅçÂéÜÊó∂‰∏çÊòØÁõ¥Êé•Âú®ÈõÜÂêàÂÜÖÂÆπ‰∏äËÆøÈóÆÁöÑÔºåËÄåÊòØÂÖàÂ§çÂà∂ÂéüÊúâÈõÜÂêàÂÜÖÂÆπÔºåÂú®Êã∑Ë¥ùÁöÑÈõÜÂêà‰∏äËøõË°åÈÅçÂéÜ„ÄÇ Áî±‰∫éËø≠‰ª£Êó∂ÊòØÂØπÂéüÈõÜÂêàÁöÑÊã∑Ë¥ùËøõË°åÈÅçÂéÜÔºåÊâÄ‰ª•Âú®ÈÅçÂéÜËøáÁ®ã‰∏≠ÂØπÂéüÈõÜÂêàÊâÄ‰ΩúÁöÑ‰øÆÊîπÂπ∂‰∏çËÉΩË¢´Ëø≠‰ª£Âô®Ê£ÄÊµãÂà∞ÔºåÊïÖ‰∏ç‰ºöÊäõ ConcurrentModificationException ÂºÇÂ∏∏","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"ÁÆÄÂçïÊ≠ªÈîÅÁöÑÊµãËØï","slug":"ÁÆÄÂçïÊ≠ªÈîÅÁöÑÊµãËØï","date":"2021-05-28T16:00:00.000Z","updated":"2021-05-29T13:32:30.639Z","comments":true,"path":"2021/05/29/ÁÆÄÂçïÊ≠ªÈîÅÁöÑÊµãËØï/","link":"","permalink":"http://example.com/2021/05/29/%E7%AE%80%E5%8D%95%E6%AD%BB%E9%94%81%E7%9A%84%E6%B5%8B%E8%AF%95/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738/** * @author Mithrandir * @date 2021-04-2021/4/12-10:19 * ÊµãËØïÊ≠ªÈîÅ */public class DeadLock &#123; public static void main(String[] args) &#123; new Thread(new myThread1()).start(); new Thread(new myThread2()).start(); &#125;&#125;class myThread2 implements Runnable&#123; @Override public void run() &#123; synchronized (myLock.lock2)&#123; System.out.println(&quot;ËøôÊòØmyThread2ÁöÑÁ¨¨‰∏ÄÂ±ÇÔºåÂ∑≤ÁªèÊåÅÊúâlock2&quot;);//Ê≠ªÈîÅÊÉÖÂÜµ‰∏ãÔºåÂè™ÊúâËøôË°åËÉΩËæìÂá∫ synchronized (myLock.lock1)&#123; System.out.println(&quot;ËøôÊòØmyThread2ÁöÑÁ¨¨‰∫åÂ±ÇÔºåÂ∑≤ÁªèÊåÅÊúâlock2Âíålock1&quot;); &#125; &#125; &#125;&#125;class myThread1 implements Runnable&#123; @Override public void run() &#123; synchronized (myLock.lock1)&#123; System.out.println(&quot;ËøôÊòØmyThread1ÁöÑÁ¨¨‰∏ÄÂ±Ç,Â∑≤ÁªèÊåÅÊúâlock1&quot;);//Ê≠ªÈîÅÊÉÖÂÜµ‰∏ãÔºåÂè™ÊúâËøôË°åËÉΩËæìÂá∫ synchronized (myLock.lock2)&#123; System.out.println(&quot;ËøôÊòØmyThead1ÁöÑÁ¨¨‰∫åÂ±ÇÔºåÂ∑≤ÁªèÊåÅÊúâlock1Âíålock2&quot;); &#125; &#125; &#125;&#125;class myLock&#123; static Object lock1=new Object(); static Object lock2=new Object();&#125;","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"Ëß£ÂÜ≥Á∫øÁ®ãÂÆâÂÖ®ÁöÑÊñπÂºè","slug":"Ëß£ÂÜ≥Á∫øÁ®ãÂÆâÂÖ®ÁöÑÊñπÂºè","date":"2021-05-28T16:00:00.000Z","updated":"2021-05-29T13:27:53.163Z","comments":true,"path":"2021/05/29/Ëß£ÂÜ≥Á∫øÁ®ãÂÆâÂÖ®ÁöÑÊñπÂºè/","link":"","permalink":"http://example.com/2021/05/29/%E8%A7%A3%E5%86%B3%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84%E6%96%B9%E5%BC%8F/","excerpt":"","text":"‰∏ÄÔºöÂêåÊ≠•‰ª£Á†ÅÂùósynchronized(ÂêåÊ≠•ÁõëËßÜÂô®){ //ÈúÄË¶ÅË¢´ÂêåÊ≠•ÁöÑ‰ª£Á†Å } ËØ¥ÊòéÔºö 1.Êìç‰ΩúÂÖ±‰∫´Êï∞ÊçÆÁöÑ‰ª£Á†ÅÔºåÂç≥‰∏∫ÈúÄË¶ÅË¢´ÂêåÊ≠•ÁöÑ‰ª£Á†Å„ÄÇ ‚Äì&gt;‰∏çËÉΩÂåÖÂê´‰ª£Á†ÅÂ§ö‰∫ÜÔºå‰πü‰∏çËÉΩÂåÖÂê´‰ª£Á†ÅÂ∞ë‰∫Ü„ÄÇ ‚Äã 2.ÂÖ±‰∫´Êï∞ÊçÆÔºöÂ§ö‰∏™Á∫øÁ®ãÂÖ±ÂêåÊìç‰ΩúÁöÑÂèòÈáè„ÄÇÊØîÂ¶ÇÔºöticketÂ∞±ÊòØÂÖ±‰∫´Êï∞ÊçÆ„ÄÇ ‚Äã 3.ÂêåÊ≠•ÁõëËßÜÂô®Ôºå‰øóÁß∞ÔºöÈîÅ„ÄÇ‰ªª‰Ωï‰∏Ä‰∏™Á±ªÁöÑÂØπË±°ÔºåÈÉΩÂèØ‰ª•ÂÖÖÂΩìÈîÅ„ÄÇ ‚Äã Ë¶ÅÊ±ÇÔºöÂ§ö‰∏™Á∫øÁ®ãÂøÖÈ°ªË¶ÅÂÖ±Áî®Âêå‰∏ÄÊääÈîÅ„ÄÇ Ë°•ÂÖÖÔºöÂú®ÂÆûÁé∞RunnableÊé•Âè£ÂàõÂª∫Â§öÁ∫øÁ®ãÁöÑÊñπÂºè‰∏≠ÔºåÊàë‰ª¨ÂèØ‰ª•ËÄÉËôë‰ΩøÁî®thisÂÖÖÂΩìÂêåÊ≠•ÁõëËßÜÂô®„ÄÇ ‚Äã Âú®ÁªßÊâøThreadÁ±ªÂàõÂª∫Â§öÁ∫øÁ®ãÁöÑÊñπÂºè‰∏≠ÔºåÊÖéÁî®thisÂÖÖÂΩìÂêåÊ≠•ÁõëËßÜÂô®ÔºåËÄÉËôë‰ΩøÁî®ÂΩìÂâçÁ±ªÂÖÖÂΩìÂêåÊ≠•ÁõëËßÜ ‰∫åÔºöÂêåÊ≠•ÊñπÊ≥ïÂ¶ÇÊûúÊìç‰ΩúÂÖ±‰∫´Êï∞ÊçÆÁöÑ‰ª£Á†ÅÂÆåÊï¥ÁöÑÂ£∞ÊòéÂú®‰∏Ä‰∏™ÊñπÊ≥ï‰∏≠ÔºåÊàë‰ª¨‰∏çÂ¶®Â∞ÜÊ≠§ÊñπÊ≥ïÂ£∞ÊòéÂêåÊ≠•ÁöÑ„ÄÇ ÂÖ≥‰∫éÂêåÊ≠•ÊñπÊ≥ïÁöÑÊÄªÁªìÔºö \\1. ÂêåÊ≠•ÊñπÊ≥ï‰ªçÁÑ∂Ê∂âÂèäÂà∞ÂêåÊ≠•ÁõëËßÜÂô®ÔºåÂè™ÊòØ‰∏çÈúÄË¶ÅÊàë‰ª¨ÊòæÂºèÁöÑÂ£∞Êòé„ÄÇ \\2. ÈùûÈùôÊÄÅÁöÑÂêåÊ≠•ÊñπÊ≥ïÔºåÂêåÊ≠•ÁõëËßÜÂô®ÊòØÔºöthis ÈùôÊÄÅÁöÑÂêåÊ≠•ÊñπÊ≥ïÔºåÂêåÊ≠•ÁõëËßÜÂô®ÊòØÔºöÂΩìÂâçÁ±ªÊú¨Ë∫´ ÂêåÊ≠•‰ª£Á†ÅÂùóÂíåÂêåÊ≠•ÊñπÊ≥ïÁöÑÂØπÊØîÔºö ÂÖ∂ÂÆûËøòÊòØÂêåÊ≠•‰ª£Á†ÅÂùóÂ•Ω‰∏Ä‰∫õÔºåÂõ†‰∏∫ÂêåÊ≠•ÊñπÊ≥ïÁöÑ‰ΩúÁî®ËåÉÂõ¥Áõ∏ÂØπÊù•ËØ¥‰ºöÊØîËæÉÂπøÊ≥õÔºåÂæàÂÆπÊòì‰ºöÂåÖÊã¨Ëøõ‰∏Ä‰∫õÊ≤°ÂøÖË¶ÅÂêåÊ≠•ÁöÑ‰ª£Á†ÅÔºåËøôÊ†∑‰ºöÈÄ†ÊàêÊïàÁéáÈôç‰Ωé„ÄÇ ‰∏âÔºöÂêåÊ≠•ÈîÅLockÔºàjdk5.0Êñ∞Â¢ûÔºå‰πüÂ∞±ÊòØÂª∫ËÆÆÁî®ÔºâÂú®ÈúÄË¶ÅÂêåÊ≠•ÁöÑ‰ª£Á†ÅÂâçË∞ÉÁî®Lock ÁöÑlockÂáΩÊï∞ÔºåÂú®ÈúÄË¶ÅÂêåÊ≠•ÁöÑ‰ª£Á†ÅÊâßË°åÂÆå‰πãÂêéÔºåÊâãÂä®Ë∞ÉÁî®unlockÂáΩÊï∞ÊâçËÉΩÈáäÊîæÈîÅ„ÄÇÔºàÂàõÂª∫lockÂØπË±°Êó∂ÔºåÁî®ÁöÑÊó∂reentrantlockËøô‰∏™Á±ªÂàõÂª∫ÁöÑÔºâ synchronizeÂíålockÁöÑÂºÇÂêåÔºöÂêåÔºöÈÉΩÂèØ‰ª•Ëß£ÂÜ≥Á∫øÁ®ãÂÆâÂÖ®ÈóÆÈ¢ò ÂºÇÔºösynchronizeÂú®ÊâßË°åÂÆåÂØπÂ∫îÁöÑ‰ª£Á†ÅÂùó‰πãÂêéÔºå‰ºöËá™Âä®ÈáäÊîæÈîÅÔºõlockÂøÖÈ°ªÊâãÂä®ÈáäÊîæÈîÅ","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"JavaÂπ∂Âèë","slug":"JavaÂπ∂Âèë","date":"2021-05-27T11:47:41.000Z","updated":"2021-05-27T12:17:59.544Z","comments":true,"path":"2021/05/27/JavaÂπ∂Âèë/","link":"","permalink":"http://example.com/2021/05/27/Java%E5%B9%B6%E5%8F%91/","excerpt":"","text":"JMMÊ¶ÇËø∞ ‰∏çÂêåÁ∫øÁ®ã‰πãÈó¥Êó†Ê≥ïÁõ¥Êé•ËÆøÈóÆÂØπÊñπÂ∑•‰ΩúÂÜÖÂ≠ò‰∏≠ÁöÑÂèòÈáèÔºåÁ∫øÁ®ãÈó¥ÁöÑÈÄö‰ø°ÊñπÂºè‰∏ÄËà¨Êúâ‰∏âÁßçÊñπÂºèËøõË°åÔºö 1„ÄÅwait/notify 2„ÄÅÂà©Áî®ÂÖ±‰∫´ÂÜÖÂ≠ò 3„ÄÅwhileËΩÆËØ¢ JMMÈááÁî®ÁöÑÂ∞±ÊòØÂÖ±‰∫´ÂÜÖÂ≠òÊñπÂºèÂÆûÁé∞Á∫øÁ®ãÈó¥ÈÄöËÆØ„ÄÇ ÂèØËßÅÊÄß„ÄÅÂéüÂ≠êÊÄß„ÄÅÊúâÂ∫èÊÄßÂèØËßÅÊÄßÔºöÊåáÁ∫øÁ®ã‰πãÈó¥ÁöÑÂèØËßÅÊÄßÔºå‰∏Ä‰∏™Á∫øÁ®ã‰øÆÊîπÁöÑÁä∂ÊÄÅÂØπÂè¶Â§ñ‰∏Ä‰∏™Á∫øÁ®ãÊòØÂèØËßÅÁöÑ„ÄÇÔºàvolatileÂèØ‰ª•‰øùËØÅÂèòÈáèÁöÑÂèØËßÅÊÄßÔºâ ÂéüÂ≠êÊÄßÔºöÊåá‰∏Ä‰∏™Êìç‰ΩúÊàñËÄÖÂ§ö‰∏™Êìç‰ΩúË¶Å‰πàÈÉΩÊâßË°åÔºåË¶Å‰πàÈÉΩ‰∏çÊâßË°å„ÄÇÔºàsynchronizedÂèØ‰øùËØÅÂéüÂ≠êÊÄßÔºâ ÊúâÂ∫èÊÄßÔºöÂØπ‰∫é‰∏Ä‰∏™Á∫øÁ®ãÁöÑ‰ª£Á†ÅËÄåË®ÄÔºåÊàë‰ª¨ÊÄªÊòØ‰ª•‰∏∫‰ª£Á†ÅÁöÑÊâßË°åÊòØ‰ªéÂâçÂæÄÂêéÁöÑÔºå‰æùÊ¨°ÊâßË°åÁöÑ„ÄÇËøô‰πàËØ¥‰∏çËÉΩËØ¥ÂÆåÂÖ®‰∏çÂØπÔºåÂú®ÂçïÁ∫øÁ®ãÁ®ãÂ∫èÈáåÔºåÁ°ÆÂÆû‰ºöËøôÊ†∑ÊâßË°åÔºõ‰ΩÜÊòØÂú®Â§öÁ∫øÁ®ãÂπ∂ÂèëÊó∂ÔºåÁ®ãÂ∫èÁöÑÊâßË°åÂ∞±ÊúâÂèØËÉΩÂá∫Áé∞‰π±Â∫è„ÄÇÁî®‰∏ÄÂè•ËØùÂèØ‰ª•ÊÄªÁªì‰∏∫ÔºöÂú®Êú¨Á∫øÁ®ãÂÜÖËßÇÂØüÔºåÊìç‰ΩúÈÉΩÊòØÊúâÂ∫èÁöÑÔºõÂ¶ÇÊûúÂú®‰∏Ä‰∏™Á∫øÁ®ã‰∏≠ËßÇÂØüÂè¶Â§ñ‰∏Ä‰∏™Á∫øÁ®ãÔºåÊâÄÊúâÁöÑÊìç‰ΩúÈÉΩÊòØÊó†Â∫èÁöÑ„ÄÇÂâçÂçäÂè•ÊòØÊåá‚ÄúÁ∫øÁ®ãÂÜÖË°®Áé∞‰∏∫‰∏≤Ë°åËØ≠‰πâÔºàWithIn Thread As-if-Serial SemanticsÔºâ‚Äù,ÂêéÂçäÂè•ÊòØÊåá‚ÄúÊåá‰ª§ÈáçÊéí‚ÄùÁé∞Ë±°Âíå‚ÄúÂ∑•‰ΩúÂÜÖÂ≠òÂíå‰∏ªÂÜÖÂ≠òÂêåÊ≠•Âª∂Ëøü‚ÄùÁé∞Ë±°„ÄÇ ‰∏Ä‰∏™ÊúÄÁªèÂÖ∏ÁöÑ‰æãÂ≠êÂ∞±ÊòØÈì∂Ë°åÊ±áÊ¨æÈóÆÈ¢òÔºå‰∏Ä‰∏™Èì∂Ë°åË¥¶Êà∑Â≠òÊ¨æ100ÔºåËøôÊó∂‰∏Ä‰∏™‰∫∫‰ªéËØ•Ë¥¶Êà∑Âèñ10ÂÖÉÔºåÂêåÊó∂Âè¶‰∏Ä‰∏™‰∫∫ÂêëËØ•Ë¥¶Êà∑Ê±á10ÂÖÉÔºåÈÇ£‰πà‰ΩôÈ¢ùÂ∫îËØ•ËøòÊòØ100„ÄÇÈÇ£‰πàÊ≠§Êó∂ÂèØËÉΩÂèëÁîüËøôÁßçÊÉÖÂÜµÔºåAÁ∫øÁ®ãË¥üË¥£ÂèñÊ¨æÔºåBÁ∫øÁ®ãË¥üË¥£Ê±áÊ¨æÔºåA‰ªé‰∏ªÂÜÖÂ≠òËØªÂà∞100ÔºåB‰ªé‰∏ªÂÜÖÂ≠òËØªÂà∞100ÔºåAÊâßË°åÂáè10Êìç‰ΩúÔºåÂπ∂Â∞ÜÊï∞ÊçÆÂà∑Êñ∞Âà∞‰∏ªÂÜÖÂ≠òÔºåËøôÊó∂‰∏ªÂÜÖÂ≠òÊï∞ÊçÆ100-10=90ÔºåËÄåBÂÜÖÂ≠òÊâßË°åÂä†10Êìç‰ΩúÔºåÂπ∂Â∞ÜÊï∞ÊçÆÂà∑Êñ∞Âà∞‰∏ªÂÜÖÂ≠òÔºåÊúÄÂêé‰∏ªÂÜÖÂ≠òÊï∞ÊçÆ100+10=110ÔºåÊòæÁÑ∂ËøôÊòØ‰∏Ä‰∏™‰∏•ÈáçÁöÑÈóÆÈ¢òÔºåÊàë‰ª¨Ë¶Å‰øùËØÅAÁ∫øÁ®ãÂíåBÁ∫øÁ®ãÊúâÂ∫èÊâßË°åÔºåÂÖàÂèñÊ¨æÂêéÊ±áÊ¨æÊàñËÄÖÂÖàÊ±áÊ¨æÂêéÂèñÊ¨æÔºåÊ≠§‰∏∫ÊúâÂ∫èÊÄß„ÄÇ JavaÊèê‰æõ‰∫Ü‰∏§‰∏™ÂÖ≥ÈîÆÂ≠óvolatileÂíåsynchronizedÊù•‰øùËØÅÂ§öÁ∫øÁ®ã‰πãÈó¥Êìç‰ΩúÁöÑÊúâÂ∫èÊÄß,volatileÂÖ≥ÈîÆÂ≠óÊú¨Ë∫´ÈÄöËøáÂä†ÂÖ•ÂÜÖÂ≠òÂ±èÈöúÊù•Á¶ÅÊ≠¢Êåá‰ª§ÁöÑÈáçÊéíÂ∫èÔºåËÄåsynchronizedÂÖ≥ÈîÆÂ≠óÈÄöËøá‰∏Ä‰∏™ÂèòÈáèÂú®Âêå‰∏ÄÊó∂Èó¥Âè™ÂÖÅËÆ∏Êúâ‰∏Ä‰∏™Á∫øÁ®ãÂØπÂÖ∂ËøõË°åÂä†ÈîÅÁöÑËßÑÂàôÊù•ÂÆûÁé∞Ôºå Âú®ÂçïÁ∫øÁ®ãÁ®ãÂ∫è‰∏≠Ôºå‰∏ç‰ºöÂèëÁîü‚ÄúÊåá‰ª§ÈáçÊéí‚ÄùÂíå‚ÄúÂ∑•‰ΩúÂÜÖÂ≠òÂíå‰∏ªÂÜÖÂ≠òÂêåÊ≠•Âª∂Ëøü‚ÄùÁé∞Ë±°ÔºåÂè™Âú®Â§öÁ∫øÁ®ãÁ®ãÂ∫è‰∏≠Âá∫Áé∞„ÄÇ Happen beforeÂéüÂàôÂÆö‰πâ‰∫ÜÂì™‰∫õÊåá‰ª§‰∏çËÉΩÈáçÊéíÔºöÂçïÁ∫øÁ®ãÁöÑhappen beforeÂéüÂàô ÂÜôÂú®ÂâçÈù¢ÁöÑÊìç‰Ωúhappen beforeÂêéÈù¢ÁöÑÊìç‰Ωú ÈîÅÁöÑhappen-beforeÂéüÂàôÔºö Âêå‰∏Ä‰∏™ÈîÅÁöÑunlockÊìç‰Ωúhappen-beforeÊ≠§ÈîÅÁöÑlockÊìç‰Ωú„ÄÇ volatileÁöÑhappen-beforeÂéüÂàôÔºö ÂØπ‰∏Ä‰∏™volatileÂèòÈáèÁöÑÂÜôÊìç‰Ωúhappen-beforeÂØπÊ≠§ÂèòÈáèÁöÑ‰ªªÊÑèÊìç‰Ωú(ÂΩìÁÑ∂‰πüÂåÖÊã¨ÂÜôÊìç‰Ωú‰∫Ü)„ÄÇ happen-beforeÁöÑ‰º†ÈÄíÊÄßÂéüÂàôÔºö Â¶ÇÊûúAÊìç‰Ωú happen-before BÊìç‰ΩúÔºåBÊìç‰Ωúhappen-before CÊìç‰ΩúÔºåÈÇ£‰πàAÊìç‰Ωúhappen-before CÊìç‰Ωú„ÄÇ Á∫øÁ®ãÂêØÂä®ÁöÑhappen-beforeÂéüÂàôÔºö Âêå‰∏Ä‰∏™Á∫øÁ®ãÁöÑstartÊñπÊ≥ïhappen-beforeÊ≠§Á∫øÁ®ãÁöÑÂÖ∂ÂÆÉÊñπÊ≥ï„ÄÇ Á∫øÁ®ã‰∏≠Êñ≠ÁöÑhappen-beforeÂéüÂàôÔºö ÂØπÁ∫øÁ®ãinterruptÊñπÊ≥ïÁöÑË∞ÉÁî®happen-beforeË¢´‰∏≠Êñ≠Á∫øÁ®ãÁöÑÊ£ÄÊµãÂà∞‰∏≠Êñ≠ÂèëÈÄÅÁöÑ‰ª£Á†Å„ÄÇ Á∫øÁ®ãÁªàÁªìÁöÑhappen-beforeÂéüÂàôÔºö Á∫øÁ®ã‰∏≠ÁöÑÊâÄÊúâÊìç‰ΩúÈÉΩhappen-beforeÁ∫øÁ®ãÁöÑÁªàÊ≠¢Ê£ÄÊµã„ÄÇ ÂØπË±°ÂàõÂª∫ÁöÑhappen-beforeÂéüÂàôÔºö ‰∏Ä‰∏™ÂØπË±°ÁöÑÂàùÂßãÂåñÂÆåÊàêÂÖà‰∫é‰ªñÁöÑfinalizeÊñπÊ≥ïË∞ÉÁî®„ÄÇ Âì™‰∫õ‰ºöËøõË°åÈáçÊéíÔºöÊâßË°åÁ®ãÂ∫èÊó∂‰∏∫‰∫ÜÊèêÈ´òÊÄßËÉΩÔºåÁºñËØëÂô®ÂíåÂ§ÑÁêÜÂô®ÁªèÂ∏∏‰ºöÂØπÊåá‰ª§ËøõË°åÈáçÊñ∞ÊéíÂ∫è„ÄÇ ÁºñËØëÂô®‰ºòÂåñÁöÑÈáçÊéíÂ∫èÔºö ÁºñËØëÂô®Âú®‰∏çÊîπÂèòÂçïÁ∫øÁ®ãÁ®ãÂ∫èËØ≠‰πâÁöÑÂâçÊèê‰∏ãÔºåÂèØ‰ª•ÈáçÊñ∞ÂÆâÊéíËØ≠Âè•ÁöÑÊâßË°åÈ°∫Â∫è„ÄÇ ÂÜÖÂ≠òÁ≥ªÁªüÁöÑÈáçÊéíÂ∫èÔºö Áî±‰∫éÂ§ÑÁêÜÂô®‰ΩøÁî®ÁöÑÊòØÁºìÂ≠òÂíåËØªÂÜôÁºìÂÜ≤Âå∫ÔºåÁúã‰∏äÂéªÂÉèÊòØ‰π±Â∫èÊâßË°å„ÄÇ","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"JavaÂêÑÁßçÂØπÊØî","slug":"JavaÂêÑÁßçÂØπÊØî","date":"2021-05-26T16:00:00.000Z","updated":"2021-05-27T09:09:27.122Z","comments":true,"path":"2021/05/27/JavaÂêÑÁßçÂØπÊØî/","link":"","permalink":"http://example.com/2021/05/27/Java%E5%90%84%E7%A7%8D%E5%AF%B9%E6%AF%94/","excerpt":"","text":"ÂõõÁßçÊùÉÈôêÁöÑ‰ΩúÁî®ËåÉÂõ¥ÂØπÊØîÔºö public protected default private Âêå‰∏Ä‰∏™Á±ª ÂèØ ÂèØ ÂèØ ÂèØ Âêå‰∏Ä‰∏™ÂåÖ ÂèØ ÂèØ ÂèØ ‰∏çÂèØ Â≠êÁ±ªÁà∂Á±ª ÂèØ ÂèØ ‰∏çÂèØ ‰∏çÂèØ ‰∏çÂêåÂåÖ‰πãÈó¥ ÂèØ ‰∏çÂèØ ‰∏çÂèØ ‰∏çÂèØ ==ÂíåequalsÂØπÊØî ==ÊòØÂà§Êñ≠‰∏§‰∏™ÂèòÈáèÊòØÂê¶ÊåáÂêëÂêå‰∏ÄÂùóÂÜÖÂ≠òÁ©∫Èó¥ÔºõequalsÊòØÂà§Êñ≠‰∏§‰∏™ÂèòÈáèÊàñÂÆû‰æãÊâÄÊåáÂêëÁöÑÂÜÖÂ≠òÁ©∫Èó¥ÁöÑÂÄºÊòØÂê¶Áõ∏Âêå ==ÊòØÂØπÂÜÖÂ≠òÂú∞ÂùÄËøõË°åÊØîËæÉÔºåequalsÂàôÊòØÂØπÂÜÖÂÆπËøõË°åÊØîËæÉÔºõ ==ÊØîËæÉÂºïÁî®ÊòØÂê¶Áõ∏ÂêåÔºåequalsÊØîËæÉÂÄºÊòØÂê¶Áõ∏Âêå comparableÂíåcomparatorÂØπÊØîComparable‚Äã ‰∏Ä‰∏™Á±ªÁöÑÂÆûÁé∞Êé•Âè£ÔºåÂ±û‰∫éÂÜÖÂµåÊØîËæÉ„ÄÇÂàõÂª∫‰∏Ä‰∏™Á±ªÊó∂ÂèØÂÆûÁé∞ËØ•Êé•Âè£ÔºåÈáçÂÜôcompareTo()ÊñπÊ≥ïÔºåÁî®‰∫éËá™ÂÆöÊØîËæÉÊñπÊ≥ïÔºå‰πãÂêéÂèØÈááÁî®collections‰∏≠ÁöÑsortÊñπÊ≥ïËøõË°åÊéíÂ∫è„ÄÇ 123456789101112131415161718192021222324252627282930313233343536373839404142/** * @author Mithrandir * @date 2021-04-2021/4/12-14:50 * Á±ªÂÆûÁé∞comparableÊé•Âè£ÔºåÂèØ‰ª•ÁêÜËß£‰∏∫Â∞ÜÊØîËæÉÊñπÂºèÂµåÂÖ•Ëá™Ë∫´Ôºå‰æøÂèØ‰ª•Áõ¥Êé•Ë∞ÉÁî®CollectionsÁöÑsortÊñπÊ≥ï * ÔºàÂõ†‰∏∫ÂÆûÁé∞Êé•Âè£Êó∂ÈáçÂÜôÁöÑcompareToÊñπÊ≥ïÂÆö‰πâ‰∫ÜÊØîËæÉÊñπÊ≥ïÔºâ */public class ComparableLearn &#123; @Test public void test()&#123; List&lt;Person&gt; list = new ArrayList&lt;&gt;(); list.add(new Person(5)); list.add(new Person(1)); list.add(new Person(9)); list.add(new Person(7)); Collections.sort(list); for(Person person:list)&#123; System.out.println(person); &#125; &#125;&#125;class Person implements Comparable&lt;Person&gt; &#123; private int age; @Override public String toString() &#123; return &quot;Person&#123;&quot; + &quot;age=&quot; + age + &#x27;&#125;&#x27;; &#125; public Person() &#123; &#125; public Person(int age) &#123; this.age = age; &#125; @Override public int compareTo(Person o) &#123; return this.age-o.age; &#125;&#125; Comparator1234567891011121314151617181920212223242526272829303132333435363738394041/** * @author Mithrandir * @date 2021-04-2021/4/12-14:59 * comparator‰Ωú‰∏∫‰∏Ä‰∏™‰∏¥Êó∂ÊØîËæÉÂô®ÔºåÂú®Ë∞ÉÁî®collectionsÁöÑsortÊñπÊ≥ïÊó∂ÂÜô‰∏Ä‰∏™ÊØîËæÉÊñπÊ≥ï */public class ComparatorLearn &#123; @Test public void test()&#123; List&lt;Student&gt; list = new ArrayList&lt;&gt;(); list.add(new Student(2)); list.add(new Student(6)); list.add(new Student(1)); list.add(new Student(9)); Collections.sort(list, new Comparator&lt;Student&gt;() &#123; @Override public int compare(Student o1, Student o2) &#123; return o1.age-o2.age; &#125; &#125;); for(Student student:list)&#123; System.out.println(student); &#125; &#125;&#125;class Student &#123; int age; @Override public String toString() &#123; return &quot;Student&#123;&quot; + &quot;age=&quot; + age + &#x27;&#125;&#x27;; &#125; public Student() &#123; &#125; public Student(int age) &#123; this.age = age; &#125;&#125; StringÂíåStringBuilderÂíåStringBufferString: Â∫ïÂ±ÇÁî®ÁöÑÊòØfinal char[] StringBuilder: Á∫øÁ®ãÂÆâÂÖ® StringBuilder: Á∫øÁ®ã‰∏çÂÆâÂÖ®ÔºåÊïàÁéáÈ´ò ÈáçËΩΩÂíåÈáçÂÜôÈáçËΩΩÂú®Âêå‰∏Ä‰∏™classÂÜÖÂØπÂêå‰∏Ä‰∏™ÂáΩÊï∞ËøõË°åÈáçËΩΩÔºåÂøÖÈ°ª‰øùËØÅÂΩ¢ÂèÇ‰∏™Êï∞ÊàñËÄÖÂΩ¢ÂèÇÁ±ªÂûã‰∏çÂêå ÈáçÂÜôÁî®‰∫éÂ≠êÁ±ªÁªßÊâøÁà∂Á±ªÔºåÂØπÁà∂Á±ª‰∏≠ÊñπÊ≥ïÁöÑÈáçÂÜô Âü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÂíåÂºïÁî®Êï∞ÊçÆÁ±ªÂûãÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãboolean„ÄÅbyte„ÄÅint„ÄÅchar„ÄÅlong„ÄÅshort„ÄÅdouble„ÄÅfloat ÂºïÁî®Êï∞ÊçÆÁ±ªÂûãÊï∞ÁªÑ„ÄÅÁ±ª„ÄÅÊé•Âè£‚Ä¶ ‰∏∫‰∫ÜÁºñÁ®ãÁöÑÊñπ‰æøËøòÊòØÂºïÂÖ•‰∫ÜÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÔºå‰ΩÜÊòØ‰∏∫‰∫ÜËÉΩÂ§üÂ∞ÜËøô‰∫õÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÂΩìÊàêÂØπË±°Êìç‰ΩúÔºåJava‰∏∫ÊØè‰∏Ä‰∏™Âü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÈÉΩÂºïÂÖ•‰∫ÜÂØπÂ∫îÁöÑÂåÖË£ÖÁ±ªÂûãÔºàwrapper classÔºâÔºåintÁöÑÂåÖË£ÖÁ±ªÂ∞±ÊòØIntegerÔºå‰ªéJava 5ÂºÄÂßãÂºïÂÖ•‰∫ÜËá™Âä®Ë£ÖÁÆ±/ÊãÜÁÆ±Êú∫Âà∂Ôºå‰ΩøÂæó‰∫åËÄÖÂèØ‰ª•Áõ∏‰∫íËΩ¨Êç¢„ÄÇ Âü∫Êú¨Á±ªÂûã ÂØπÂ∫îÁöÑÂåÖË£ÖÁ±ª byte Byte short Short int Integer long Long float Float double Double char Character boolean Boolean Âü∫Êú¨‰ΩøÁî®ÂØπÊØî IntegerÊòØintÁöÑÂåÖË£ÖÁ±ªÔºõintÊòØÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÔºõ IntegerÂèòÈáèÂøÖÈ°ªÂÆû‰æãÂåñÂêéÊâçËÉΩ‰ΩøÁî®ÔºõintÂèòÈáè‰∏çÈúÄË¶ÅÔºõ IntegerÂÆûÈôÖÊòØÂØπË±°ÁöÑÂºïÁî®ÔºåÊåáÂêëÊ≠§newÁöÑIntegerÂØπË±°ÔºõintÊòØÁõ¥Êé•Â≠òÂÇ®Êï∞ÊçÆÂÄº Ôºõ IntegerÁöÑÈªòËÆ§ÂÄºÊòØnullÔºõintÁöÑÈªòËÆ§ÂÄºÊòØ0 Ê∑±Â∫¶‰ΩøÁî®ÂØπÊØî Áî±‰∫éIntegerÂèòÈáèÂÆûÈôÖ‰∏äÊòØÂØπ‰∏Ä‰∏™IntegerÂØπË±°ÁöÑÂºïÁî®ÔºåÊâÄ‰ª•‰∏§‰∏™ÈÄöËøánewÁîüÊàêÁöÑIntegerÂèòÈáèÊ∞∏ËøúÊòØ‰∏çÁõ∏Á≠âÁöÑÔºàÂõ†‰∏∫newÁîüÊàêÁöÑÊòØ‰∏§‰∏™ÂØπË±°ÔºåÂÖ∂ÂÜÖÂ≠òÂú∞ÂùÄ‰∏çÂêåÔºâ„ÄÇ IntegerÂèòÈáèÂíåintÂèòÈáèÊØîËæÉÊó∂ÔºåÂè™Ë¶Å‰∏§‰∏™ÂèòÈáèÁöÑÂÄºÊòØÂêëÁ≠âÁöÑÔºåÂàôÁªìÊûú‰∏∫trueÔºàÂõ†‰∏∫ÂåÖË£ÖÁ±ªIntegerÂíåÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãintÊØîËæÉÊó∂Ôºåjava‰ºöËá™Âä®ÊãÜÂåÖË£Ö‰∏∫intÔºåÁÑ∂ÂêéËøõË°åÊØîËæÉÔºåÂÆûÈôÖ‰∏äÂ∞±Âèò‰∏∫‰∏§‰∏™intÂèòÈáèÁöÑÊØîËæÉÔºâ„ÄÇ ÈùûnewÁîüÊàêÁöÑIntegerÂèòÈáèÂíånew Integer()ÁîüÊàêÁöÑÂèòÈáèÊØîËæÉÊó∂ÔºåÁªìÊûú‰∏∫false„ÄÇÂõ†‰∏∫ÈùûnewÁîüÊàêÁöÑIntegerÂèòÈáèÊåáÂêëÁöÑÊòØÈùôÊÄÅÂ∏∏ÈáèÊ±†‰∏≠cacheÊï∞ÁªÑ‰∏≠Â≠òÂÇ®ÁöÑÊåáÂêë‰∫ÜÂ†Ü‰∏≠ÁöÑIntegerÂØπË±°ÔºåËÄånew Integer()ÁîüÊàêÁöÑÂèòÈáèÊåáÂêëÂ†Ü‰∏≠Êñ∞Âª∫ÁöÑÂØπË±°Ôºå‰∏§ËÄÖÂú®ÂÜÖÂ≠ò‰∏≠ÁöÑÂØπË±°ÂºïÁî®ÔºàÂú∞ÂùÄÔºâ‰∏çÂêå„ÄÇ ÂØπ‰∫é‰∏§‰∏™ÈùûnewÁîüÊàêÁöÑIntegerÂØπË±°ÔºåËøõË°åÊØîËæÉÊó∂ÔºåÂ¶ÇÊûú‰∏§‰∏™ÂèòÈáèÁöÑÂÄºÂú®Âå∫Èó¥-128Âà∞127‰πãÈó¥ÔºåÂàôÊØîËæÉÁªìÊûú‰∏∫trueÔºåÂ¶ÇÊûú‰∏§‰∏™ÂèòÈáèÁöÑÂÄº‰∏çÂú®Ê≠§Âå∫Èó¥ÔºåÂàôÊØîËæÉÁªìÊûú‰∏∫false ÂØπ‰∫éÁ¨¨4Êù°ÁöÑÂéüÂõ†Ôºö javaÂú®ÁºñËØëInteger i = 100 ;Êó∂Ôºå‰ºöÁøªËØëÊàê‰∏∫Integer i = Integer.valueOf(100)„ÄÇËÄåjava API‰∏≠ÂØπIntegerÁ±ªÂûãÁöÑvalueOfÁöÑÂÆö‰πâÂ¶Ç‰∏ãÔºåÂØπ‰∫é-128Âà∞127‰πãÈó¥ÁöÑÊï∞Ôºå‰ºöËøõË°åÁºìÂ≠òÔºåInteger i = 127Êó∂Ôºå‰ºöÂ∞Ü127Ëøô‰∏™IntegerÂØπË±°ËøõË°åÁºìÂ≠òÔºå‰∏ãÊ¨°ÂÜçÂÜôInteger j = 127Êó∂ÔºåÂ∞±‰ºöÁõ¥Êé•‰ªéÁºìÂ≠ò‰∏≠ÂèñÔºåÂ∞±‰∏ç‰ºönew‰∫Ü„ÄÇ Âπ∂ÂèëÂíåÂπ∂Ë°åÂπ∂ÂèëÔºàconcurrentÔºâ‰∫§ÊõøÂÅö‰∏çÂêå‰∫ãÊÉÖÁöÑËÉΩÂäõÔºõ‰∏çÂêå‰ª£Á†ÅÂùó‰∫§ÊõøÊâßË°åÁöÑËÉΩÂäõ Á®ãÂ∫èÈúÄË¶ÅË¢´ËÆæËÆ°ÊàêËÉΩÂ§ÑÁêÜÂ§ö‰∏™ÂêåÊó∂ÔºàÂá†‰πéÊòØÂêåÊó∂ÔºâÂèëÁîüÁöÑ‰∫ãÊÉÖ Âπ∂Ë°åÔºàparallelismÔºâÂêåÊó∂ÂÅö‰∏çÂêå‰∫ãÊÉÖÁöÑËÉΩÂäõÔºõ‰∏çÂêå‰ª£Á†ÅÂùóÂêåÊó∂ÊâßË°å ÈÄöËøáÂ∞ÜÈóÆÈ¢ò‰∏≠ÁöÑÂ§ö‰∏™ÈÉ®ÂàÜÂπ∂Ë°åÊâßË°åÔºåÂä†ÈÄüËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"VolatileÂÖ≥ÈîÆÂ≠ó","slug":"VolatileÂÖ≥ÈîÆÂ≠ó","date":"2021-05-26T16:00:00.000Z","updated":"2021-05-27T12:16:26.726Z","comments":true,"path":"2021/05/27/VolatileÂÖ≥ÈîÆÂ≠ó/","link":"","permalink":"http://example.com/2021/05/27/Volatile%E5%85%B3%E9%94%AE%E5%AD%97/","excerpt":"","text":"volatileÂÖ≥ÈîÆÂ≠óvolatile ÊòØ‰∏Ä‰∏™Á±ªÂûã‰øÆÈ•∞Á¨¶„ÄÇvolatile ÁöÑ‰ΩúÁî®ÊòØ‰Ωú‰∏∫Êåá‰ª§ÂÖ≥ÈîÆÂ≠óÔºåÁ°Æ‰øùÊú¨Êù°Êåá‰ª§‰∏ç‰ºöÂõ†ÁºñËØëÂô®ÁöÑ‰ºòÂåñËÄåÁúÅÁï• ÁâπÊÄßÔºö ‰øùËØÅ‰∫Ü‰∏çÂêåÁ∫øÁ®ãÂØπËøô‰∏™ÂèòÈáèËøõË°åÊìç‰ΩúÊó∂ÁöÑÂèØËßÅÊÄßÔºåÂç≥‰∏Ä‰∏™Á∫øÁ®ã‰øÆÊîπ‰∫ÜÊüê‰∏™ÂèòÈáèÁöÑÂÄºÔºåËøôÊñ∞ÂÄºÂØπÂÖ∂‰ªñÁ∫øÁ®ãÊù•ËØ¥ÊòØÁ´ãÂç≥ÂèØËßÅÁöÑ„ÄÇÔºàÂÆûÁé∞ÂèØËßÅÊÄßÔºâ Á¶ÅÊ≠¢ËøõË°åÊåá‰ª§ÈáçÊéíÂ∫è„ÄÇÔºà‰øùËØÅ‰∏ÄÂÆöÁ®ãÂ∫¶‰∏äÁöÑÂéüÂ≠êÊÄßÔºâ volatile Âè™ËÉΩ‰øùËØÅÂØπÂçïÊ¨°ËØª/ÂÜôÁöÑÂéüÂ≠êÊÄß„ÄÇi++ ËøôÁßçÊìç‰Ωú‰∏çËÉΩ‰øùËØÅÂéüÂ≠êÊÄß ÁÆÄÂçï‰ªãÁªç‰∏ãÊåá‰ª§ÈáçÊéí Á¨¨‰∏Ä‰∏™‰∏∫ËØªÊìç‰ΩúÊó∂ÔºåÁ¨¨‰∫å‰∏™‰ªª‰ΩïÊìç‰Ωú‰∏çÂèØÈáçÊéíÂ∫èÂà∞Á¨¨‰∏Ä‰∏™ÂâçÈù¢„ÄÇ Á¨¨‰∫å‰∏™‰∏∫ÂÜôÊìç‰ΩúÊó∂ÔºåÁ¨¨‰∏Ä‰∏™‰ªª‰ΩïÊìç‰Ωú‰∏çÂèØÈáçÊéíÂ∫èÂà∞Á¨¨‰∫å‰∏™ÂêéÈù¢„ÄÇ Á¨¨‰∏Ä‰∏™‰∏∫ÂÜôÊìç‰ΩúÊó∂ÔºåÁ¨¨‰∫å‰∏™ÁöÑËØªÂÜôÊìç‰Ωú‰πü‰∏çËøêË°åÈáçÊéíÂ∫è„ÄÇ","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"Â∏∏ËßÅÁöÑÁ∫øÁ®ãË∞ÉÂ∫¶ÁÆóÊ≥ï","slug":"Â∏∏ËßÅÁöÑÁ∫øÁ®ãË∞ÉÂ∫¶ÁÆóÊ≥ï","date":"2021-05-26T16:00:00.000Z","updated":"2021-05-27T12:31:51.123Z","comments":true,"path":"2021/05/27/Â∏∏ËßÅÁöÑÁ∫øÁ®ãË∞ÉÂ∫¶ÁÆóÊ≥ï/","link":"","permalink":"http://example.com/2021/05/27/%E5%B8%B8%E8%A7%81%E7%9A%84%E7%BA%BF%E7%A8%8B%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/","excerpt":"","text":"ÂÖàÊù•ÂÖàÊúçÂä°Ôºàfirst come first serverdÔºâ‰ºòÁÇπÔºö Êòì‰∫éÂÆûÁé∞ÔºåÁõ∏ÂΩìÂÖ¨Âπ≥Ôºõ Áº∫ÁÇπÔºö ÊúâÂà©‰∫éÈïøËøõÁ®ãÔºå‰∏çÂà©‰∫éÁü≠ËøõÁ®ã Áü≠‰Ωú‰∏ö‰ºòÂÖàÔºàshortest job firstÔºâ‰ºòÁÇπÔºö Âπ≥ÂùáÂë®ËΩ¨Êó∂Èó¥ÊúÄÁü≠ÔºåËøõÁ®ãÁ≠âÂæÖÊó∂Èó¥ÊúÄÁü≠ÔºåÂèØ‰ª•Â¢ûÂ§ßÁ≥ªÁªüÂêûÂêêÈáè Áº∫ÁÇπÔºö Èöæ‰ª•È¢ÑÊµãËøõÁ®ãÊâßË°åÊó∂Èó¥ÔºåÂºÄÈîÄËæÉÂ§ßÔºõ‰∏çÂà©‰∫éÈïøËøõÁ®ã ÊúÄÁü≠Ââ©‰ΩôÊó∂Èó¥‰ºòÂÖàÔºàshortest remaining time nextÔºâÊåâÈ¢Ñ‰º∞Ââ©‰ΩôÊó∂Èó¥ÊúÄÁü≠È°∫Â∫èËøõË°åË∞ÉÂ∫¶ È´ò‰ºòÂÖàÊùÉ‰ºòÂÖàË∞ÉÂ∫¶ÁÆóÊ≥ï‰∏∫‰∫ÜÁÖßÈ°æÁ¥ßËø´Âûã‰Ωú‰∏öÔºå‰Ωø‰πãÂú®ËøõÂÖ•Á≥ªÁªüÂêé‰æøËé∑Âæó‰ºòÂÖàÂ§ÑÁêÜ„ÄÇ 1„ÄÅÈùûÊä¢Âç†Âºè‰ºòÂÖàÊùÉÁÆóÊ≥ï 2„ÄÅÊä¢Âç†Âºè‰ºòÂÖàÊùÉÁÆóÊ≥ï È´òÂìçÂ∫îÊØî‰ºòÂÖàË∞ÉÂ∫¶ÁÆóÊ≥ïÊ†πÊçÆÊØîÁéáÔºöR=(w+s)/s ÔºàR‰∏∫ÂìçÂ∫îÊØîÔºåw‰∏∫Á≠âÂæÖÂ§ÑÁêÜÁöÑÊó∂Èó¥Ôºås‰∏∫È¢ÑËÆ°ÁöÑÊúçÂä°Êó∂Èó¥Ôºâ Â¶ÇÊûúËØ•ËøõÁ®ãË¢´Á´ãÂç≥Ë∞ÉÁî®ÔºåÂàôRÂÄºÁ≠â‰∫éÂΩí‰∏ÄÂåñÂë®ËΩ¨Êó∂Èó¥ÔºàÂë®ËΩ¨Êó∂Èó¥ÂíåÊúçÂä°Êó∂Èó¥ÁöÑÊØîÁéáÔºâ„ÄÇRÊúÄÂ∞èÂÄº‰∏∫1.0ÔºåÂè™ÊúâÁ¨¨‰∏Ä‰∏™ËøõÂÖ•Á≥ªÁªüÁöÑËøõÁ®ãÊâçËÉΩËææÂà∞ËØ•ÂÄº„ÄÇË∞ÉÂ∫¶ËßÑÂàô‰∏∫ÔºöÂΩìÂâçËøõÁ®ãÂÆåÊàêÊàñË¢´ÈòªÂ°ûÊó∂ÔºåÈÄâÊã©RÂÄºÊúÄÂ§ßÁöÑÂ∞±Áª™ËøõÁ®ãÔºåÂÆÉËØ¥Êòé‰∫ÜËøõÁ®ãÁöÑÂπ¥ÈæÑ„ÄÇÂΩìÂÅèÂêëÁü≠‰Ωú‰∏öÊó∂ÔºåÈïøËøõÁ®ãÁî±‰∫éÂæó‰∏çÂà∞ÊúçÂä°ÔºåÁ≠âÂæÖÊó∂Èó¥‰∏çÊñ≠Â¢ûÂä†Ôºå‰ªéËÄåÂ¢ûÂä†ÊØîÂÄºÔºåÊúÄÁªàÂú®Á´û‰∫â‰∏≠Ëµ¢‰∫ÜÁü≠ËøõÁ®ã„ÄÇ ÂíåÊúÄÁü≠ËøõÁ®ã‰ºòÂÖà„ÄÅÊúÄÁü≠Ââ©‰ΩôÊó∂Èó¥‰ºòÂÖà‰∏ÄÊ†∑Ôºå‰ΩøÁî®ÊúÄÈ´òÂìçÂ∫îÊØîÁ≠ñÁï•ÈúÄË¶Å‰º∞ËÆ°È¢ÑËÆ°ÊúçÂä°Êó∂Èó¥„ÄÇ Êó∂Èó¥ÁâáËΩÆËΩ¨Ê≥ïËΩÆËΩ¨Ê≥ïÊòØÂü∫‰∫éÈÄÇ‰∏≠ÁöÑÊä¢Âç†Á≠ñÁï•ÁöÑÔºå‰ª•‰∏Ä‰∏™Âë®ÊúüÊÄßÈó¥Èöî‰∫ßÁîüÊó∂Èíü‰∏≠Êñ≠ÔºåÂΩì‰∏≠Êñ≠ÂèëÁîüÂêéÔºåÂΩìÂâçÊ≠£Âú®ËøêË°åÁöÑËøõÁ®ãË¢´ÁΩÆ‰∫éÂ∞±Áª™ÈòüÂàó‰∏≠ÔºåÁÑ∂ÂêéÂü∫‰∫éÂÖàÊù•ÂÖàÂéªÊúçÂä°Á≠ñÁï•ÈÄâÊã©‰∏ã‰∏Ä‰∏™Â∞±Áª™‰Ωú‰∏öÁöÑËøêË°å„ÄÇËøôÁßçÊäÄÊúØ‰πüÁß∞‰∏∫Êó∂Èó¥ÁâáÔºåÂõ†‰∏∫ÊØè‰∏™ËøõÁ®ãÂÜçË¢´Êä¢Âç†‰πãÂâçÈÉΩÁªôÂÆö‰∏ÄÁâáÊó∂Èó¥„ÄÇ Â§öÁ∫ßÂèçÈ¶àÈòüÂàóÂ§öÁ∫ßÂèçÈ¶àÈòüÂàóÁÆóÊ≥ïÔºå‰∏çÂøÖ‰∫ãÂÖàÁü•ÈÅìÂêÑÁßçËøõÁ®ãÊâÄÈúÄË¶ÅÊâßË°åÁöÑÊó∂Èó¥Ôºå‰ªñÊòØÂΩìÂâçË¢´ÂÖ¨ËÆ§ÁöÑ‰∏ÄÁßçËæÉÂ•ΩÁöÑËøõÁ®ãË∞ÉÂ∫¶ÁÆóÊ≥ï„ÄÇÂÖ∂ÂÆûÊñΩËøáÁ®ãÂ¶Ç‰∏ãÔºö 1)ËÆæÁΩÆÂ§ö‰∏™Â∞±Áª™ÈòüÂàóÔºåÂπ∂‰∏∫ÂêÑ‰∏™ÈòüÂàóËµã‰∫à‰∏çÂêåÁöÑ‰ºòÂÖàÁ∫ß„ÄÇÂú®‰ºòÂÖàÊùÉË∂äÈ´òÁöÑÈòüÂàó‰∏≠Ôºå‰∏∫ÊØè‰∏™ËøõÁ®ãÊâÄËßÑÂÆöÁöÑÊâßË°åÊó∂Èó¥ÁâáÂ∞±Ë∂äÂ∞è„ÄÇ 2)ÂΩì‰∏Ä‰∏™Êñ∞ËøõÁ®ãËøõÂÖ•ÂÜÖÂ≠òÂêéÔºåÈ¶ñÂÖàÊîæÂÖ•Á¨¨‰∏ÄÈòüÂàóÁöÑÊú´Â∞æÔºåÊåâÁÖßÂÖàÊù•ÂÖàÂéªÂéüÂàôÊéíÈòüÁ≠âÂÄôË∞ÉÂ∫¶„ÄÇÂ¶ÇÊûú‰ªñËÉΩÂú®‰∏Ä‰∏™Êó∂Èó¥Áâá‰∏≠ÂÆåÊàêÔºå‰æøÂèØÊí§Á¶ªÔºõÂ¶ÇÊûúÊú™ÂÆåÊàêÔºåÂ∞±ËΩ¨ÂÖ•Á¨¨‰∫åÈòüÂàóÁöÑÊú´Â∞æÔºåÂêåÊ†∑Á≠âÂæÖË∞ÉÂ∫¶‚Ä¶..Â¶ÇÊ≠§‰∏ãÂéªÔºåÂΩì‰∏Ä‰∏™Èïø‰Ωú‰∏öÔºàËøõÁ®ãÔºâ‰ªéÁ¨¨‰∏ÄÈòüÂàó‰æùÊ¨°Â∞ÜÂà∞Á¨¨nÈòüÂàóÔºàÊúÄÂêéÈòüÂàóÔºâÂêéÔºå‰æøÊåâÁ¨¨nÈòüÂàóÊó∂Èó¥ÁâáËΩÆËΩ¨ËøêË°å„ÄÇ 3)‰ªÖÂΩìÁ¨¨‰∏ÄÈòüÂàóÁ©∫Èó≤ÁöÑÊó∂ÂÄôÔºåË∞ÉÂ∫¶Á®ãÂ∫èÊâçË∞ÉÂ∫¶Á¨¨‰∫åÈòüÂàó‰∏≠ÁöÑËøõÁ®ãËøêË°åÔºõ‰ªÖÂΩìÁ¨¨1Âà∞Ôºài-1ÔºâÈòüÂàóÁ©∫Êó∂ÔºåÊâç‰ºöË∞ÉÂ∫¶Á¨¨iÈòüÂàó‰∏≠ÁöÑËøõÁ®ãËøêË°åÔºåÂπ∂ÊâßË°åÁõ∏Â∫îÁöÑÊó∂Èó¥ÁâáËΩÆËΩ¨„ÄÇ 4)Â¶ÇÊûúÂ§ÑÁêÜÊú∫Ê≠£Âú®Â§ÑÁêÜÁ¨¨iÈòüÂàó‰∏≠ÊüêËøõÁ®ãÔºåÂèàÊúâÊñ∞ËøõÁ®ãËøõÂÖ•‰ºòÂÖàÊùÉËæÉÈ´òÁöÑÈòüÂàóÔºåÂàôÊ≠§Êñ∞ÈòüÂàóÊä¢Âç†Ê≠£Âú®ËøêË°åÁöÑÂ§ÑÁêÜÊú∫ÔºåÂπ∂ÊääÊ≠£Âú®ËøêË°åÁöÑËøõÁ®ãÊîæÂú®Á¨¨iÈòüÂàóÁöÑÈòüÂ∞æ„ÄÇ","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"Á∫øÁ®ãÁä∂ÊÄÅ","slug":"Á∫øÁ®ãÁä∂ÊÄÅ","date":"2021-05-26T16:00:00.000Z","updated":"2021-05-27T12:18:02.409Z","comments":true,"path":"2021/05/27/Á∫øÁ®ãÁä∂ÊÄÅ/","link":"","permalink":"http://example.com/2021/05/27/%E7%BA%BF%E7%A8%8B%E7%8A%B6%E6%80%81/","excerpt":"","text":"Á∫øÁ®ãÁöÑÁä∂ÊÄÅÊñ∞Âª∫Áä∂ÊÄÅÔºànewÔºâ Á∫øÁ®ãÂàõÂª∫‰πãÂêé ÂèØËøêË°åÔºàrunningÔºâ ÂèØËÉΩÊ≠£Âú®ËøêË°åÔºå‰πüÂèØËÉΩÊ≠£Âú®Á≠âÂæÖcpuÊó∂Èó¥Áâá ÈòªÂ°ûÔºàblockedÔºâ Á≠âÂæÖËé∑Âèñ‰∏Ä‰∏™Êéí‰ªñÈîÅÔºåÂ¶ÇÊûúÂÖ∂‰ªñÁ∫øÁ®ãÈáäÊîæ‰∫ÜÈîÅÂ∞±‰ºöÁªìÊùüÊ≠§Áä∂ÊÄÅ Êó†ÈôêÊúüÁ≠âÂæÖÔºàwaitingÔºâ Á≠âÂæÖÂÖ∂‰ªñÁ∫øÁ®ãÊòæÁ§∫Âî§ÈÜíÔºåÂê¶Âàô‰∏ç‰ºöÂàÜÈÖçcpuÊó∂Èó¥Áâá ÈôêÊúüÁ≠âÂæÖÔºàtime_waitingÔºâ Êó†ÈúÄÂÖ∂‰ªñÁ∫øÁ®ãËøõË°åÊòæÁ§∫Âî§ÈÜíÔºåÂà∞ËææÊó∂Èó¥‰πãÂêé‰ºöË¢´Á≥ªÁªüËá™Âä®Âî§ÈÜí ÁªàÊ≠¢ÔºàterminatedÔºâ ÂèØËÉΩÊòØ‰ªªÂä°ÁªìÊùü‰πãÂêéÁöÑÁªàÊ≠¢Ôºå‰πüÂèØËÉΩÊòØÂá∫Áé∞ÂºÇÂ∏∏ÁªàÊ≠¢","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"Á∫øÁ®ãËøõÁ®ãÂçèÁ®ã","slug":"ËøõÁ®ãÁ∫øÁ®ãÂçèÁ®ã","date":"2021-05-26T16:00:00.000Z","updated":"2021-05-27T12:24:31.807Z","comments":true,"path":"2021/05/27/ËøõÁ®ãÁ∫øÁ®ãÂçèÁ®ã/","link":"","permalink":"http://example.com/2021/05/27/%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B%E5%8D%8F%E7%A8%8B/","excerpt":"","text":"ËøõÁ®ã‰∏Ä‰∏™Âú®ÂÜÖÂ≠ò‰∏≠ËøêË°åÁöÑÂ∫îÁî®Á®ãÂ∫è„ÄÇÊØè‰∏™ËøõÁ®ãÈÉΩÊúâËá™Â∑±Áã¨Á´ãÁöÑ‰∏ÄÂùóÂÜÖÂ≠òÁ©∫Èó¥Ôºå‰∏Ä‰∏™ËøõÁ®ãÂèØ‰ª•ÊúâÂ§ö‰∏™Á∫øÁ®ãÔºåÊØîÂ¶ÇÂú®WindowsÁ≥ªÁªü‰∏≠Ôºå‰∏Ä‰∏™ËøêË°åÁöÑxx.exeÂ∞±ÊòØ‰∏Ä‰∏™ËøõÁ®ã„ÄÇ Á∫øÁ®ãËøõÁ®ã‰∏≠ÁöÑ‰∏Ä‰∏™ÊâßË°å‰ªªÂä°ÔºàÊéßÂà∂ÂçïÂÖÉÔºâÔºåË¥üË¥£ÂΩìÂâçËøõÁ®ã‰∏≠Á®ãÂ∫èÁöÑÊâßË°å„ÄÇ‰∏Ä‰∏™ËøõÁ®ãËá≥Â∞ëÊúâ‰∏Ä‰∏™Á∫øÁ®ãÔºå‰∏Ä‰∏™ËøõÁ®ãÂèØ‰ª•ËøêË°åÂ§ö‰∏™Á∫øÁ®ãÔºåÂ§ö‰∏™Á∫øÁ®ãÂèØÂÖ±‰∫´Êï∞ÊçÆ„ÄÇ ‰∏éËøõÁ®ã‰∏çÂêåÁöÑÊòØÂêåÁ±ªÁöÑÂ§ö‰∏™Á∫øÁ®ãÂÖ±‰∫´ËøõÁ®ãÁöÑÂ†ÜÂíåÊñπÊ≥ïÂå∫ËµÑÊ∫êÔºå‰ΩÜÊØè‰∏™Á∫øÁ®ãÊúâËá™Â∑±ÁöÑÁ®ãÂ∫èËÆ°Êï∞Âô®„ÄÅËôöÊãüÊú∫Ê†àÂíåÊú¨Âú∞ÊñπÊ≥ïÊ†àÔºåÊâÄ‰ª•Á≥ªÁªüÂú®‰∫ßÁîü‰∏Ä‰∏™Á∫øÁ®ãÔºåÊàñÊòØÂú®ÂêÑ‰∏™Á∫øÁ®ã‰πãÈó¥‰ΩúÂàáÊç¢Â∑•‰ΩúÊó∂ÔºåË¥üÊãÖË¶ÅÊØîËøõÁ®ãÂ∞èÂæóÂ§öÔºå‰πüÊ≠£Âõ†‰∏∫Â¶ÇÊ≠§ÔºåÁ∫øÁ®ã‰πüË¢´Áß∞‰∏∫ËΩªÈáèÁ∫ßËøõÁ®ã„ÄÇ ËøõÁ®ã‰∏éÁ∫øÁ®ãÁöÑÂå∫Âà´ÊÄªÁªìÁ∫øÁ®ãÂÖ∑ÊúâËÆ∏Â§ö‰º†ÁªüËøõÁ®ãÊâÄÂÖ∑ÊúâÁöÑÁâπÂæÅÔºåÊïÖÂèàÁß∞‰∏∫ËΩªÂûãËøõÁ®ã(Light‚ÄîWeight Process)ÊàñËøõÁ®ãÂÖÉÔºõËÄåÊää‰º†ÁªüÁöÑËøõÁ®ãÁß∞‰∏∫ÈáçÂûãËøõÁ®ã(Heavy‚ÄîWeight Process)ÔºåÂÆÉÁõ∏ÂΩì‰∫éÂè™Êúâ‰∏Ä‰∏™Á∫øÁ®ãÁöÑ‰ªªÂä°„ÄÇÂú®ÂºïÂÖ•‰∫ÜÁ∫øÁ®ãÁöÑÊìç‰ΩúÁ≥ªÁªü‰∏≠ÔºåÈÄöÂ∏∏‰∏Ä‰∏™ËøõÁ®ãÈÉΩÊúâËã•Âπ≤‰∏™Á∫øÁ®ãÔºåËá≥Â∞ëÂåÖÂê´‰∏Ä‰∏™Á∫øÁ®ã„ÄÇ Ê†πÊú¨Âå∫Âà´ÔºöËøõÁ®ãÊòØÊìç‰ΩúÁ≥ªÁªüËµÑÊ∫êÂàÜÈÖçÁöÑÂü∫Êú¨Âçï‰ΩçÔºåËÄåÁ∫øÁ®ãÊòØÂ§ÑÁêÜÂô®‰ªªÂä°Ë∞ÉÂ∫¶ÂíåÊâßË°åÁöÑÂü∫Êú¨Âçï‰Ωç ËµÑÊ∫êÂºÄÈîÄÔºöÊØè‰∏™ËøõÁ®ãÈÉΩÊúâÁã¨Á´ãÁöÑ‰ª£Á†ÅÂíåÊï∞ÊçÆÁ©∫Èó¥ÔºàÁ®ãÂ∫è‰∏ä‰∏ãÊñáÔºâÔºåÁ®ãÂ∫è‰πãÈó¥ÁöÑÂàáÊç¢‰ºöÊúâËæÉÂ§ßÁöÑÂºÄÈîÄÔºõÁ∫øÁ®ãÂèØ‰ª•ÁúãÂÅöËΩªÈáèÁ∫ßÁöÑËøõÁ®ãÔºåÂêå‰∏ÄÁ±ªÁ∫øÁ®ãÂÖ±‰∫´‰ª£Á†ÅÂíåÊï∞ÊçÆÁ©∫Èó¥ÔºåÊØè‰∏™Á∫øÁ®ãÈÉΩÊúâËá™Â∑±Áã¨Á´ãÁöÑËøêË°åÊ†àÂíåÁ®ãÂ∫èËÆ°Êï∞Âô®ÔºàPCÔºâÔºåÁ∫øÁ®ã‰πãÈó¥ÂàáÊç¢ÁöÑÂºÄÈîÄÂ∞è„ÄÇ ÂåÖÂê´ÂÖ≥Á≥ªÔºöÂ¶ÇÊûú‰∏Ä‰∏™ËøõÁ®ãÂÜÖÊúâÂ§ö‰∏™Á∫øÁ®ãÔºåÂàôÊâßË°åËøáÁ®ã‰∏çÊòØ‰∏ÄÊù°Á∫øÁöÑÔºåËÄåÊòØÂ§öÊù°Á∫øÔºàÁ∫øÁ®ãÔºâÂÖ±ÂêåÂÆåÊàêÁöÑÔºõÁ∫øÁ®ãÊòØËøõÁ®ãÁöÑ‰∏ÄÈÉ®ÂàÜÔºåÊâÄ‰ª•Á∫øÁ®ã‰πüË¢´Áß∞‰∏∫ËΩªÊùÉËøõÁ®ãÊàñËÄÖËΩªÈáèÁ∫ßËøõÁ®ã„ÄÇ ÂÜÖÂ≠òÂàÜÈÖçÔºöÂêå‰∏ÄËøõÁ®ãÁöÑÁ∫øÁ®ãÂÖ±‰∫´Êú¨ËøõÁ®ãÁöÑÂú∞ÂùÄÁ©∫Èó¥ÂíåËµÑÊ∫êÔºåËÄåËøõÁ®ã‰πãÈó¥ÁöÑÂú∞ÂùÄÁ©∫Èó¥ÂíåËµÑÊ∫êÊòØÁõ∏‰∫íÁã¨Á´ãÁöÑ ÂΩ±ÂìçÂÖ≥Á≥ªÔºö‰∏Ä‰∏™ËøõÁ®ãÂ¥©Ê∫ÉÂêéÔºåÂú®‰øùÊä§Ê®°Âºè‰∏ã‰∏ç‰ºöÂØπÂÖ∂‰ªñËøõÁ®ã‰∫ßÁîüÂΩ±ÂìçÔºå‰ΩÜÊòØ‰∏Ä‰∏™Á∫øÁ®ãÂ¥©Ê∫ÉÊï¥‰∏™ËøõÁ®ãÈÉΩÊ≠ªÊéâ„ÄÇÊâÄ‰ª•Â§öËøõÁ®ãË¶ÅÊØîÂ§öÁ∫øÁ®ãÂÅ•Â£Æ„ÄÇ ÊâßË°åËøáÁ®ãÔºöÊØè‰∏™Áã¨Á´ãÁöÑËøõÁ®ãÊúâÁ®ãÂ∫èËøêË°åÁöÑÂÖ•Âè£„ÄÅÈ°∫Â∫èÊâßË°åÂ∫èÂàóÂíåÁ®ãÂ∫èÂá∫Âè£„ÄÇ‰ΩÜÊòØÁ∫øÁ®ã‰∏çËÉΩÁã¨Á´ãÊâßË°åÔºåÂøÖÈ°ª‰æùÂ≠òÂú®Â∫îÁî®Á®ãÂ∫è‰∏≠ÔºåÁî±Â∫îÁî®Á®ãÂ∫èÊèê‰æõÂ§ö‰∏™Á∫øÁ®ãÊâßË°åÊéßÂà∂Ôºå‰∏§ËÄÖÂùáÂèØÂπ∂ÂèëÊâßË°å Â§öËøõÁ®ãÂíåÂ§öÁ∫øÁ®ãÂå∫Âà´Â§öËøõÁ®ãÔºöÊìç‰ΩúÁ≥ªÁªü‰∏≠ÂêåÊó∂ËøêË°åÁöÑÂ§ö‰∏™Á®ãÂ∫è Â§öÁ∫øÁ®ãÔºöÂú®Âêå‰∏Ä‰∏™ËøõÁ®ã‰∏≠ÂêåÊó∂ËøêË°åÁöÑÂ§ö‰∏™‰ªªÂä° ‰∏æ‰∏™‰æãÂ≠êÔºåÂ§öÁ∫øÁ®ã‰∏ãËΩΩËΩØ‰ª∂ÔºåÂèØ‰ª•ÂêåÊó∂ËøêË°åÂ§ö‰∏™Á∫øÁ®ãÔºå‰ΩÜÊòØÈÄöËøáÁ®ãÂ∫èËøêË°åÁöÑÁªìÊûúÂèëÁé∞ÔºåÊØè‰∏ÄÊ¨°ÁªìÊûúÈÉΩ‰∏ç‰∏ÄËá¥„ÄÇ Âõ†‰∏∫Â§öÁ∫øÁ®ãÂ≠òÂú®‰∏Ä‰∏™ÁâπÊÄßÔºöÈöèÊú∫ÊÄß„ÄÇÈÄ†ÊàêÁöÑÂéüÂõ†ÔºöCPUÂú®Áû¨Èó¥‰∏çÊñ≠ÂàáÊç¢ÂéªÂ§ÑÁêÜÂêÑ‰∏™Á∫øÁ®ãËÄåÂØºËá¥ÁöÑÔºåÂèØ‰ª•ÁêÜËß£ÊàêÂ§ö‰∏™Á∫øÁ®ãÂú®Êä¢CPUËµÑÊ∫ê„ÄÇ Java‰∏≠ÁöÑÂ§öÁ∫øÁ®ãJavaÁ®ãÂ∫èÁöÑËøõÁ®ãÈáåÊúâÂá†‰∏™Á∫øÁ®ãÔºö‰∏ªÁ∫øÁ®ãÔºåÂûÉÂúæÂõûÊî∂Á∫øÁ®ã(ÂêéÂè∞Á∫øÁ®ã)Á≠â Âú® Java ‰∏≠ÔºåÂΩìÊàë‰ª¨ÂêØÂä® main ÂáΩÊï∞Êó∂ÂÖ∂ÂÆûÂ∞±ÊòØÂêØÂä®‰∫Ü‰∏Ä‰∏™ JVM ÁöÑËøõÁ®ãÔºåËÄå main ÂáΩÊï∞ÊâÄÂú®ÁöÑÁ∫øÁ®ãÂ∞±ÊòØËøô‰∏™ËøõÁ®ã‰∏≠ÁöÑ‰∏Ä‰∏™Á∫øÁ®ãÔºå‰πüÁß∞‰∏ªÁ∫øÁ®ã„ÄÇ JavaÊîØÊåÅÂ§öÁ∫øÁ®ãÔºåÂΩìJavaÁ®ãÂ∫èÊâßË°åmainÊñπÊ≥ïÁöÑÊó∂ÂÄôÔºåÂ∞±ÊòØÂú®ÊâßË°å‰∏Ä‰∏™ÂêçÂ≠óÂè´ÂÅömainÁöÑÁ∫øÁ®ãÔºåÂèØ‰ª•Âú®mainÊñπÊ≥ïÊâßË°åÊó∂ÔºåÂºÄÂêØÂ§ö‰∏™Á∫øÁ®ãA,B,CÔºåÂ§ö‰∏™Á∫øÁ®ã main,A,B,CÂêåÊó∂ÊâßË°åÔºåÁõ∏‰∫íÊä¢Â§∫CPUÔºåThreadÁ±ªÊòØjava.langÂåÖ‰∏ãÁöÑ‰∏Ä‰∏™Â∏∏Áî®Á±ª,ÊØè‰∏Ä‰∏™ThreadÁ±ªÁöÑÂØπË±°ÔºåÂ∞±‰ª£Ë°®‰∏Ä‰∏™Â§Ñ‰∫éÊüêÁßçÁä∂ÊÄÅÁöÑÁ∫øÁ®ã ‰ªé JVM ËßíÂ∫¶ËØ¥ËøõÁ®ãÂíåÁ∫øÁ®ã‰πãÈó¥ÁöÑÂÖ≥Á≥ªÔºàÈáçË¶ÅÔºâ ‰ªé‰∏äÂõæÂèØ‰ª•ÁúãÂá∫Ôºö‰∏Ä‰∏™ËøõÁ®ã‰∏≠ÂèØ‰ª•ÊúâÂ§ö‰∏™Á∫øÁ®ãÔºåÂ§ö‰∏™Á∫øÁ®ãÂÖ±‰∫´ËøõÁ®ãÁöÑÂ†ÜÂíåÊñπÊ≥ïÂå∫ (JDK1.8 ‰πãÂêéÁöÑÂÖÉÁ©∫Èó¥)ËµÑÊ∫êÔºå‰ΩÜÊòØÊØè‰∏™Á∫øÁ®ãÊúâËá™Â∑±ÁöÑÁ®ãÂ∫èËÆ°Êï∞Âô®„ÄÅËôöÊãüÊú∫Ê†à Âíå Êú¨Âú∞ÊñπÊ≥ïÊ†à„ÄÇ Á®ãÂ∫èËÆ°Êï∞Âô®‰∏∫‰ªÄ‰πàÊòØÁßÅÊúâÁöÑ? Á®ãÂ∫èËÆ°Êï∞Âô®‰∏ªË¶ÅÊúâ‰∏ãÈù¢‰∏§‰∏™‰ΩúÁî®Ôºö Â≠óËäÇÁ†ÅËß£ÈáäÂô®ÈÄöËøáÊîπÂèòÁ®ãÂ∫èËÆ°Êï∞Âô®Êù•‰æùÊ¨°ËØªÂèñÊåá‰ª§Ôºå‰ªéËÄåÂÆûÁé∞‰ª£Á†ÅÁöÑÊµÅÁ®ãÊéßÂà∂ÔºåÂ¶ÇÔºöÈ°∫Â∫èÊâßË°å„ÄÅÈÄâÊã©„ÄÅÂæ™ÁéØ„ÄÅÂºÇÂ∏∏Â§ÑÁêÜ„ÄÇ Âú®Â§öÁ∫øÁ®ãÁöÑÊÉÖÂÜµ‰∏ãÔºåÁ®ãÂ∫èËÆ°Êï∞Âô®Áî®‰∫éËÆ∞ÂΩïÂΩìÂâçÁ∫øÁ®ãÊâßË°åÁöÑ‰ΩçÁΩÆÔºå‰ªéËÄåÂΩìÁ∫øÁ®ãË¢´ÂàáÊç¢ÂõûÊù•ÁöÑÊó∂ÂÄôËÉΩÂ§üÁü•ÈÅìËØ•Á∫øÁ®ã‰∏äÊ¨°ËøêË°åÂà∞Âì™ÂÑø‰∫Ü„ÄÇ ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºåÂ¶ÇÊûúÊâßË°åÁöÑÊòØ native ÊñπÊ≥ïÔºåÈÇ£‰πàÁ®ãÂ∫èËÆ°Êï∞Âô®ËÆ∞ÂΩïÁöÑÊòØ undefined Âú∞ÂùÄÔºåÂè™ÊúâÊâßË°åÁöÑÊòØ Java ‰ª£Á†ÅÊó∂Á®ãÂ∫èËÆ°Êï∞Âô®ËÆ∞ÂΩïÁöÑÊâçÊòØ‰∏ã‰∏ÄÊù°Êåá‰ª§ÁöÑÂú∞ÂùÄ„ÄÇ ÊâÄ‰ª•ÔºåÁ®ãÂ∫èËÆ°Êï∞Âô®ÁßÅÊúâ‰∏ªË¶ÅÊòØ‰∏∫‰∫ÜÁ∫øÁ®ãÂàáÊç¢ÂêéËÉΩÊÅ¢Â§çÂà∞Ê≠£Á°ÆÁöÑÊâßË°å‰ΩçÁΩÆ„ÄÇ ËôöÊãüÊú∫Ê†àÂíåÊú¨Âú∞ÊñπÊ≥ïÊ†à‰∏∫‰ªÄ‰πàÊòØÁßÅÊúâÁöÑ? ËôöÊãüÊú∫Ê†àÔºöÊØè‰∏™ Java ÊñπÊ≥ïÂú®ÊâßË°åÁöÑÂêåÊó∂‰ºöÂàõÂª∫‰∏Ä‰∏™Ê†àÂ∏ßÁî®‰∫éÂ≠òÂÇ®Â±ÄÈÉ®ÂèòÈáèË°®„ÄÅÊìç‰ΩúÊï∞Ê†à„ÄÅÂ∏∏ÈáèÊ±†ÂºïÁî®Á≠â‰ø°ÊÅØ„ÄÇ‰ªéÊñπÊ≥ïË∞ÉÁî®Áõ¥Ëá≥ÊâßË°åÂÆåÊàêÁöÑËøáÁ®ãÔºåÂ∞±ÂØπÂ∫îÁùÄ‰∏Ä‰∏™Ê†àÂ∏ßÂú® Java ËôöÊãüÊú∫Ê†à‰∏≠ÂÖ•Ê†àÂíåÂá∫Ê†àÁöÑËøáÁ®ã„ÄÇ Êú¨Âú∞ÊñπÊ≥ïÊ†àÔºöÂíåËôöÊãüÊú∫Ê†àÊâÄÂèëÊå•ÁöÑ‰ΩúÁî®ÈùûÂ∏∏Áõ∏‰ººÔºåÂå∫Âà´ÊòØ:ËôöÊãüÊú∫Ê†à‰∏∫ËôöÊãüÊú∫ÊâßË°å Java ÊñπÊ≥ï(‰πüÂ∞±ÊòØÂ≠óËäÇÁ†Å)ÊúçÂä°ÔºåËÄåÊú¨Âú∞ÊñπÊ≥ïÊ†àÂàô‰∏∫ËôöÊãüÊú∫‰ΩøÁî®Âà∞ÁöÑ Native ÊñπÊ≥ïÊúçÂä°„ÄÇ Âú® HotSpot ËôöÊãüÊú∫‰∏≠Âíå Java ËôöÊãüÊú∫Ê†àÂêà‰∫å‰∏∫‰∏Ä„ÄÇ ÊâÄ‰ª•Ôºå‰∏∫‰∫Ü‰øùËØÅÁ∫øÁ®ã‰∏≠ÁöÑÂ±ÄÈÉ®ÂèòÈáè‰∏çË¢´Âà´ÁöÑÁ∫øÁ®ãËÆøÈóÆÂà∞ÔºåËôöÊãüÊú∫Ê†àÂíåÊú¨Âú∞ÊñπÊ≥ïÊ†àÊòØÁ∫øÁ®ãÁßÅÊúâÁöÑ„ÄÇ ‰∏ÄÂè•ËØùÁÆÄÂçï‰∫ÜËß£Â†ÜÂíåÊñπÊ≥ïÂå∫ Â†ÜÂíåÊñπÊ≥ïÂå∫ÊòØÊâÄÊúâÁ∫øÁ®ãÂÖ±‰∫´ÁöÑËµÑÊ∫êÔºåÂÖ∂‰∏≠Â†ÜÊòØËøõÁ®ã‰∏≠ÊúÄÂ§ßÁöÑ‰∏ÄÂùóÂÜÖÂ≠òÔºå‰∏ªË¶ÅÁî®‰∫éÂ≠òÊîæÊñ∞ÂàõÂª∫ÁöÑÂØπË±° (ÊâÄÊúâÂØπË±°ÈÉΩÂú®ËøôÈáåÂàÜÈÖçÂÜÖÂ≠ò)ÔºåÊñπÊ≥ïÂå∫‰∏ªË¶ÅÁî®‰∫éÂ≠òÊîæÂ∑≤Ë¢´Âä†ËΩΩÁöÑÁ±ª‰ø°ÊÅØ„ÄÅÂ∏∏Èáè„ÄÅÈùôÊÄÅÂèòÈáè„ÄÅÂç≥Êó∂ÁºñËØëÂô®ÁºñËØëÂêéÁöÑ‰ª£Á†ÅÁ≠âÊï∞ÊçÆ„ÄÇ Êù•Ëá™ https://blog.csdn.net/ThinkWon/article/details/102021274 ÂçèÁ®ãÔºåËã±ÊñáCoroutinesÔºåÊòØ‰∏ÄÁßçÊØîÁ∫øÁ®ãÊõ¥Âä†ËΩªÈáèÁ∫ßÁöÑÂ≠òÂú®„ÄÇÊ≠£Â¶Ç‰∏Ä‰∏™ËøõÁ®ãÂèØ‰ª•Êã•ÊúâÂ§ö‰∏™Á∫øÁ®ã‰∏ÄÊ†∑Ôºå‰∏Ä‰∏™Á∫øÁ®ã‰πüÂèØ‰ª•Êã•ÊúâÂ§ö‰∏™ÂçèÁ®ã„ÄÇ ÊúÄÈáçË¶ÅÁöÑÊòØÔºåÂçèÁ®ã‰∏çÊòØË¢´Êìç‰ΩúÁ≥ªÁªüÂÜÖÊ†∏ÊâÄÁÆ°ÁêÜÔºåËÄåÂÆåÂÖ®ÊòØÁî±Á®ãÂ∫èÊâÄÊéßÂà∂Ôºà‰πüÂ∞±ÊòØÂú®Áî®Êà∑ÊÄÅÊâßË°åÔºâ„ÄÇ ËøôÊ†∑Â∏¶Êù•ÁöÑÂ•ΩÂ§ÑÂ∞±ÊòØÊÄßËÉΩÂæóÂà∞‰∫ÜÂæàÂ§ßÁöÑÊèêÂçáÔºå‰∏ç‰ºöÂÉèÁ∫øÁ®ãÂàáÊç¢ÈÇ£Ê†∑Ê∂àËÄóËµÑÊ∫ê„ÄÇ Êó¢ÁÑ∂ÂçèÁ®ãËøô‰πàÂ•ΩÔºåÂÆÉÂà∞Â∫ïÊòØÊÄé‰πàÊù•‰ΩøÁî®ÁöÑÂë¢Ôºü Áî±‰∫éJavaÁöÑÂéüÁîüËØ≠Ê≥ï‰∏≠Âπ∂Ê≤°ÊúâÂÆûÁé∞ÂçèÁ®ãÔºàÊüê‰∫õÂºÄÊ∫êÊ°ÜÊû∂ÂÆûÁé∞‰∫ÜÂçèÁ®ãÔºå‰ΩÜÊòØÂæàÂ∞ëË¢´‰ΩøÁî®ÔºâÔºõ ÂçèÁ®ãÁöÑÊöÇÂÅúÂÆåÂÖ®Áî±Á®ãÂ∫èÊéßÂà∂ÔºåÁ∫øÁ®ãÁöÑÈòªÂ°ûÁä∂ÊÄÅÊòØÁî±Êìç‰ΩúÁ≥ªÁªüÂÜÖÊ†∏Êù•ËøõË°åÂàáÊç¢„ÄÇ Âõ†Ê≠§ÔºåÂçèÁ®ãÁöÑÂºÄÈîÄËøúËøúÂ∞è‰∫éÁ∫øÁ®ãÁöÑÂºÄÈîÄ„ÄÇ","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"ËøõÁ®ãÈó¥ÈÄö‰ø°ÊñπÂºè","slug":"ËøõÁ®ãÈó¥ÁöÑÈÄö‰ø°ÊñπÂºè","date":"2021-05-26T16:00:00.000Z","updated":"2021-05-27T12:27:53.804Z","comments":true,"path":"2021/05/27/ËøõÁ®ãÈó¥ÁöÑÈÄö‰ø°ÊñπÂºè/","link":"","permalink":"http://example.com/2021/05/27/%E8%BF%9B%E7%A8%8B%E9%97%B4%E7%9A%84%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F/","excerpt":"","text":"ËøõÁ®ã‰πãÈó¥ÁöÑÈÄö‰ø°ÊñπÂºè1.Êó†ÂêçÁÆ°ÈÅì( pipe )Ôºö ÁÆ°ÈÅìÊòØ‰∏ÄÁßçÂçäÂèåÂ∑•ÁöÑÈÄö‰ø°ÊñπÂºèÔºåÊï∞ÊçÆÂè™ËÉΩÂçïÂêëÊµÅÂä®ÔºåËÄå‰∏îÂè™ËÉΩÂú®ÂÖ∑Êúâ‰∫≤ÁºòÂÖ≥Á≥ªÁöÑËøõÁ®ãÈó¥‰ΩøÁî®„ÄÇËøõÁ®ãÁöÑ‰∫≤ÁºòÂÖ≥Á≥ªÈÄöÂ∏∏ÊòØÊåáÁà∂Â≠êËøõÁ®ãÂÖ≥Á≥ª„ÄÇ 2.È´òÁ∫ßÁÆ°ÈÅì(popen)Ôºö Â∞ÜÂè¶‰∏Ä‰∏™Á®ãÂ∫èÂΩìÂÅö‰∏Ä‰∏™Êñ∞ÁöÑËøõÁ®ãÂú®ÂΩìÂâçÁ®ãÂ∫èËøõÁ®ã‰∏≠ÂêØÂä®ÔºåÂàôÂÆÉÁÆóÊòØÂΩìÂâçÁ®ãÂ∫èÁöÑÂ≠êËøõÁ®ãÔºåËøôÁßçÊñπÂºèÊàë‰ª¨Êàê‰∏∫È´òÁ∫ßÁÆ°ÈÅìÊñπÂºè„ÄÇ 3.ÊúâÂêçÁÆ°ÈÅì (named pipe) Ôºö ÊúâÂêçÁÆ°ÈÅì‰πüÊòØÂçäÂèåÂ∑•ÁöÑÈÄö‰ø°ÊñπÂºèÔºå‰ΩÜÊòØÂÆÉÂÖÅËÆ∏Êó†‰∫≤ÁºòÂÖ≥Á≥ªËøõÁ®ãÈó¥ÁöÑÈÄö‰ø°„ÄÇ 4.Ê∂àÊÅØÈòüÂàó( message queue ) Ôºö Ê∂àÊÅØÈòüÂàóÊòØÁî±Ê∂àÊÅØÁöÑÈìæË°®ÔºåÂ≠òÊîæÂú®ÂÜÖÊ†∏‰∏≠Âπ∂Áî±Ê∂àÊÅØÈòüÂàóÊ†áËØÜÁ¨¶Ê†áËØÜ„ÄÇÊ∂àÊÅØÈòüÂàóÂÖãÊúç‰∫Ü‰ø°Âè∑‰º†ÈÄí‰ø°ÊÅØÂ∞ë„ÄÅÁÆ°ÈÅìÂè™ËÉΩÊâøËΩΩÊó†Ê†ºÂºèÂ≠óËäÇÊµÅ‰ª•ÂèäÁºìÂÜ≤Âå∫Â§ßÂ∞èÂèóÈôêÁ≠âÁº∫ÁÇπ„ÄÇ 5.‰ø°Âè∑Èáè( semophore ) Ôºö ‰ø°Âè∑ÈáèÊòØ‰∏Ä‰∏™ËÆ°Êï∞Âô®ÔºåÂèØ‰ª•Áî®Êù•ÊéßÂà∂Â§ö‰∏™ËøõÁ®ãÂØπÂÖ±‰∫´ËµÑÊ∫êÁöÑËÆøÈóÆ„ÄÇÂÆÉÂ∏∏‰Ωú‰∏∫‰∏ÄÁßçÈîÅÊú∫Âà∂ÔºåÈò≤Ê≠¢ÊüêËøõÁ®ãÊ≠£Âú®ËÆøÈóÆÂÖ±‰∫´ËµÑÊ∫êÊó∂ÔºåÂÖ∂‰ªñËøõÁ®ã‰πüËÆøÈóÆËØ•ËµÑÊ∫ê„ÄÇÂõ†Ê≠§Ôºå‰∏ªË¶Å‰Ωú‰∏∫ËøõÁ®ãÈó¥‰ª•ÂèäÂêå‰∏ÄËøõÁ®ãÂÜÖ‰∏çÂêåÁ∫øÁ®ã‰πãÈó¥ÁöÑÂêåÊ≠•ÊâãÊÆµ„ÄÇ 6.‰ø°Âè∑ ( sinal ) Ôºö ‰ø°Âè∑ÊòØ‰∏ÄÁßçÊØîËæÉÂ§çÊùÇÁöÑÈÄö‰ø°ÊñπÂºèÔºåÁî®‰∫éÈÄöÁü•Êé•Êî∂ËøõÁ®ãÊüê‰∏™‰∫ã‰ª∂Â∑≤ÁªèÂèëÁîü„ÄÇ 7.ÂÖ±‰∫´ÂÜÖÂ≠ò( shared memory ) Ôºö ÂÖ±‰∫´ÂÜÖÂ≠òÂ∞±ÊòØÊò†Â∞Ñ‰∏ÄÊÆµËÉΩË¢´ÂÖ∂‰ªñËøõÁ®ãÊâÄËÆøÈóÆÁöÑÂÜÖÂ≠òÔºåËøôÊÆµÂÖ±‰∫´ÂÜÖÂ≠òÁî±‰∏Ä‰∏™ËøõÁ®ãÂàõÂª∫Ôºå‰ΩÜÂ§ö‰∏™ËøõÁ®ãÈÉΩÂèØ‰ª•ËÆøÈóÆ„ÄÇÂÖ±‰∫´ÂÜÖÂ≠òÊòØÊúÄÂø´ÁöÑ IPC ÊñπÂºèÔºåÂÆÉÊòØÈíàÂØπÂÖ∂‰ªñËøõÁ®ãÈó¥ÈÄö‰ø°ÊñπÂºèËøêË°åÊïàÁéá‰ΩéËÄå‰∏ìÈó®ËÆæËÆ°ÁöÑ„ÄÇÂÆÉÂæÄÂæÄ‰∏éÂÖ∂‰ªñÈÄö‰ø°Êú∫Âà∂ÔºåÂ¶Ç‰ø°Âè∑‰∏§ÔºåÈÖçÂêà‰ΩøÁî®ÔºåÊù•ÂÆûÁé∞ËøõÁ®ãÈó¥ÁöÑÂêåÊ≠•ÂíåÈÄö‰ø°„ÄÇ 8.Â•óÊé•Â≠ó( socket ) Ôºö Â•óËß£Â≠ó‰πüÊòØ‰∏ÄÁßçËøõÁ®ãÈó¥ÈÄö‰ø°Êú∫Âà∂Ôºå‰∏éÂÖ∂‰ªñÈÄö‰ø°Êú∫Âà∂‰∏çÂêåÁöÑÊòØÔºåÂÆÉÂèØÁî®‰∫é‰∏çÂêåÊú∫Âô®Èó¥ÁöÑËøõÁ®ãÈÄö‰ø°„ÄÇ","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"JavaÂèçÂ∞ÑÊú∫Âà∂","slug":"JavaÂèçÂ∞ÑÊú∫Âà∂","date":"2021-05-26T16:00:00.000Z","updated":"2021-05-31T09:49:15.329Z","comments":true,"path":"2021/05/27/JavaÂèçÂ∞ÑÊú∫Âà∂/","link":"","permalink":"http://example.com/2021/05/27/Java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/","excerpt":"","text":"JavaÂèçÂ∞ÑÊú∫Âà∂‰∏Ä„ÄÅ‰ªÄ‰πàÊòØÂèçÂ∞ÑÔºöÔºà1ÔºâJavaÂèçÂ∞ÑÊú∫Âà∂ÁöÑÊ†∏ÂøÉÊòØÂú®Á®ãÂ∫èËøêË°åÊó∂Âä®ÊÄÅÂä†ËΩΩÁ±ªÂπ∂Ëé∑ÂèñÁ±ªÁöÑËØ¶ÁªÜ‰ø°ÊÅØÔºå‰ªéËÄåÊìç‰ΩúÁ±ªÊàñÂØπË±°ÁöÑÂ±ûÊÄßÂíåÊñπÊ≥ï„ÄÇÊú¨Ë¥®ÊòØJVMÂæóÂà∞classÂØπË±°‰πãÂêéÔºåÂÜçÈÄöËøáclassÂØπË±°ËøõË°åÂèçÁºñËØëÔºå‰ªéËÄåËé∑ÂèñÂØπË±°ÁöÑÂêÑÁßç‰ø°ÊÅØ„ÄÇ Ôºà2ÔºâJavaÂ±û‰∫éÂÖàÁºñËØëÂÜçËøêË°åÁöÑËØ≠Ë®ÄÔºåÁ®ãÂ∫è‰∏≠ÂØπË±°ÁöÑÁ±ªÂûãÂú®ÁºñËØëÊúüÂ∞±Á°ÆÂÆö‰∏ãÊù•‰∫ÜÔºåËÄåÂΩìÁ®ãÂ∫èÂú®ËøêË°åÊó∂ÂèØËÉΩÈúÄË¶ÅÂä®ÊÄÅÂä†ËΩΩÊüê‰∫õÁ±ªÔºåËøô‰∫õÁ±ªÂõ†‰∏∫‰πãÂâçÁî®‰∏çÂà∞ÔºåÊâÄ‰ª•Ê≤°ÊúâË¢´Âä†ËΩΩÂà∞JVM„ÄÇÈÄöËøáÂèçÂ∞ÑÔºåÂèØ‰ª•Âú®ËøêË°åÊó∂Âä®ÊÄÅÂú∞ÂàõÂª∫ÂØπË±°Âπ∂Ë∞ÉÁî®ÂÖ∂Â±ûÊÄßÔºå‰∏çÈúÄË¶ÅÊèêÂâçÂú®ÁºñËØëÊúüÁü•ÈÅìËøêË°åÁöÑÂØπË±°ÊòØË∞Å„ÄÇ ‰∫å„ÄÅÂèçÂ∞ÑÁöÑÂéüÁêÜÔºö‰∏ãÂõæÊòØÁ±ªÁöÑÊ≠£Â∏∏Âä†ËΩΩËøáÁ®ã„ÄÅÂèçÂ∞ÑÂéüÁêÜ‰∏éclassÂØπË±°Ôºö ClassÂØπË±°ÁöÑÁî±Êù•ÊòØÂ∞Ü.classÊñá‰ª∂ËØªÂÖ•ÂÜÖÂ≠òÔºåÂπ∂‰∏∫‰πãÂàõÂª∫‰∏Ä‰∏™ClassÂØπË±°„ÄÇ ÂØπ‰∫éÁ±ªÂä†ËΩΩÊú∫Âà∂‰∏éÂèå‰∫≤ÂßîÊ¥æÊ®°ÂûãÊÑüÂÖ¥Ë∂£ÁöÑÂ∞è‰ºô‰º¥ÂèØ‰ª•ÈòÖËØªËøôÁØáÊñáÁ´† ‰∏â„ÄÅÂèçÂ∞ÑÁöÑ‰ºòÁº∫ÁÇπ‰ºòÁÇπÔºöÂú®ËøêË°åÊó∂Ëé∑ÂæóÁ±ªÁöÑÂêÑÁßçÂÜÖÂÆπÔºåËøõË°åÂèçÁºñËØëÔºåÂØπ‰∫éJavaËøôÁßçÂÖàÁºñËØëÂÜçËøêË°åÁöÑËØ≠Ë®ÄÔºåËÉΩÂ§üËÆ©Êàë‰ª¨ÂæàÊñπ‰æøÁöÑÂàõÂª∫ÁÅµÊ¥ªÁöÑ‰ª£Á†ÅÔºåËøô‰∫õ‰ª£Á†ÅÂèØ‰ª•Âú®ËøêË°åÊó∂Ë£ÖÈÖçÔºåÊó†ÈúÄÂú®ÁªÑ‰ª∂‰πãÈó¥ËøõË°åÊ∫ê‰ª£Á†ÅÁöÑÈìæÊé•ÔºåÊõ¥Âä†ÂÆπÊòìÂÆûÁé∞Èù¢ÂêëÂØπË±°„ÄÇ Áº∫ÁÇπÔºöÔºà1ÔºâÂèçÂ∞Ñ‰ºöÊ∂àËÄó‰∏ÄÂÆöÁöÑÁ≥ªÁªüËµÑÊ∫êÔºåÂõ†Ê≠§ÔºåÂ¶ÇÊûú‰∏çÈúÄË¶ÅÂä®ÊÄÅÂú∞ÂàõÂª∫‰∏Ä‰∏™ÂØπË±°ÔºåÈÇ£‰πàÂ∞±‰∏çÈúÄË¶ÅÁî®ÂèçÂ∞ÑÔºõ Ôºà2ÔºâÂèçÂ∞ÑË∞ÉÁî®ÊñπÊ≥ïÊó∂ÂèØ‰ª•ÂøΩÁï•ÊùÉÈôêÊ£ÄÊü•ÔºåÂõ†Ê≠§ÂèØËÉΩ‰ºöÁ†¥ÂùèÂ∞ÅË£ÖÊÄßËÄåÂØºËá¥ÂÆâÂÖ®ÈóÆÈ¢ò„ÄÇ Âõõ„ÄÅÂèçÂ∞ÑÁöÑÁî®ÈÄî1„ÄÅÂèçÁºñËØëÔºö.class‚Äì&gt;.java 2„ÄÅÈÄöËøáÂèçÂ∞ÑÊú∫Âà∂ËÆøÈóÆjavaÂØπË±°ÁöÑÂ±ûÊÄßÔºåÊñπÊ≥ïÔºåÊûÑÈÄ†ÊñπÊ≥ïÁ≠â 3„ÄÅÂΩìÊàë‰ª¨Âú®‰ΩøÁî®IDE,ÊØîÂ¶ÇEcpliseÊó∂ÔºåÂΩìÊàë‰ª¨ËæìÂÖ•‰∏Ä‰∏™ÂØπË±°ÊàñËÄÖÁ±ªÔºåÂπ∂ÊÉ≥Ë∞ÉÁî®‰ªñÁöÑÂ±ûÊÄßÂíåÊñπÊ≥ïÊòØÔºå‰∏ÄÊåâÁÇπÂè∑ÔºåÁºñËØëÂô®Â∞±‰ºöËá™Âä®ÂàóÂá∫‰ªñÁöÑÂ±ûÊÄßÊàñËÄÖÊñπÊ≥ïÔºåËøôÈáåÂ∞±ÊòØÁî®Âà∞ÂèçÂ∞Ñ„ÄÇ 4„ÄÅÂèçÂ∞ÑÊúÄÈáçË¶ÅÁöÑÁî®ÈÄîÂ∞±ÊòØÂºÄÂèëÂêÑÁßçÈÄöÁî®Ê°ÜÊû∂„ÄÇÊØîÂ¶ÇÂæàÂ§öÊ°ÜÊû∂ÔºàSpringÔºâÈÉΩÊòØÈÖçÁΩÆÂåñÁöÑÔºàÊØîÂ¶ÇÈÄöËøáXMLÊñá‰ª∂ÈÖçÁΩÆBeanÔºâÔºå‰∏∫‰∫Ü‰øùËØÅÊ°ÜÊû∂ÁöÑÈÄöÁî®ÊÄßÔºå‰ªñ‰ª¨ÂèØËÉΩÈúÄË¶ÅÊ†πÊçÆÈÖçÁΩÆÊñá‰ª∂Âä†ËΩΩ‰∏çÂêåÁöÑÁ±ªÊàñËÄÖÂØπË±°ÔºåË∞ÉÁî®‰∏çÂêåÁöÑÊñπÊ≥ïÔºåËøô‰∏™Êó∂ÂÄôÂ∞±ÂøÖÈ°ª‰ΩøÁî®Âà∞ÂèçÂ∞Ñ‰∫ÜÔºåËøêË°åÊó∂Âä®ÊÄÅÂä†ËΩΩÈúÄË¶ÅÁöÑÂä†ËΩΩÁöÑÂØπË±°„ÄÇ 5„ÄÅ‰æãÂ¶ÇÔºåÂú®‰ΩøÁî®Strut2Ê°ÜÊû∂ÁöÑÂºÄÂèëËøáÁ®ã‰∏≠ÔºåÊàë‰ª¨‰∏ÄËà¨‰ºöÂú®struts.xmlÈáåÂéªÈÖçÁΩÆActionÔºåÊØîÂ¶Ç 1234567&lt;action name=&quot;login&quot; class=&quot;org.ScZyhSoft.test.action.SimpleLoginAction&quot; method=&quot;execute&quot;&gt; &lt;result&gt;/shop/shop-index.jsp&lt;/result&gt; &lt;result name=&quot;error&quot;&gt;login.jsp&lt;/result&gt; &lt;/action&gt; ÊØîÂ¶ÇÊàë‰ª¨ËØ∑Ê±Çlogin.actionÊó∂ÔºåÈÇ£‰πàStrutsPrepareAndExecuteFilterÂ∞±‰ºöÂéªËß£Êûêstruts.xmlÊñá‰ª∂Ôºå‰ªéaction‰∏≠Êü•ÊâæÂá∫name‰∏∫loginÁöÑActionÔºåÂπ∂Ê†πÊçÆclassÂ±ûÊÄßÂàõÂª∫SimpleLoginActionÂÆû‰æãÔºåÂπ∂Áî®InvokeÊñπÊ≥ïÊù•Ë∞ÉÁî®executeÊñπÊ≥ïÔºåËøô‰∏™ËøáÁ®ãÁ¶ª‰∏çÂºÄÂèçÂ∞Ñ„ÄÇÈÖçÁΩÆÊñá‰ª∂‰∏éActionÂª∫Á´ã‰∫Ü‰∏ÄÁßçÊò†Â∞ÑÂÖ≥Á≥ªÔºåÂΩìViewÂ±ÇÂèëÂá∫ËØ∑Ê±ÇÊó∂ÔºåËØ∑Ê±Ç‰ºöË¢´StrutsPrepareAndExecuteFilterÊã¶Êà™ÔºåÁÑ∂ÂêéStrutsPrepareAndExecuteFilter‰ºöÂéªÂä®ÊÄÅÂú∞ÂàõÂª∫ActionÂÆû‰æã„ÄÇ ÊØîÂ¶ÇÔºåÂä†ËΩΩÊï∞ÊçÆÂ∫ìÈ©±Âä®ÁöÑÔºåÁî®Âà∞ÁöÑ‰πüÊòØÂèçÂ∞Ñ„ÄÇ Class.forName(‚Äúcom.mysql.jdbc.Driver‚Äù); // Âä®ÊÄÅÂä†ËΩΩmysqlÈ©±Âä® ‰∫î„ÄÅÂèçÂ∞ÑÁöÑÂü∫Êú¨‰ΩøÁî®Ëé∑ÂæóClassÔºö‰∏ªË¶ÅÊúâ‰∏âÁßçÊñπÊ≥ïÔºöÔºà1ÔºâObject‚Äì&gt;getClass Ôºà2Ôºâ‰ªª‰ΩïÊï∞ÊçÆÁ±ªÂûãÔºàÂåÖÊã¨Âü∫Êú¨ÁöÑÊï∞ÊçÆÁ±ªÂûãÔºâÈÉΩÊúâ‰∏Ä‰∏™‚ÄúÈùôÊÄÅ‚ÄùÁöÑclassÂ±ûÊÄß Ôºà3ÔºâÈÄöËøáclassÁ±ªÁöÑÈùôÊÄÅÊñπÊ≥ïÔºöforName(String className)ÔºàÊúÄÂ∏∏Áî®Ôºâ 12345678910111213141516171819202122package fanshe;public class Fanshe &#123; public static void main(String[] args) &#123; //Á¨¨‰∏ÄÁßçÊñπÂºèËé∑ÂèñClassÂØπË±° Student stu1 = new Student();//Ëøô‰∏Änew ‰∫ßÁîü‰∏Ä‰∏™StudentÂØπË±°Ôºå‰∏Ä‰∏™ClassÂØπË±°„ÄÇ Class stuClass = stu1.getClass();//Ëé∑ÂèñClassÂØπË±° System.out.println(stuClass.getName()); //Á¨¨‰∫åÁßçÊñπÂºèËé∑ÂèñClassÂØπË±° Class stuClass2 = Student.class; System.out.println(stuClass == stuClass2);//Âà§Êñ≠Á¨¨‰∏ÄÁßçÊñπÂºèËé∑ÂèñÁöÑClassÂØπË±°ÂíåÁ¨¨‰∫åÁßçÊñπÂºèËé∑ÂèñÁöÑÊòØÂê¶ÊòØÂêå‰∏Ä‰∏™ //Á¨¨‰∏âÁßçÊñπÂºèËé∑ÂèñClassÂØπË±° try &#123; Class stuClass3 = Class.forName(&quot;fanshe.Student&quot;);//Ê≥®ÊÑèÊ≠§Â≠óÁ¨¶‰∏≤ÂøÖÈ°ªÊòØÁúüÂÆûË∑ØÂæÑÔºåÂ∞±ÊòØÂ∏¶ÂåÖÂêçÁöÑÁ±ªË∑ØÂæÑÔºåÂåÖÂêç.Á±ªÂêç System.out.println(stuClass3 == stuClass2);//Âà§Êñ≠‰∏âÁßçÊñπÂºèÊòØÂê¶Ëé∑ÂèñÁöÑÊòØÂêå‰∏Ä‰∏™ClassÂØπË±° &#125; catch (ClassNotFoundException e) &#123; e.printStackTrace(); &#125; &#125;&#125; Ê≥®ÊÑèÔºåÂú®ËøêË°åÊúüÈó¥Ôºå‰∏Ä‰∏™Á±ªÔºåÂè™Êúâ‰∏Ä‰∏™ClassÂØπË±°‰∫ßÁîüÔºåÊâÄ‰ª•ÊâìÂç∞ÁªìÊûúÈÉΩÊòØtrueÔºõ ‰∏âÁßçÊñπÂºè‰∏≠ÔºåÂ∏∏Áî®Á¨¨‰∏âÁßçÔºåÁ¨¨‰∏ÄÁßçÂØπË±°ÈÉΩÊúâ‰∫ÜËøòË¶ÅÂèçÂ∞ÑÂπ≤‰ªÄ‰πàÔºåÁ¨¨‰∫åÁßçÈúÄË¶ÅÂØºÂÖ•Á±ªÂåÖÔºå‰æùËµñÂ§™Âº∫Ôºå‰∏çÂØºÂåÖÂ∞±ÊäõÁºñËØëÈîôËØØ„ÄÇ‰∏ÄËà¨ÈÉΩ‰ΩøÁî®Á¨¨‰∏âÁßçÔºå‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÂèØ‰ª•‰º†ÂÖ•‰πüÂèØ‰ª•ÂÜôÂú®ÈÖçÁΩÆÊñá‰ª∂‰∏≠Á≠âÂ§öÁßçÊñπÊ≥ï„ÄÇ Âà§Êñ≠ÊòØÂê¶‰∏∫Êüê‰∏™Á±ªÁöÑÁ§∫‰æãÔºö‰∏ÄËà¨ÁöÑÔºåÊàë‰ª¨‰ΩøÁî®instanceof ÂÖ≥ÈîÆÂ≠óÊù•Âà§Êñ≠ÊòØÂê¶‰∏∫Êüê‰∏™Á±ªÁöÑÂÆû‰æã„ÄÇÂêåÊó∂Êàë‰ª¨‰πüÂèØ‰ª•ÂÄüÂä©ÂèçÂ∞Ñ‰∏≠ClassÂØπË±°ÁöÑisInstance()ÊñπÊ≥ïÊù•Âà§Êñ≠Êó∂ÂÄô‰∏∫Êüê‰∏™Á±ªÁöÑÂÆû‰æãÔºå‰ªñÊòØ‰∏Ä‰∏™nativeÊñπÊ≥ï„ÄÇ public native boolean isInstance(Object obj); ÂàõÂª∫ÂÆû‰æãÔºöÈÄöËøáÂèçÂ∞ÑÊù•ÁîüÊàêÂØπË±°‰∏ªË¶ÅÊúâ‰∏§ÁßçÊñπÊ≥ïÔºöÔºà1Ôºâ‰ΩøÁî®ClassÂØπË±°ÁöÑnewInstance()ÊñπÊ≥ïÊù•ÂàõÂª∫ClassÂØπË±°ÂØπÂ∫îÁ±ªÁöÑÂÆû‰æã„ÄÇ Class&lt;?&gt; c = String.class; Object str = c.newInstance(); Ôºà2ÔºâÂÖàÈÄöËøáClassÂØπË±°Ëé∑ÂèñÊåáÂÆöÁöÑConstructorÂØπË±°ÔºåÂÜçË∞ÉÁî®ConstructorÂØπË±°ÁöÑnewInstance()ÊñπÊ≥ïÊù•ÂàõÂª∫ÂØπË±°ÔºåËøôÁßçÊñπÊ≥ïÂèØ‰ª•Áî®ÊåáÂÆöÁöÑÊûÑÈÄ†Âô®ÊûÑÈÄ†Á±ªÁöÑÂÆû‰æã„ÄÇ //Ëé∑ÂèñStringÁöÑClassÂØπË±° Class&lt;?&gt; str = String.class; //ÈÄöËøáClassÂØπË±°Ëé∑ÂèñÊåáÂÆöÁöÑConstructorÊûÑÈÄ†Âô®ÂØπË±° Constructor constructor=c.getConstructor(String.class); //Ê†πÊçÆÊûÑÈÄ†Âô®ÂàõÂª∫ÂÆû‰æãÔºö Object obj = constructor.newInstance(‚Äúhello reflection‚Äù); ÈÄöËøáÂèçÂ∞ÑËé∑ÂèñÊûÑÈÄ†ÊñπÊ≥ïÂπ∂‰ΩøÁî®ÔºöÔºà1ÔºâÊâπÈáèËé∑ÂèñÁöÑÊñπÊ≥ïÔºö public Constructor[] getConstructors()ÔºöÊâÄÊúâ‚ÄùÂÖ¨ÊúâÁöÑ‚ÄùÊûÑÈÄ†ÊñπÊ≥ï public Constructor[] getDeclaredConstructors()ÔºöËé∑ÂèñÊâÄÊúâÁöÑÊûÑÈÄ†ÊñπÊ≥ï(ÂåÖÊã¨ÁßÅÊúâ„ÄÅÂèó‰øùÊä§„ÄÅÈªòËÆ§„ÄÅÂÖ¨Êúâ) Ôºà2ÔºâÂçï‰∏™Ëé∑ÂèñÁöÑÊñπÊ≥ïÔºåÂπ∂Ë∞ÉÁî®Ôºö public Constructor getConstructor(Class‚Ä¶ parameterTypes):Ëé∑ÂèñÂçï‰∏™ÁöÑ‚ÄùÂÖ¨ÊúâÁöÑ‚ÄùÊûÑÈÄ†ÊñπÊ≥ïÔºö public Constructor getDeclaredConstructor(Class‚Ä¶ parameterTypes):Ëé∑Âèñ‚ÄùÊüê‰∏™ÊûÑÈÄ†ÊñπÊ≥ï‚ÄùÂèØ‰ª•ÊòØÁßÅÊúâÁöÑÔºåÊàñÂèó‰øùÊä§„ÄÅÈªòËÆ§„ÄÅÂÖ¨ÊúâÔºõ Ôºà3Ôºâ Ë∞ÉÁî®ÊûÑÈÄ†ÊñπÊ≥ïÔºö Constructor‚Äì&gt;newInstance(Object‚Ä¶ initargs) newInstanceÊòØ ConstructorÁ±ªÁöÑÊñπÊ≥ïÔºàÁÆ°ÁêÜÊûÑÈÄ†ÂáΩÊï∞ÁöÑÁ±ªÔºâ apiÁöÑËß£Èáä‰∏∫ÔºönewInstance(Object‚Ä¶ initargs) Ôºå‰ΩøÁî®Ê≠§ Constructor ÂØπË±°Ë°®Á§∫ÁöÑÊûÑÈÄ†ÊñπÊ≥ïÊù•ÂàõÂª∫ËØ•ÊûÑÈÄ†ÊñπÊ≥ïÁöÑÂ£∞ÊòéÁ±ªÁöÑÊñ∞ÂÆû‰æãÔºåÂπ∂Áî®ÊåáÂÆöÁöÑÂàùÂßãÂåñÂèÇÊï∞ÂàùÂßãÂåñËØ•ÂÆû‰æã„ÄÇ ÂÆÉÁöÑËøîÂõûÂÄºÊòØTÁ±ªÂûãÔºåÊâÄ‰ª•newInstanceÊòØÂàõÂª∫‰∫Ü‰∏Ä‰∏™ÊûÑÈÄ†ÊñπÊ≥ïÁöÑÂ£∞ÊòéÁ±ªÁöÑÊñ∞ÂÆû‰æãÂØπË±°ÔºåÂπ∂‰∏∫‰πãË∞ÉÁî®„ÄÇ ‰æãÂ≠êÔºö StudentÁ±ªÔºöÂÖ±ÂÖ≠‰∏™ÊûÑÈÄ†ÊñπÊ≥ï 1234567891011121314151617181920212223242526272829package fanshe;public class Student &#123; //---------------ÊûÑÈÄ†ÊñπÊ≥ï------------------- //ÔºàÈªòËÆ§ÁöÑÊûÑÈÄ†ÊñπÊ≥ïÔºâ Student(String str)&#123; System.out.println(&quot;(ÈªòËÆ§)ÁöÑÊûÑÈÄ†ÊñπÊ≥ï s = &quot; + str); &#125; //Êó†ÂèÇÊûÑÈÄ†ÊñπÊ≥ï public Student()&#123; System.out.println(&quot;Ë∞ÉÁî®‰∫ÜÂÖ¨Êúâ„ÄÅÊó†ÂèÇÊûÑÈÄ†ÊñπÊ≥ïÊâßË°å‰∫Ü„ÄÇ„ÄÇ„ÄÇ&quot;); &#125; //Êúâ‰∏Ä‰∏™ÂèÇÊï∞ÁöÑÊûÑÈÄ†ÊñπÊ≥ï public Student(char name)&#123; System.out.println(&quot;ÂßìÂêçÔºö&quot; + name); &#125; //ÊúâÂ§ö‰∏™ÂèÇÊï∞ÁöÑÊûÑÈÄ†ÊñπÊ≥ï public Student(String name ,int age)&#123; System.out.println(&quot;ÂßìÂêçÔºö&quot;+name+&quot;Âπ¥ÈæÑÔºö&quot;+ age);//ËøôÁöÑÊâßË°åÊïàÁéáÊúâÈóÆÈ¢òÔºå‰ª•ÂêéËß£ÂÜ≥„ÄÇ &#125; //Âèó‰øùÊä§ÁöÑÊûÑÈÄ†ÊñπÊ≥ï protected Student(boolean n)&#123; System.out.println(&quot;Âèó‰øùÊä§ÁöÑÊûÑÈÄ†ÊñπÊ≥ï n = &quot; + n); &#125; //ÁßÅÊúâÊûÑÈÄ†ÊñπÊ≥ï private Student(int age)&#123; System.out.println(&quot;ÁßÅÊúâÁöÑÊûÑÈÄ†ÊñπÊ≥ï Âπ¥ÈæÑÔºö&quot;+ age); &#125;&#125; ÊµãËØïÁ±ªÔºö 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455package fanshe;import java.lang.reflect.Constructor; /* * ÈÄöËøáClassÂØπË±°ÂèØ‰ª•Ëé∑ÂèñÊüê‰∏™Á±ª‰∏≠ÁöÑÔºöÊûÑÈÄ†ÊñπÊ≥ï„ÄÅÊàêÂëòÂèòÈáè„ÄÅÊàêÂëòÊñπÊ≥ïÔºõÂπ∂ËÆøÈóÆÊàêÂëòÔºõ * * 1.Ëé∑ÂèñÊûÑÈÄ†ÊñπÊ≥ïÔºö * 1).ÊâπÈáèÁöÑÊñπÊ≥ïÔºö * public Constructor[] getConstructors()ÔºöÊâÄÊúâ&quot;ÂÖ¨ÊúâÁöÑ&quot;ÊûÑÈÄ†ÊñπÊ≥ï public Constructor[] getDeclaredConstructors()ÔºöËé∑ÂèñÊâÄÊúâÁöÑÊûÑÈÄ†ÊñπÊ≥ï(ÂåÖÊã¨ÁßÅÊúâ„ÄÅÂèó‰øùÊä§„ÄÅÈªòËÆ§„ÄÅÂÖ¨Êúâ) * 2).Ëé∑ÂèñÂçï‰∏™ÁöÑÊñπÊ≥ïÔºåÂπ∂Ë∞ÉÁî®Ôºö * public Constructor getConstructor(Class... parameterTypes):Ëé∑ÂèñÂçï‰∏™ÁöÑ&quot;ÂÖ¨ÊúâÁöÑ&quot;ÊûÑÈÄ†ÊñπÊ≥ïÔºö * public Constructor getDeclaredConstructor(Class... parameterTypes):Ëé∑Âèñ&quot;Êüê‰∏™ÊûÑÈÄ†ÊñπÊ≥ï&quot;ÂèØ‰ª•ÊòØÁßÅÊúâÁöÑÔºåÊàñÂèó‰øùÊä§„ÄÅÈªòËÆ§„ÄÅÂÖ¨ÊúâÔºõ * 3).Ë∞ÉÁî®ÊûÑÈÄ†ÊñπÊ≥ïÔºö * Constructor--&gt;newInstance(Object... initargs) */public class Constructors &#123; public static void main(String[] args) throws Exception &#123; //1.Âä†ËΩΩClassÂØπË±° Class clazz = Class.forName(&quot;fanshe.Student&quot;); //2.Ëé∑ÂèñÊâÄÊúâÂÖ¨ÊúâÊûÑÈÄ†ÊñπÊ≥ï System.out.println(&quot;**********************ÊâÄÊúâÂÖ¨ÊúâÊûÑÈÄ†ÊñπÊ≥ï*********************************&quot;); Constructor[] conArray = clazz.getConstructors(); for(Constructor c : conArray)&#123; System.out.println(c); &#125; System.out.println(&quot;************ÊâÄÊúâÁöÑÊûÑÈÄ†ÊñπÊ≥ï(ÂåÖÊã¨ÔºöÁßÅÊúâ„ÄÅÂèó‰øùÊä§„ÄÅÈªòËÆ§„ÄÅÂÖ¨Êúâ)***************&quot;); conArray = clazz.getDeclaredConstructors(); for(Constructor c : conArray)&#123; System.out.println(c); &#125; System.out.println(&quot;*****************Ëé∑ÂèñÂÖ¨Êúâ„ÄÅÊó†ÂèÇÁöÑÊûÑÈÄ†ÊñπÊ≥ï*******************************&quot;); Constructor con = clazz.getConstructor(null); //1&gt;„ÄÅÂõ†‰∏∫ÊòØÊó†ÂèÇÁöÑÊûÑÈÄ†ÊñπÊ≥ïÊâÄ‰ª•Á±ªÂûãÊòØ‰∏Ä‰∏™null,‰∏çÂÜô‰πüÂèØ‰ª•ÔºöËøôÈáåÈúÄË¶ÅÁöÑÊòØ‰∏Ä‰∏™ÂèÇÊï∞ÁöÑÁ±ªÂûãÔºåÂàáËÆ∞ÊòØÁ±ªÂûã //2&gt;„ÄÅËøîÂõûÁöÑÊòØÊèèËø∞Ëøô‰∏™Êó†ÂèÇÊûÑÈÄ†ÂáΩÊï∞ÁöÑÁ±ªÂØπË±°„ÄÇ System.out.println(&quot;con = &quot; + con); //Ë∞ÉÁî®ÊûÑÈÄ†ÊñπÊ≥ï Object obj = con.newInstance(); // System.out.println(&quot;obj = &quot; + obj); // Student stu = (Student)obj; System.out.println(&quot;******************Ëé∑ÂèñÁßÅÊúâÊûÑÈÄ†ÊñπÊ≥ïÔºåÂπ∂Ë∞ÉÁî®*******************************&quot;); con = clazz.getDeclaredConstructor(char.class); System.out.println(con); //Ë∞ÉÁî®ÊûÑÈÄ†ÊñπÊ≥ï con.setAccessible(true);//Êö¥ÂäõËÆøÈóÆ(ÂøΩÁï•ÊéâËÆøÈóÆ‰øÆÈ•∞Á¨¶) obj = con.newInstance(&#x27;Áî∑&#x27;); &#125;&#125; ÊéßÂà∂Âè∞ËæìÂá∫Ôºö ÊâÄÊúâÂÖ¨ÊúâÊûÑÈÄ†ÊñπÊ≥ï*********** public fanshe.Student(java.lang.String,int) public fanshe.Student(char) public fanshe.Student() ÊâÄÊúâÁöÑÊûÑÈÄ†ÊñπÊ≥ï(ÂåÖÊã¨ÔºöÁßÅÊúâ„ÄÅÂèó‰øùÊä§„ÄÅÈªòËÆ§„ÄÅÂÖ¨Êúâ)*** private fanshe.Student(int) protected fanshe.Student(boolean) public fanshe.Student(java.lang.String,int) public fanshe.Student(char) public fanshe.Student() fanshe.Student(java.lang.String) Ëé∑ÂèñÂÖ¨Êúâ„ÄÅÊó†ÂèÇÁöÑÊûÑÈÄ†ÊñπÊ≥ï************** con = public fanshe.Student() Ë∞ÉÁî®‰∫ÜÂÖ¨Êúâ„ÄÅÊó†ÂèÇÊûÑÈÄ†ÊñπÊ≥ïÊâßË°å‰∫Ü„ÄÇ„ÄÇ„ÄÇ Ëé∑ÂèñÁßÅÊúâÊûÑÈÄ†ÊñπÊ≥ïÔºåÂπ∂Ë∞ÉÁî®************* public fanshe.Student(char) ÂßìÂêçÔºöÁî∑ Ëé∑ÂèñÊàêÂëòÂèòÈáèÂπ∂Ë∞ÉÁî®ÔºöStudentÁ±ªÔºö 1234567891011121314151617package fanshe.field; public class Student &#123; public Student()&#123; &#125; //**********Â≠óÊÆµ*************// public String name; protected int age; char sex; private String phoneNum; @Override public String toString() &#123; return &quot;Student [name=&quot; + name + &quot;, age=&quot; + age + &quot;, sex=&quot; + sex + &quot;, phoneNum=&quot; + phoneNum + &quot;]&quot;; &#125;&#125; ÊµãËØïÁ±ªÔºö 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253package fanshe.field;import java.lang.reflect.Field;/* * Ëé∑ÂèñÊàêÂëòÂèòÈáèÂπ∂Ë∞ÉÁî®Ôºö * * 1.ÊâπÈáèÁöÑ * 1).Field[] getFields():Ëé∑ÂèñÊâÄÊúâÁöÑ&quot;ÂÖ¨ÊúâÂ≠óÊÆµ&quot; * 2).Field[] getDeclaredFields():Ëé∑ÂèñÊâÄÊúâÂ≠óÊÆµÔºåÂåÖÊã¨ÔºöÁßÅÊúâ„ÄÅÂèó‰øùÊä§„ÄÅÈªòËÆ§„ÄÅÂÖ¨ÊúâÔºõ * 2.Ëé∑ÂèñÂçï‰∏™ÁöÑÔºö * 1).public Field getField(String fieldName):Ëé∑ÂèñÊüê‰∏™&quot;ÂÖ¨ÊúâÁöÑ&quot;Â≠óÊÆµÔºõ * 2).public Field getDeclaredField(String fieldName):Ëé∑ÂèñÊüê‰∏™Â≠óÊÆµ(ÂèØ‰ª•ÊòØÁßÅÊúâÁöÑ) * * ËÆæÁΩÆÂ≠óÊÆµÁöÑÂÄºÔºö * Field --&gt; public void set(Object obj,Object value): * ÂèÇÊï∞ËØ¥ÊòéÔºö * 1.obj:Ë¶ÅËÆæÁΩÆÁöÑÂ≠óÊÆµÊâÄÂú®ÁöÑÂØπË±°Ôºõ * 2.value:Ë¶Å‰∏∫Â≠óÊÆµËÆæÁΩÆÁöÑÂÄºÔºõ */public class Fields &#123; public static void main(String[] args) throws Exception &#123; //1.Ëé∑ÂèñClassÂØπË±° Class stuClass = Class.forName(&quot;fanshe.field.Student&quot;); //2.Ëé∑ÂèñÂ≠óÊÆµ System.out.println(&quot;************Ëé∑ÂèñÊâÄÊúâÂÖ¨ÊúâÁöÑÂ≠óÊÆµ********************&quot;); Field[] fieldArray = stuClass.getFields(); for(Field f : fieldArray)&#123; System.out.println(f); &#125; System.out.println(&quot;************Ëé∑ÂèñÊâÄÊúâÁöÑÂ≠óÊÆµ(ÂåÖÊã¨ÁßÅÊúâ„ÄÅÂèó‰øùÊä§„ÄÅÈªòËÆ§ÁöÑ)********************&quot;); fieldArray = stuClass.getDeclaredFields(); for(Field f : fieldArray)&#123; System.out.println(f); &#125; System.out.println(&quot;*************Ëé∑ÂèñÂÖ¨ÊúâÂ≠óÊÆµ**Âπ∂Ë∞ÉÁî®***********************************&quot;); Field f = stuClass.getField(&quot;name&quot;); System.out.println(f); //Ëé∑Âèñ‰∏Ä‰∏™ÂØπË±° Object obj = stuClass.getConstructor().newInstance();//‰∫ßÁîüStudentÂØπË±°--„ÄãStudent stu = new Student(); //‰∏∫Â≠óÊÆµËÆæÁΩÆÂÄº f.set(obj, &quot;ÂàòÂæ∑Âçé&quot;);//‰∏∫StudentÂØπË±°‰∏≠ÁöÑnameÂ±ûÊÄßËµãÂÄº--„Äãstu.name = &quot;ÂàòÂæ∑Âçé&quot; //È™åËØÅ Student stu = (Student)obj; System.out.println(&quot;È™åËØÅÂßìÂêçÔºö&quot; + stu.name); System.out.println(&quot;**************Ëé∑ÂèñÁßÅÊúâÂ≠óÊÆµ****Âπ∂Ë∞ÉÁî®********************************&quot;); f = stuClass.getDeclaredField(&quot;phoneNum&quot;); System.out.println(f); f.setAccessible(true);//Êö¥ÂäõÂèçÂ∞ÑÔºåËß£Èô§ÁßÅÊúâÈôêÂÆö f.set(obj, &quot;18888889999&quot;); System.out.println(&quot;È™åËØÅÁîµËØùÔºö&quot; + stu); &#125; &#125; Ëé∑ÂèñÊâÄÊúâÂÖ¨ÊúâÁöÑÂ≠óÊÆµ******** public java.lang.String fanshe.field.Student.name Ëé∑ÂèñÊâÄÊúâÁöÑÂ≠óÊÆµ(ÂåÖÊã¨ÁßÅÊúâ„ÄÅÂèó‰øùÊä§„ÄÅÈªòËÆ§ÁöÑ)******** public java.lang.String fanshe.field.Student.name protected int fanshe.field.Student.age char fanshe.field.Student.sex private java.lang.String fanshe.field.Student.phoneNum **Ëé∑ÂèñÂÖ¨ÊúâÂ≠óÊÆµÂπ∂Ë∞ÉÁî®************************** public java.lang.String fanshe.field.Student.name È™åËØÅÂßìÂêçÔºöÂàòÂæ∑Âçé *Ëé∑ÂèñÁßÅÊúâÂ≠óÊÆµÂπ∂Ë∞ÉÁî®*********************** private java.lang.String fanshe.field.Student.phoneNum È™åËØÅÁîµËØùÔºöStudent [name=ÂàòÂæ∑Âçé, age=0, sex= Ëé∑ÂèñÊàêÂëòÊñπÊ≥ïÂπ∂Ë∞ÉÁî®ÔºöStudentÁ±ªÔºö 123456789101112131415161718package fanshe.method; public class Student &#123; //**************ÊàêÂëòÊñπÊ≥ï***************// public void show1(String s)&#123; System.out.println(&quot;Ë∞ÉÁî®‰∫ÜÔºöÂÖ¨ÊúâÁöÑÔºåStringÂèÇÊï∞ÁöÑshow1(): s = &quot; + s); &#125; protected void show2()&#123; System.out.println(&quot;Ë∞ÉÁî®‰∫ÜÔºöÂèó‰øùÊä§ÁöÑÔºåÊó†ÂèÇÁöÑshow2()&quot;); &#125; void show3()&#123; System.out.println(&quot;Ë∞ÉÁî®‰∫ÜÔºöÈªòËÆ§ÁöÑÔºåÊó†ÂèÇÁöÑshow3()&quot;); &#125; private String show4(int age)&#123; System.out.println(&quot;Ë∞ÉÁî®‰∫ÜÔºåÁßÅÊúâÁöÑÔºåÂπ∂‰∏îÊúâËøîÂõûÂÄºÁöÑÔºåintÂèÇÊï∞ÁöÑshow4(): age = &quot; + age); return &quot;abcd&quot;; &#125;&#125; ÊµãËØïÁ±ªÔºö 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455package fanshe.method;import java.lang.reflect.Method; /* * Ëé∑ÂèñÊàêÂëòÊñπÊ≥ïÂπ∂Ë∞ÉÁî®Ôºö * * 1.ÊâπÈáèÁöÑÔºö * public Method[] getMethods():Ëé∑ÂèñÊâÄÊúâ&quot;ÂÖ¨ÊúâÊñπÊ≥ï&quot;ÔºõÔºàÂåÖÂê´‰∫ÜÁà∂Á±ªÁöÑÊñπÊ≥ï‰πüÂåÖÂê´ObjectÁ±ªÔºâ * public Method[] getDeclaredMethods():Ëé∑ÂèñÊâÄÊúâÁöÑÊàêÂëòÊñπÊ≥ïÔºåÂåÖÊã¨ÁßÅÊúâÁöÑ(‰∏çÂåÖÊã¨ÁªßÊâøÁöÑ) * 2.Ëé∑ÂèñÂçï‰∏™ÁöÑÔºö * public Method getMethod(String name,Class&lt;?&gt;... parameterTypes): * ÂèÇÊï∞Ôºö * name : ÊñπÊ≥ïÂêçÔºõ * Class ... : ÂΩ¢ÂèÇÁöÑClassÁ±ªÂûãÂØπË±° * public Method getDeclaredMethod(String name,Class&lt;?&gt;... parameterTypes) * * Ë∞ÉÁî®ÊñπÊ≥ïÔºö * Method --&gt; public Object invoke(Object obj,Object... args): * ÂèÇÊï∞ËØ¥ÊòéÔºö * obj : Ë¶ÅË∞ÉÁî®ÊñπÊ≥ïÁöÑÂØπË±°Ôºõ * args:Ë∞ÉÁî®ÊñπÂºèÊó∂ÊâÄ‰º†ÈÄíÁöÑÂÆûÂèÇÔºõ): */public class MethodClass &#123; public static void main(String[] args) throws Exception &#123; //1.Ëé∑ÂèñClassÂØπË±° Class stuClass = Class.forName(&quot;fanshe.method.Student&quot;); //2.Ëé∑ÂèñÊâÄÊúâÂÖ¨ÊúâÊñπÊ≥ï System.out.println(&quot;***************Ëé∑ÂèñÊâÄÊúâÁöÑ‚ÄùÂÖ¨Êúâ‚ÄúÊñπÊ≥ï*******************&quot;); stuClass.getMethods(); Method[] methodArray = stuClass.getMethods(); for(Method m : methodArray)&#123; System.out.println(m); &#125; System.out.println(&quot;***************Ëé∑ÂèñÊâÄÊúâÁöÑÊñπÊ≥ïÔºåÂåÖÊã¨ÁßÅÊúâÁöÑ*******************&quot;); methodArray = stuClass.getDeclaredMethods(); for(Method m : methodArray)&#123; System.out.println(m); &#125; System.out.println(&quot;***************Ëé∑ÂèñÂÖ¨ÊúâÁöÑshow1()ÊñπÊ≥ï*******************&quot;); Method m = stuClass.getMethod(&quot;show1&quot;, String.class); System.out.println(m); //ÂÆû‰æãÂåñ‰∏Ä‰∏™StudentÂØπË±° Object obj = stuClass.getConstructor().newInstance(); m.invoke(obj, &quot;ÂàòÂæ∑Âçé&quot;); System.out.println(&quot;***************Ëé∑ÂèñÁßÅÊúâÁöÑshow4()ÊñπÊ≥ï******************&quot;); m = stuClass.getDeclaredMethod(&quot;show4&quot;, int.class); System.out.println(m); m.setAccessible(true);//Ëß£Èô§ÁßÅÊúâÈôêÂÆö Object result = m.invoke(obj, 20);//ÈúÄË¶Å‰∏§‰∏™ÂèÇÊï∞Ôºå‰∏Ä‰∏™ÊòØË¶ÅË∞ÉÁî®ÁöÑÂØπË±°ÔºàËé∑ÂèñÊúâÂèçÂ∞ÑÔºâÔºå‰∏Ä‰∏™ÊòØÂÆûÂèÇ System.out.println(&quot;ËøîÂõûÂÄºÔºö&quot; + result); &#125;&#125; ÊéßÂà∂Âè∞ËæìÂá∫Ôºö Ëé∑ÂèñÊâÄÊúâÁöÑ‚ÄùÂÖ¨Êúâ‚ÄúÊñπÊ≥ï**** public void fanshe.method.Student.show1(java.lang.String) public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException public final void java.lang.Object.wait() throws java.lang.InterruptedException public boolean java.lang.Object.equals(java.lang.Object) public java.lang.String java.lang.Object.toString() public native int java.lang.Object.hashCode() public final native java.lang.Class java.lang.Object.getClass() public final native void java.lang.Object.notify() public final native void java.lang.Object.notifyAll() Ëé∑ÂèñÊâÄÊúâÁöÑÊñπÊ≥ïÔºåÂåÖÊã¨ÁßÅÊúâÁöÑ**** public void fanshe.method.Student.show1(java.lang.String) private java.lang.String fanshe.method.Student.show4(int) protected void fanshe.method.Student.show2() void fanshe.method.Student.show3() Ëé∑ÂèñÂÖ¨ÊúâÁöÑshow1()ÊñπÊ≥ï**** public void fanshe.method.Student.show1(java.lang.String) Ë∞ÉÁî®‰∫ÜÔºöÂÖ¨ÊúâÁöÑÔºåStringÂèÇÊï∞ÁöÑshow1(): s = ÂàòÂæ∑Âçé Ëé∑ÂèñÁßÅÊúâÁöÑshow4()ÊñπÊ≥ï*** private java.lang.String fanshe.method.Student.show4(int) Ë∞ÉÁî®‰∫ÜÔºåÁßÅÊúâÁöÑÔºåÂπ∂‰∏îÊúâËøîÂõûÂÄºÁöÑÔºåintÂèÇÊï∞ÁöÑshow4(): age = 20 ËøîÂõûÂÄºÔºöabcd ÂèçÂ∞ÑmainÊñπÊ≥ï:StudentÁ±ªÔºö 1234567891011121314151617181920212223242526272829303132333435package fanshe.main; public class Student &#123; public static void main(String[] args) &#123; System.out.println(&quot;mainÊñπÊ≥ïÊâßË°å‰∫Ü„ÄÇ„ÄÇ„ÄÇ&quot;); &#125;&#125;ÊµãËØïÁ±ªÔºöpackage fanshe.main;import java.lang.reflect.Method; /** * Ëé∑ÂèñStudentÁ±ªÁöÑmainÊñπÊ≥ï„ÄÅ‰∏çË¶Å‰∏éÂΩìÂâçÁöÑmainÊñπÊ≥ïÊêûÊ∑∑‰∫Ü */public class Main &#123; public static void main(String[] args) &#123; try &#123; //1„ÄÅËé∑ÂèñStudentÂØπË±°ÁöÑÂ≠óËäÇÁ†Å Class clazz = Class.forName(&quot;fanshe.main.Student&quot;); //2„ÄÅËé∑ÂèñmainÊñπÊ≥ï Method methodMain = clazz.getMethod(&quot;main&quot;, String[].class);//Á¨¨‰∏Ä‰∏™ÂèÇÊï∞ÔºöÊñπÊ≥ïÂêçÁß∞ÔºåÁ¨¨‰∫å‰∏™ÂèÇÊï∞ÔºöÊñπÊ≥ïÂΩ¢ÂèÇÁöÑÁ±ªÂûãÔºå //3„ÄÅË∞ÉÁî®mainÊñπÊ≥ï // methodMain.invoke(null, new String[]&#123;&quot;a&quot;,&quot;b&quot;,&quot;c&quot;&#125;); //Á¨¨‰∏Ä‰∏™ÂèÇÊï∞ÔºåÂØπË±°Á±ªÂûãÔºåÂõ†‰∏∫ÊñπÊ≥ïÊòØstaticÈùôÊÄÅÁöÑÔºåÊâÄ‰ª•‰∏∫nullÂèØ‰ª•ÔºåÁ¨¨‰∫å‰∏™ÂèÇÊï∞ÊòØStringÊï∞ÁªÑÔºåËøôÈáåË¶ÅÊ≥®ÊÑèÂú®jdk1.4Êó∂ÊòØÊï∞ÁªÑÔºåjdk1.5‰πãÂêéÊòØÂèØÂèòÂèÇÊï∞ //ËøôÈáåÊãÜÁöÑÊó∂ÂÄôÂ∞Ü new String[]&#123;&quot;a&quot;,&quot;b&quot;,&quot;c&quot;&#125; ÊãÜÊàê3‰∏™ÂØπË±°„ÄÇ„ÄÇ„ÄÇÊâÄ‰ª•ÈúÄË¶ÅÂ∞ÜÂÆÉÂº∫ËΩ¨„ÄÇ methodMain.invoke(null, (Object)new String[]&#123;&quot;a&quot;,&quot;b&quot;,&quot;c&quot;&#125;);//ÊñπÂºè‰∏Ä // methodMain.invoke(null, new Object[]&#123;new String[]&#123;&quot;a&quot;,&quot;b&quot;,&quot;c&quot;&#125;&#125;);//ÊñπÂºè‰∫å &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125; ÊéßÂà∂Âè∞ËæìÂá∫Ôºö mainÊñπÊ≥ïÊâßË°å‰∫Ü„ÄÇ„ÄÇ„ÄÇ Âà©Áî®ÂèçÂ∞ÑÂàõÂª∫Êï∞ÂÄºÔºöÊï∞ÁªÑÂú®JavaÈáåÊòØÊØîËæÉÁâπÊÆäÁöÑ‰∏ÄÁßçÁ±ªÂûãÔºåÂÆÉÂèØ‰ª•ËµãÂÄºÁªô‰∏Ä‰∏™Object Reference„ÄÇ 123456789101112public static void testArray() throws ClassNotFoundException &#123; Class&lt;?&gt; cls = Class.forName(&quot;java.lang.String&quot;); Object array = Array.newInstance(cls,25); //ÂæÄÊï∞ÁªÑÈáåÊ∑ªÂä†ÂÜÖÂÆπ Array.set(array,0,&quot;golang&quot;); Array.set(array,1,&quot;Java&quot;); Array.set(array,2,&quot;pytho&quot;); Array.set(array,3,&quot;Scala&quot;); Array.set(array,4,&quot;Clojure&quot;); //Ëé∑ÂèñÊüê‰∏ÄÈ°πÁöÑÂÜÖÂÆπ System.out.println(Array.get(array,3));&#125; ÂèçÂ∞ÑÊñπÊ≥ïÁöÑÂÖ∂‰ªñ‰ΩøÁî®‚ÄìÈÄöËøáÂèçÂ∞ÑËøêË°åÈÖçÁΩÆÊñá‰ª∂ÂÜÖÂÆπÔºöStudentÁ±ªÔºö 12345public class Student &#123; public void show()&#123; System.out.println(&quot;is show()&quot;); &#125;&#125; ÈÖçÁΩÆÊñá‰ª∂‰ª•txtÊñá‰ª∂‰∏∫‰æãÂ≠êÔºö className = cn.fanshe.Student methodName = show ÊµãËØïÁ±ªÔºö 123456789101112131415161718192021222324252627282930import java.io.FileNotFoundException;import java.io.FileReader;import java.io.IOException;import java.lang.reflect.Method;import java.util.Properties; /* * Êàë‰ª¨Âà©Áî®ÂèçÂ∞ÑÂíåÈÖçÁΩÆÊñá‰ª∂ÔºåÂèØ‰ª•‰ΩøÔºöÂ∫îÁî®Á®ãÂ∫èÊõ¥Êñ∞Êó∂ÔºåÂØπÊ∫êÁ†ÅÊó†ÈúÄËøõË°å‰ªª‰Ωï‰øÆÊîπ * Êàë‰ª¨Âè™ÈúÄË¶ÅÂ∞ÜÊñ∞Á±ªÂèëÈÄÅÁªôÂÆ¢Êà∑Á´ØÔºåÂπ∂‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂Âç≥ÂèØ */public class Demo &#123; public static void main(String[] args) throws Exception &#123; //ÈÄöËøáÂèçÂ∞ÑËé∑ÂèñClassÂØπË±° Class stuClass = Class.forName(getValue(&quot;className&quot;));//&quot;cn.fanshe.Student&quot; //2Ëé∑Âèñshow()ÊñπÊ≥ï Method m = stuClass.getMethod(getValue(&quot;methodName&quot;));//show //3.Ë∞ÉÁî®show()ÊñπÊ≥ï m.invoke(stuClass.getConstructor().newInstance()); &#125; //Ê≠§ÊñπÊ≥ïÊé•Êî∂‰∏Ä‰∏™keyÔºåÂú®ÈÖçÁΩÆÊñá‰ª∂‰∏≠Ëé∑ÂèñÁõ∏Â∫îÁöÑvalue public static String getValue(String key) throws IOException&#123; Properties pro = new Properties();//Ëé∑ÂèñÈÖçÁΩÆÊñá‰ª∂ÁöÑÂØπË±° FileReader in = new FileReader(&quot;pro.txt&quot;);//Ëé∑ÂèñËæìÂÖ•ÊµÅ pro.load(in);//Â∞ÜÊµÅÂä†ËΩΩÂà∞ÈÖçÁΩÆÊñá‰ª∂ÂØπË±°‰∏≠ in.close(); return pro.getProperty(key);//ËøîÂõûÊ†πÊçÆkeyËé∑ÂèñÁöÑvalueÂÄº &#125;&#125; ÊéßÂà∂Âè∞ËæìÂá∫Ôºö is show() ÈúÄÊ±ÇÔºö ÂΩìÊàë‰ª¨ÂçáÁ∫ßËøô‰∏™Á≥ªÁªüÊó∂Ôºå‰∏çË¶ÅStudentÁ±ªÔºåËÄåÈúÄË¶ÅÊñ∞ÂÜô‰∏Ä‰∏™Student2ÁöÑÁ±ªÊó∂ÔºåËøôÊó∂Âè™ÈúÄË¶ÅÊõ¥Êîπpro.txtÁöÑÊñá‰ª∂ÂÜÖÂÆπÂ∞±ÂèØ‰ª•‰∫Ü„ÄÇ‰ª£Á†ÅÂ∞±‰∏ÄÁÇπ‰∏çÁî®ÊîπÂä®„ÄÇ 12345public class Student2 &#123; public void show2()&#123; System.out.println(&quot;is show2()&quot;); &#125;&#125; ÈÖçÁΩÆÊñá‰ª∂Êõ¥Êîπ‰∏∫Ôºö className = cn.fanshe.Student2 methodName = show2 ÂèçÂ∞ÑÊñπÊ≥ïÁöÑÂÖ∂‰ªñ‰ΩøÁî®‚ÄìÈÄöËøáÂèçÂ∞ÑË∂äËøáÊ≥õÂûãÊ£ÄÊü•ÔºöÊ≥õÂûãÁî®Âú®ÁºñËØëÊúüÔºåÁºñËØëËøáÂêéÊ≥õÂûãÊì¶Èô§ÔºàÊ∂àÂ§±ÊéâÔºâÔºåÊâÄ‰ª•ÊòØÂèØ‰ª•ÈÄöËøáÂèçÂ∞ÑË∂äËøáÊ≥õÂûãÊ£ÄÊü•ÁöÑ ÊµãËØïÁ±ª 12345678910111213141516171819202122232425262728import java.lang.reflect.Method;import java.util.ArrayList; /* * ÈÄöËøáÂèçÂ∞ÑË∂äËøáÊ≥õÂûãÊ£ÄÊü• * ‰æãÂ¶ÇÔºöÊúâ‰∏Ä‰∏™StringÊ≥õÂûãÁöÑÈõÜÂêàÔºåÊÄéÊ†∑ËÉΩÂêëËøô‰∏™ÈõÜÂêà‰∏≠Ê∑ªÂä†‰∏Ä‰∏™IntegerÁ±ªÂûãÁöÑÂÄºÔºü */public class Demo &#123; public static void main(String[] args) throws Exception&#123; ArrayList&lt;String&gt; strList = new ArrayList&lt;&gt;(); strList.add(&quot;aaa&quot;); strList.add(&quot;bbb&quot;); // strList.add(100); //Ëé∑ÂèñArrayListÁöÑClassÂØπË±°ÔºåÂèçÂêëÁöÑË∞ÉÁî®add()ÊñπÊ≥ïÔºåÊ∑ªÂä†Êï∞ÊçÆ Class listClass = strList.getClass(); //ÂæóÂà∞ strList ÂØπË±°ÁöÑÂ≠óËäÇÁ†Å ÂØπË±° //Ëé∑Âèñadd()ÊñπÊ≥ï Method m = listClass.getMethod(&quot;add&quot;, Object.class); //Ë∞ÉÁî®add()ÊñπÊ≥ï m.invoke(strList, 100); //ÈÅçÂéÜÈõÜÂêà for(Object obj : strList)&#123; System.out.println(obj); &#125; &#125;&#125; ÊéßÂà∂Âè∞ËæìÂá∫Ôºö aaa bbb 100 ÁâàÊùÉÂ£∞ÊòéÔºöÊú¨Êñá‰∏∫CSDNÂçö‰∏ª„ÄåÂº†Áª¥Èπè„ÄçÁöÑÂéüÂàõÊñáÁ´†ÔºåÈÅµÂæ™CC 4.0 BY-SAÁâàÊùÉÂçèËÆÆÔºåËΩ¨ËΩΩËØ∑ÈôÑ‰∏äÂéüÊñáÂá∫Â§ÑÈìæÊé•ÂèäÊú¨Â£∞Êòé„ÄÇ ÂéüÊñáÈìæÊé•Ôºöhttps://blog.csdn.net/a745233700/article/details/82893076","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2021-05-26T11:13:32.332Z","updated":"2021-05-26T11:13:32.332Z","comments":true,"path":"2021/05/26/hello-world/","link":"","permalink":"http://example.com/2021/05/26/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"ÊéíÂ∫èÁÆóÊ≥ïÊÄªÁªì","slug":"ÊéíÂ∫èÁÆóÊ≥ï","date":"2021-05-25T16:00:00.000Z","updated":"2021-05-27T02:24:53.339Z","comments":true,"path":"2021/05/26/ÊéíÂ∫èÁÆóÊ≥ï/","link":"","permalink":"http://example.com/2021/05/26/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/","excerpt":"","text":"ÂÜíÊ≥°ÊéíÂ∫èÁÆÄÊûêÔºöÊØîËæÉÁõ∏ÈÇªÁöÑ‰∏§‰∏™ÂÖÉÁ¥†ÔºåÂ¶ÇÊûúÂΩìÂâçÊï∞Â≠óÊØîÂêéÈù¢ÁöÑÊï∞Â≠óÂ§ßÔºåÂ∞±‰∫§Êç¢‰ΩçÁΩÆ ‰∏ãÂàó‰ª£Á†ÅÂÅö‰∫ÜÊîπËøõÔºå‰ªéÊï∞ÁªÑÁöÑÊú´Â∞æÂºÄÂßãÊØîËæÉÔºåÈô§‰∫ÜËÉΩÂ∞ÜÊúÄÂ∞èÂÖÉÁ¥†ÁßªÂä®Ëá≥Á¨¨‰∏Ä‰ΩçÂ§ñÔºåËøòÂ∞ÜÁ¨¨‰∫åÂ∞èÁöÑÂÖÉÁ¥†Â∞ΩÂèØËÉΩÁöÑÁßªÂä®Ëá≥Èù†ËøëÈÄÇÂêàÂÆÉÁöÑ‰ΩçÁΩÆ„ÄÇ 123456789101112public void bubbleSort(int[] arr)&#123; int i,j,len=arr.length-1; for(i=0;i&lt;len;i++)&#123; for(j=len-1;j&gt;=i;--j)&#123; if(arr[j]&gt;arr[j+1])&#123; int tmp=arr[j]; arr[j]=arr[j+1]; arr[j+1]=tmp; &#125; &#125; &#125;&#125; ÈÄâÊã©ÊéíÂ∫èÁÆÄÊûêÔºöÂú®Êú™ÊéíÂ∫èÁöÑÂ∫èÂàó‰∏≠ÔºåÊâæÂà∞ÊúÄÂ∞èÁöÑÂÖÉÁ¥†ÔºåÊîæÂà∞ÊéíÂàóÂÖÉÁ¥†ÁöÑËµ∑Âßã‰ΩçÁΩÆÔºõÁÑ∂ÂêéÂÜç‰ªéÊú™ÊéíÂ∫èÁöÑÂ∫èÂàó‰∏≠ÊâæÂà∞ÊúÄÂ∞èÁöÑÂÖÉÁ¥†ÔºåÊîæÂà∞Â∑≤ÊéíÂ∫èÂ∫èÂàóÁöÑÊú´Â∞æÔºå‰æùÊ¨°Á±ªÊé®ÔºåÁõ¥Ëá≥Êú´Â∞æ„ÄÇ 1234567891011121314public void selectSort(int[] arr)&#123; int minIndex; for(int i=0;i&lt;arr.length;i++)&#123; minIndex=i; for(int j=i;j&lt;arr.length;j++)&#123; if(arr[j]&lt;arr[minIndex])&#123; minIndex=j; &#125; &#125; int tmp=arr[minIndex]; arr[minIndex]=arr[i]; arr[i]=tmp; &#125;&#125; ÊèíÂÖ•ÊéíÂ∫èÁÆÄÊûêÔºöÂØπ‰∫éÊú™ÊéíÂ∫èÁöÑÂ∫èÂàóÔºåÂú®Â∑≤ÊéíÂ∫èÁöÑÂ∫èÂàó‰∏≠‰ªéÂêéÂæÄÂâçÊâ´ÊèèÔºåÊâæÂà∞ÂêàÈÄÇÁöÑ‰ΩçÁΩÆÂπ∂ÊèíÂÖ•„ÄÇ 123456789101112public void InsertSort(int[] arr)&#123; int len=arr.length; for(int i=1;i&lt;len;i++)&#123; int insertVal=arr[i];//Ë¶ÅÊèíÂÖ•ÁöÑÂÄº int insertIndex=i-1;//Ë¶ÅÊèíÂÖ•ÁöÑÂÄºÁöÑÂâç‰∏Ä‰∏™ÂùêÊ†á while(inserIndex&gt;=0&amp;&amp;insertVal&lt;arr[insertIndex])&#123; arr[insertIndex+1]=arr[insertIndex]; intsertIndex--; &#125;//Ë∑≥Âá∫Âæ™ÁéØÊó∂ËØ¥ÊòéË¶ÅÊèíÂÖ•ÁöÑ‰ΩçÁΩÆÂú®insertIndexÂêéÈù¢ arr[insertIndex+1]=insertVal; &#125;&#125; Â∏åÂ∞îÊéíÂ∫èÁÆÄÊûêÔºöÂ∏åÂ∞îÊéíÂ∫èÊòØÊèíÂÖ•ÊéíÂ∫èÁöÑ‰ºòÂåñÁâàÔºåÈÄöËøáËÆæÁΩÆ‰∏çÂêåÁöÑÊ≠•ÈïøÂπ∂ÈÄêÊ≠•ÂáèÂ∞ëÊ≠•ÈïøÔºå‰ª•Ê≠•Èïø‰∏∫ÂçïÊ¨°ÁßªÂä®Ë∑ùÁ¶ªÔºåÂèØÂ§ßÂπÖÁº©Áü≠ÊâÄÈúÄÊó∂Èó¥„ÄÇ 12345678910111213141516171819public void shellSort(int[] arr)&#123; int len=arr.length; for(int step=len/2;step&gt;0;step/=2)&#123; for(int i=step;i&lt;len;i++)&#123; //ËÆ∞ÂΩï‰∏ãË¶ÅÁßªÂä®ÁöÑÂÖÉÁ¥†‰∏ãÊ†á int tmpIndex=i; //ËÆ∞ÂΩï‰∏ãË¶ÅÁßªÂä®ÁöÑÂÖÉÁ¥†ÂÄº int tmpVal=arr[tmpIndex]; //Â¶ÇÊûúÈúÄË¶ÅÁßªÂä®ÔºåÈÇ£Â∞±ÁßªÂä®Ëá≥ÂêàÈÄÇÁöÑ‰ΩçÁΩÆ if(tmpVal&lt;arr[tmmIndex-step])&#123; while(temIndex-step&gt;=0&amp;&amp;tmpVal&lt;arr[tmpIndex-step])&#123; arr[tmpIndex]=arr[tmpIndex-step]; tmpIndex-=step; &#125; &#125;//tmpIndexÂ∑≤ÁªèÊòØÂêàÈÄÇÁöÑ‰ΩçÁΩÆ arr[tmpIndex]=tmpVal; &#125; &#125;&#125; ÂΩíÂπ∂ÊéíÂ∫èÁÆÄÊûêÔºöÂ∞ÜÂ∑≤ÊúâÂ∫èÁöÑÂ≠êÂ∫èÂàóÂêàÂπ∂ÔºõËµ∑ÂßãÈªòËÆ§Âçï‰∏™ÂÖÉÁ¥†Êó¢ÊòØ‰∏Ä‰∏™ÊúâÂ∫èÂ∫èÂàó„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637383940public class MergeSort &#123; public static void main(String[] args) &#123; int[] arr = new int[]&#123;8, 4, 5, 7, 1, 3, 6, 2&#125;; int[] tmp = new int[arr.length]; sort(arr,0,arr.length-1,tmp); System.out.println(Arrays.toString(arr)); &#125; private static void sort(int[] arr,int left,int right,int[] tmp) &#123; if(left&gt;=right)&#123; return; &#125; int mid=left+(right-left)/2; sort(arr, left,mid,tmp); sort(arr, mid+1, right,tmp); if(arr[mid]&lt;=arr[mid+1])&#123; return; &#125; merge(arr,left,right,mid,tmp); &#125; private static void merge(int[] arr, int left, int right, int mid,int[] tmp) &#123; int i=left; int j=mid+1; for (int k = left; k &lt;= right; k++) &#123; tmp[k]=arr[k]; &#125; for(int k=left ;k&lt;=right;k++)&#123; if(i==mid+1)&#123; arr[k]=tmp[j++]; &#125;else if(j==right+1)&#123; arr[k]=tmp[i++]; &#125;else if(tmp[i]&lt;=tmp[j])&#123; arr[k]=tmp[i++]; &#125;else&#123; arr[k]=tmp[j++]; &#125; &#125; &#125;&#125; Âø´ÈÄüÊéíÂ∫èÁÆÄÊûêÔºöÈÄöËøáÊåáÂÆö‰∏Ä‰∏™pivotÔºå‰ΩøÂæóÊï∞ÁªÑ‰ª•pivot‰∏∫Âü∫ÂáÜÔºåÂ§ß‰∫épivotÁöÑÈÉΩÁßªÂä®Ëá≥pivotÂè≥ËæπÔºåÂ∞è‰∫épivotÁöÑÈÉΩÁßªÂä®Ëá≥ÂÖ∂Â∑¶ËæπÔºåÁÑ∂ÂêéÂØπpivot‰∏§ËæπÁöÑÊï∞ÁªÑÂÜçÊ¨°ËøõË°åÈÄíÂΩíÊéíÂ∫èÂç≥ÂèØ„ÄÇ 123456789101112131415161718192021222324public vodi quickSort(int[] arr,int l,int r)&#123; if(l&lt;r)&#123; int left=l,right=r; int pivot=arr[l]; while(left&lt;right)&#123; while(left&lt;right&amp;&amp;arr[right]&gt;=pivot)&#123;//ÂÖàÊâæÂà∞‰∏Ä‰∏™ÈúÄË¶ÅÁßªÂä®ÁöÑright„ÄÇ //Ê≥®ÊÑèÔºåÊ≠§Â§ÑÂøÖÈ°ªÂÖàÂØªÊâærightÔºåÂõ†‰∏∫left‰ΩçÁΩÆÁöÑÂÖÉÁ¥†Â∑≤ÁªèÂèñÂá∫ÔºàÂ∞±ÊòØpivotÔºâÔºåÊâÄ‰ª•ÂèØ‰ª•ÂÖàÂØπleftÁöÑ‰ΩçÁΩÆËµãÂÄº --right; &#125; if(left&lt;right)&#123; arr[left++]=arr[right]Ôºõ &#125; while(left&lt;right&amp;&amp;arr[left]&lt;=pivot)&#123; ++left; &#125; if(left&lt;right)&#123; arr[right--]=arr[left]; &#125; &#125; arr[right]=pivot;//Ëøô‰∏™ËµãÂÄºÁªôleftÊàñËÄÖrightÈÉΩÂèØ‰ª• quickSort(arr,l,right-1); quickSort(arr,right+1,r); &#125;&#125; ‰ª£Á†Å2Ôºö 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758/** * @author Mithrandir * @date 2021-03-2021/3/27-21:36 */public class QuickSortAnother &#123; public static void main(String[] args) &#123; int[] arr=&#123;1,6,5,4,3,2,9,1&#125;; quicksort(arr,0,arr.length-1); System.out.println(Arrays.toString(arr)); &#125; /** * ÈöèÊú∫Â∞Ü‰∏Ä‰∏™Êï∞Â≠óÊîæËá≥ÂÖ∂ÂêàÈÄÇÁöÑ‰ΩçÁΩÆÔºåÂπ∂ÂØπËØ•‰ΩçÁΩÆÂ∑¶Âè≥‰∏§Âå∫Èó¥ËøõË°åÊéíÂ∫è * @param arr ÂæÖÊéíÂ∫èÁöÑÊï∞ÁªÑ * @param left Êï∞ÁªÑÁöÑÂ∑¶Á´Ø * @param right Êï∞ÁªÑÁöÑÂè≥Á´Ø */ private static void quicksort(int[] arr,int left,int right) &#123; if(left&gt;=right)&#123; return; &#125; int mid=partition(arr,left,right); quicksort(arr, left, mid-1); quicksort(arr, mid+1, right); &#125; /** * Ëøô‰∏™Ë¶ÅÂÆåÊàêÁöÑÂäüËÉΩÊòØÂØπÊï∞ÁªÑÂÜÖÁöÑ‰∏Ä‰∏™ÈöèÊú∫Êï∞Â≠óÂÆâÊéíËá≥ÂêàÈÄÇÁöÑ‰ΩçÁΩÆÔºåÂπ∂‰ª•ËØ•‰ΩçÁΩÆ‰∏∫Ê†πÊçÆÂ∞ÜÊï∞ÁªÑÂàÜ‰∏∫Â∑¶Âè≥Âå∫Èó¥ * @param arr * @param left * @param right * @return */ private static int partition(int[] arr, int left, int right) &#123; Random random = new Random(); //Êù•Âå∫Èó¥ÂÜÖ‰ΩçÁΩÆÁöÑ‰∏Ä‰∏™ÈöèÊú∫‰ΩçÁΩÆ int tmpIndex=random.nextInt(right-left+1)+left; //Â∞ÜËØ•‰ΩçÁΩÆÁöÑÊï∞Â≠óÊîæÂà∞Êï∞ÁªÑÁöÑÊúÄÂè≥‰æß swap(arr,tmpIndex,right); //ÂÆö‰πâ‰∏Ä‰∏™Á¥¢Âºï int index=left; for(int i=left;i&lt;right;i++)&#123; if(arr[i]&lt;arr[right])&#123;//Âá°ÊòØÂ∞è‰∫éÊàë‰ª¨ÁöÑÈöèÊú∫Êï∞ÁöÑÂÄºÔºå‰∏ÄÂæã‰ªéÂ∑¶ÂºÄÂßãÊéí swap(arr, i, index++); &#125; &#125; //Ê≠§Êó∂ÔºåindexÂ∑¶‰æßÁöÑÊâÄÊúâÂÄºÔºåÂùáÂ∞è‰∫éÈöèÊú∫Êï∞ÔºåÂ∞ÜÈöèÊú∫Êï∞ÊîæÂà∞indexÁöÑ‰ΩçÁΩÆ swap(arr,index, right); return index; &#125; private static void swap(int[] arr, int i, int j) &#123; int tmp=arr[i]; arr[i]=arr[j]; arr[j]=tmp; &#125;&#125; ËÆ°Êï∞ÊéíÂ∫èÁÆÄÊûêÔºöËÆ°Êï∞ÊéíÂ∫èÈÄÇÁî®‰∫éÂÖÉÁ¥†Êï∞ÂÄºËæÉ‰∏∫ÈõÜ‰∏≠Ôºå‰∏îÂÖÉÁ¥†Ë¶ÅÊòØÁ°ÆÂÆöËåÉÂõ¥ÂÜÖÁöÑÊï¥Êï∞ 123456789101112131415161718192021222324252627282930313233public void countingSort(int[] arr)&#123; if(arr.length==0)&#123; return; &#125; //ÊâæÂà∞arrÈáåÁöÑÊúÄÂ§ßÊúÄÂ∞èÂÄº int min=arr[0],max=arr[0]; for(int i=1;i&lt;arr.length;i++)&#123; if(arr[i]&gt;max)&#123; max=arr[i]; &#125; if(arr[i]&lt;min)&#123; min=arr[i]; &#125; &#125; //ÂÆö‰πâ‰∏Ä‰∏™ÂÖ≥ÈîÆÂÄº int bias=0-min; //ÂáÜÂ§á‰∏Ä‰∏™È¢ùÂ§ñÊï∞ÁªÑ int[] bucket=new int[max-min+1]; //ÈÅçÂéÜÊï¥‰∏™Êï∞ÁªÑÔºåËÆ∞ÂΩïÊØè‰∏™ÂÖÉÁ¥†Âá∫Áé∞ÁöÑÊ¨°Êï∞ for(int i=0;i&lt;arr.length;i++)&#123; bucket[arr[i]+bias]++; &#125; //Êé•‰∏ãÊù•ÂáÜÂ§áÈáçÊñ∞ÊéíÂàóarr,index‰∏∫arrÁöÑÁ¥¢ÂºïÔºåi‰∏∫bucketÁöÑÁ¥¢Âºï int index=0,i=0; while(index&lt;arr.length)&#123; if(bucket[i]!=0)&#123; arr[index++]=i-bias; bucket[i]--; &#125;else&#123; i++; &#125; &#125;&#125; Âü∫Êï∞ÊéíÂ∫èÁÆÄÊûêÔºöÂü∫Êï∞ÂíåËÆ°Êï∞ÈÉΩÊòØÁî®‰∫ÜÊ°∂Êù•ËøõË°åÊéíÂ∫èÔºå‰∏çÂêåÁöÑÊòØÔºåÂü∫Êï∞ÂØπÊâÄÊúâÂÖÉÁ¥†ÁöÑÂàÜÈÖçÂÅö‰∫Ü‰ºòÂåñÔºöÊåâÁÖßÊØè‰∏™ÂÖÉÁ¥†ÁöÑÂêå‰∏Ä‰ΩçÔºàÂç≥‰∏™‰ΩçÔºåÂçÅ‰ΩçÁ≠âÔºâËøõË°åÊëÜÊîæÔºå‰πüÂ∞±ÊòØËØ¥ÔºåÊâÄÁî®Âà∞ÁöÑÊ°∂‰∏ÄÂÖ±Êúâ10Â±ÇÔºà0~9ÔºâÔºåÂú®‰∏ÄËΩÆÂæ™ÁéØ‰∏≠ÔºåÊØè‰∏ÄÂ±ÇÊîæÁöÑÊï∞ÊçÆÂú®Êüê‰∏Ä‰ΩçÈÉΩÁõ∏Âêå„ÄÇÂü∫Êï∞ÊéíÂ∫èÁî®ÁöÑÁ©∫Èó¥ÂèñÂÜ≥‰∫éÂÖÉÁ¥†ÁöÑ‰∏™Êï∞ÔºåËÄåËÆ°Êï∞ÊéíÂ∫èÊâÄÁî®ÁöÑÈ¢ùÂ§ñÁ©∫Èó¥ÂèñÂÜ≥‰∫éÂÖÉÁ¥†ÁöÑËåÉÂõ¥ÔºàÂç≥ÊúÄÂ∞è-ÊúÄÂ§ßÔºâ„ÄÇ 123456789101112131415161718192021222324252627282930313233343536373839public static void review(int[] arr) &#123; //Á¨¨‰∏ÄÊ≠•ÔºåÂÖàÊâæÂà∞Êï∞ÁªÑ‰∏≠ÁöÑÊúÄÂ§ßÂÄº int size = arr.length; int max = arr[0]; for (int i = 1; i &lt; size; i++) &#123; if (arr[i] &gt; max) &#123; max = arr[i]; &#125; &#125; //Ê†πÊçÆÊúÄÂ§ßÂÄºÊâæÂà∞ÊúÄÂ§ßÈïøÂ∫¶ String str = max + &quot;&quot;; int maxLength = str.length(); //ÂàõÂª∫‰∏Ä‰∏™Ê°∂ÔºåÁî®‰∫éÁõõÊîæÂ§ÑÁêÜÂêéÁöÑÊï∞ÁªÑ int[][] bucket = new int[10][size]; //ËøòÂæóÂàõÂª∫‰∏Ä‰∏™ËÆ°Êï∞Âô®ÔºåÁî®‰∫éËÆ°ÁÆóÊØè‰∏™‰ΩçÁΩÆÊîæ‰∫ÜÂ§öÂ∞ë‰∏™Êï∞ÊçÆ int[] numsCounter = new int[10]; //Êé•‰∏ãÊù•Â∞±ËøõÂÖ•ÊØè‰∏ÄÂ±ÇÁöÑÊìç‰ΩúÔºöÊîæÂÖ•Ê°∂Ôºå‰ªéÊ°∂‰∏≠ÂèñÂá∫ //ÂÆö‰πâ‰∏§‰∏™ÂèòÈáèÔºåkÁî®‰∫éÁ°ÆÂÆöÊï∞ÊçÆÁöÑÂì™‰∏ÄÂ±ÇÔºåmÁî®‰∫éÂØπÊØè‰∏™Êï∞ÊçÆËøõË°åÂèñ‰ΩôÊìç‰Ωú for (int k = 0, m = 1; k &lt; maxLength; m *= 10, k++) &#123; //ÂÖàÂ∞ÜÊï∞ÊçÆÂèñÂá∫ÔºåÊ†πÊçÆ‰∏™ÔºàÂçÅ„ÄÅÁôæÔºâ‰ΩçÊï∞ÁöÑÂ§ßÂ∞èÊîæÂÖ•Ê°∂‰∏≠ for (int i = 0; i &lt; size; i++) &#123; //ÂèñÂá∫‰∏™‰Ωç int num = arr[i] / m % 10; //ÊîæÂÖ•‰∏™‰ΩçÂØπÂ∫îÁöÑÊ°∂‰∏≠ bucket[num][numsCounter[num]++] = arr[i]; &#125; //Ê≠§Êó∂Â∑≤ÂÆåÊàêÊâÄÊúâÊï∞ÊçÆÂÖ•Ê°∂,ÊåâÁÖßÈ°∫Â∫èÂ∞ÜÂÖ∂ÂèñÂá∫ //ÂÆö‰πâ‰∏Ä‰∏™Á¥¢ÂºïÔºåÁî®‰∫éÂú®arr‰∏≠ÈáçÊñ∞ÊéíÂ∫è int index = 0; for (int i = 0; i &lt; bucket.length; i++) &#123; if (numsCounter[i] != 0) &#123;//iÁöÑÂèñÂÄºËåÉÂõ¥ÊòØ0~9ÔºånumsCounter[i]!=0ËØ¥ÊòéËØ•‰ΩçÁΩÆÂ≠òÊîæÁöÑÊúâÊï∞ÊçÆÔºåÈúÄË¶ÅÂèñÂá∫ for (int j = 0; j &lt; numsCounter[i]; j++) &#123; arr[index++] = bucket[i][j]; &#125; &#125; numsCounter[i] = 0; &#125; &#125; &#125;","categories":[{"name":"HelloWorldÁ≥ªÂàó","slug":"HelloWorldÁ≥ªÂàó","permalink":"http://example.com/categories/HelloWorld%E7%B3%BB%E5%88%97/"}],"tags":[{"name":"ÊéíÂ∫è","slug":"ÊéíÂ∫è","permalink":"http://example.com/tags/%E6%8E%92%E5%BA%8F/"}]},{"title":"ÊêúÁ¥¢ÁÆóÊ≥ï","slug":"ÊêúÁ¥¢ÁÆóÊ≥ï","date":"2021-05-25T16:00:00.000Z","updated":"2021-05-27T02:25:22.120Z","comments":true,"path":"2021/05/26/ÊêúÁ¥¢ÁÆóÊ≥ï/","link":"","permalink":"http://example.com/2021/05/26/%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/","excerpt":"","text":"ÊúâÂ∫èË°®Êü•Êâæ‰∫åÂàÜÊü•Êâæ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415public int binarySearch(int[] arr,int target)&#123; int low=0,height=arr.length-1; int mid; while(low&lt;=height)&#123; mid=(low+height)/2; if(arr[mid]&lt;target)&#123; low=mid+1; &#125;else if(arr[mid]&gt;target)&#123; height=mid-1; &#125;else&#123; return mid; &#125; &#125; return -1;&#125; ÊèíÂÄºÊü•ÊâæÈÄÇÁî®‰∫éÊï∞ÂÄºÂàÜÂ∏ÉÂùáÂåÄÁöÑÊü•ÊâæË°®„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415public int binarySearch(int[] arr,int target)&#123; int low=0,height=arr.length-1; int mid; while(low&lt;=height)&#123; mid=low+(hight-low)(arr[mid]-arr[low])/(arr[height]-arr[low]); if(arr[mid]&lt;target)&#123; low=mid+1; &#125;else if(arr[mid]&gt;target)&#123; height=mid-1; &#125;else&#123; return mid; &#125; &#125; return -1;&#125; ÊñêÊ≥¢ÈÇ£Â•ëÊü•ÊâæÂà©Áî®‰∫ÜÊñêÊ≥¢ÈÇ£Â•ëÊï∞Âàó 12345678910111213141516171819202122232425262728293031323334353637383940414243 public static int fibSearch(int[] arr,int target)&#123; int low=0,heigh=arr.length-1; int[] f=fib(); //k‰∏∫ÂêàÈÄÇÁöÑÊñêÊ≥¢ÈÇ£Â•ëÊï∞ int k=0; while(heigh&gt;f[k]-1)&#123; ++k; &#125; //ÂÆö‰πâÊñêÊ≥¢ÈÇ£Â•ëÊï∞ÈïøÂ∫¶ÁöÑÊï∞ÁªÑ int[] nums = Arrays.copyOf(arr, f[k]); for(int i=heigh;i&lt;f[k];i++)&#123; nums[i]=nums[heigh]; &#125; int mid; while (low&lt;=heigh)&#123; mid=low+f[k-1]-1; if(target&gt;arr[mid])&#123; k-=2; low=mid+1; &#125;else if(target&lt;arr[mid])&#123; --k; heigh=mid-1; &#125;else&#123; if(mid&lt;heigh)&#123; return mid; &#125;else&#123; return heigh; &#125; &#125; &#125; return -1; &#125;//ÂàõÂª∫‰∏Ä‰∏™ÊñêÊ≥¢ÈÇ£Â•ëÊï∞Âàópublic static int[] fib()&#123; int[] f=new int[20]; f[0]=1; f[1]=1; for(int i=2;i&lt;20;i++)&#123; f[i]=f[i-1]+f[i-2]; &#125; return f; &#125;","categories":[{"name":"HelloWorldÁ≥ªÂàó","slug":"HelloWorldÁ≥ªÂàó","permalink":"http://example.com/categories/HelloWorld%E7%B3%BB%E5%88%97/"}],"tags":[{"name":"ÊêúÁ¥¢","slug":"ÊêúÁ¥¢","permalink":"http://example.com/tags/%E6%90%9C%E7%B4%A2/"}]},{"title":"ÂûÉÂúæÊî∂ÈõÜÁÆóÊ≥ïÁÆÄËø∞","slug":"ÂûÉÂúæÊî∂ÈõÜÁÆóÊ≥ïÁÆÄËø∞","date":"2021-05-25T16:00:00.000Z","updated":"2021-08-03T01:49:02.709Z","comments":true,"path":"2021/05/26/ÂûÉÂúæÊî∂ÈõÜÁÆóÊ≥ïÁÆÄËø∞/","link":"","permalink":"http://example.com/2021/05/26/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95%E7%AE%80%E8%BF%B0/","excerpt":"","text":"1„ÄÅÊ†áËÆ∞-Ê∏ÖÈô§ÁÆóÊ≥ïÈ¶ñÂÖàÊ†áËÆ∞Âá∫ÊâÄÊúâÈúÄË¶ÅÂõûÊî∂ÁöÑÂØπË±°ÔºåÂú®Ê†áËÆ∞ÂÆåÊàêÂêéÁªü‰∏ÄÂõûÊî∂ÊâÄÊúâË¢´Ê†áËÆ∞ÁöÑÂØπË±°„ÄÇ‰∏çÈúÄË¶ÅÁßªÂä®Ë¢´ÂõûÊî∂ÁöÑÂØπË±°ÔºåÂè™ÈúÄË¶ÅÂØπ‰∏çÂ≠òÊ¥ªÁöÑÂØπË±°ËøõË°åÂ§ÑÁêÜÔºõÂú®Â≠òÊ¥ªÂØπË±°ËæÉÂ§öÊó∂ÊïàÁéáËæÉÈ´ò„ÄÇ Áº∫ÁÇπÔºöÊâßË°åÊïàÁéá‰∏çÁ®≥ÂÆöÔºõ‰ºö‰∫ßÁîüÂ§ßÈáè‰∏çËøûÁª≠ÁöÑÁ©∫Èó¥Á¢éÁâá„ÄÇ 2„ÄÅÊ†áËÆ∞-Â§çÂà∂ÁÆóÊ≥ï‰∏∫‰∫ÜÂÖãÊúçÂè•ÊüÑÁöÑÂºÄÈîÄÂíåËß£ÂÜ≥ÂÜÖÂ≠òÁ¢éÁâáÈóÆÈ¢ò„ÄÇÂ∞ÜÂ†ÜÂàÜ‰∏∫‰∏Ä‰∏™ÂØπË±°Èù¢ÂíåÂ§ö‰∏™Á©∫Èó≤Èù¢ÔºåÁ®ãÂ∫èÂú®ÂØπË±°Èù¢ÂàÜÈÖçÁ©∫Èó¥ÔºåÁ©∫Èó¥‰∏çË∂≥Êó∂ÔºåÂü∫‰∫écopyingÁÆóÊ≥ïÁöÑÂûÉÂúæÊî∂ÈõÜ‰ªéGCRoots‰∏≠Êâ´ÊèèÊ¥ªÂä®ÂØπË±°ÔºåÂ∞ÜÊ¥ªÂä®ÂØπË±°Â§çÂà∂Âà∞Á©∫Èó≤Èù¢ ÔºåËøôÊ†∑Á©∫Èó≤Èù¢Â∞±ÂèòÊàê‰∫ÜÂØπË±°Èù¢ÔºåÁ®ãÂ∫è‰ºöÂú®Êñ∞ÁöÑÂØπË±°Èù¢‰∏≠ÂàÜÈÖçÂÜÖÂ≠ò„ÄÇÈÄÇÁî®‰∫éÂ≠òÊ¥ªÂØπË±°ËæÉÂ∞ëÊó∂‰ΩøÁî®„ÄÇ ËØ¶ÁªÜÔºöËøô‰∏™ÊòØÂ∞ÜÂπ¥ËΩª‰ª£ÁöÑÂÜÖÂ≠òÁ©∫Èó¥ÂàÜ‰∏∫‰∏âÂùóÔºà8Ôºö1Ôºö1ÔºâÔºå‰∏ÄÂùóedenÔºå‰∏§ÂùósurvivorÔºåÊØèÊ¨°‰ΩøÁî®edenÂíå‰∏Ä‰∏™survivorÔºõËøõË°åÂûÉÂúæÂõûÊî∂Êó∂Â∞ÜÂ≠òÊ¥ªÂØπË±°ÊîæÂÖ•Ââ©‰∏ãÁöÑsurvivor‰∏≠ÔºõÂ¶ÇÊûúÂ≠òÊ¥ªÂØπË±°Ë∂ÖËøá10%Ôºà‰πüÂ∞±ÊòØËØ¥Ââ©‰ΩôÁöÑsurvivorÊîæ‰∏ç‰∏ãÔºâÔºåÂ∞ÜÂ§öÂá∫ÁöÑÂØπË±°Áõ¥Êé•ÊîæÂÖ•ËÄÅÂπ¥‰ª£„ÄÇ Áº∫ÁÇπÔºö Âú®ÂØπË±°ÁöÑÂ≠òÊ¥ªÁéáËæÉÈ´òÊó∂ÔºåÊïàÁéáÂ∞±‰ºöÈôç‰Ωé 3„ÄÅÊ†áËÆ∞-Êï¥ÁêÜÁÆóÊ≥ï‰∏éÊ†áËÆ∞-Ê∏ÖÈô§ÁÆóÊ≥ïÂ∑Æ‰∏çÂ§öÔºåÂÖàËøõË°åÊ†áËÆ∞ÔºåÂêéÁª≠Â∞ÜÂ≠òÊ¥ªÁöÑÂØπË±°Âêë‰∏Ä‰æßËøõË°åÁßªÂä®ÔºåÁÑ∂ÂêéÊ∏ÖÁêÜÊéâËæπÁïå‰πãÂ§ñÁöÑÂÜÖÂ≠ò„ÄÇÈÄÇÂêàÂ≠òÊ¥ªÂØπË±°ËæÉÂ§ö„ÄÇ Áº∫ÁÇπÔºöËøôÁßçÂØπË±°ÁßªÂä®Êìç‰ΩúÂøÖÈ°ªÂÖ®Á®ãÊöÇÂÅúÁî®Êà∑Â∫îÁî®Á®ãÂ∫èÔºõ ÊÄªÁªìÔºöÁßªÂä®ÂØπË±°Êó∂ÔºåÂÜÖÂ≠òÂõûÊî∂ËæÉ‰∏∫Â§çÊùÇÔºõ‰∏çÁßªÂä®ÂØπË±°Êó∂ÔºåÂÜÖÂ≠òÂàÜÈÖçÊõ¥Âä†Â§çÊùÇÔºõ‰ΩÜÊòØÊÄªÁöÑÊù•ÁúãÔºåÁßªÂä®ÂØπË±°‰ºöÊõ¥Âä†ÂàíÁÆóÔºåÂõ†‰∏∫ÂÜÖÂ≠òÂàÜÈÖçÂíåËÆøÈóÆÁõ∏ÊØîÂûÉÂúæÊî∂ÈõÜÈ¢ëÁéáË¶ÅÈ´ò„ÄÇ ËøòÊúâ‰∏ÄÁßçÂíåÁ®ÄÊ≥•ÁöÑÊñπÊ≥ïÔºåÂπ≥Êó∂ÈááÁî®Ê†áËÆ∞Ê∏ÖÈô§ÔºåÁ≠âÂà∞Á©∫Èó¥Á¢éÁâáÂøç‰∏ç‰∫ÜÁöÑÊó∂ÂÄôÔºåÂÜçÁî®Ê†áËÆ∞ÁßªÂä®„ÄÇ","categories":[{"name":"JVM","slug":"JVM","permalink":"http://example.com/categories/JVM/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"Â∏∏ËßÅÁöÑÂûÉÂúæÊî∂ÈõÜÂô®","slug":"Â∏∏ËßÅÁöÑÂûÉÂúæÊî∂ÈõÜÂô®","date":"2021-05-24T16:00:00.000Z","updated":"2021-08-03T01:56:08.795Z","comments":true,"path":"2021/05/25/Â∏∏ËßÅÁöÑÂûÉÂúæÊî∂ÈõÜÂô®/","link":"","permalink":"http://example.com/2021/05/25/%E5%B8%B8%E8%A7%81%E7%9A%84%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/","excerpt":"","text":"Êî∂ÈõÜÁÆóÊ≥ïÊòØÂÜÖÂ≠òÂõûÊî∂ÁöÑÊñπÊ≥ïËÆ∫ÔºåÂûÉÂúæÊî∂ÈõÜÂô®ÊòØÂÖ∑‰ΩìÂÆûÁé∞„ÄÇ Ë°°ÈáèÂûÉÂúæÊî∂ÈõÜÂô®ÁöÑ‰∏âÈ°πÈáçË¶ÅÊåáÊ†áÔºöÂÜÖÂ≠òÂç†Áî®„ÄÅÂêûÂêêÈáè„ÄÅÂª∂Ëøü„ÄÇ CMSÔºàConcurrent Mark SweepÔºâÔºöÈááÁî®Ê†áËÆ∞-Ê∏ÖÈô§ÁÆóÊ≥ïÔºå‰ª•Ëé∑ÂèñÊúÄÁü≠ÂõûÊî∂ÂÅúÈ°øÊó∂Èó¥‰∏∫ÁõÆÊ†áÁöÑÊî∂ÈõÜÂô®„ÄÇ ÂàÜ‰∏∫Âõõ‰∏™Ê≠•È™§Ôºö ÂàùÂßãÊ†áËÆ∞ÔºöÊöÇÂÅúÂÖ∂‰ªñÁ∫øÁ®ãÔºåËÆ∞ÂΩï‰∏ã‰∏éGCRootsÁõ¥Êé•Áõ∏ËøûÁöÑÂØπË±°ÔºåÈÄüÂ∫¶ÂæàÂø´Ôºõ Âπ∂ÂèëÊ†áËÆ∞Ôºö‰ªéGCRootsÁöÑÁõ¥Êé•ÂÖ≥ËÅîÂØπË±°ÂºÄÂßãÈÅçÂéÜÊï¥‰∏™ÂØπË±°ÂõæÁöÑËøáÁ®ãÔºåÊï¥‰∏™ËøáÁ®ãÊó∂Èó¥ËæÉÈïø‰ΩÜÊòØ‰∏çÈúÄË¶ÅÂÅúÈ°øÁî®Êà∑Á∫øÁ®ãÔºåÂèØ‰ª•‰∏éÂûÉÂúæÊî∂ÈõÜÁ∫øÁ®ã‰∏ÄËµ∑Â∑•‰ΩúÔºõ ÈáçÊñ∞Ê†áËÆ∞Ôºö‰∏∫‰∫Ü‰øÆÊ≠£Âπ∂ÂèëÊ†áËÆ∞ÊúüÈó¥Âõ†‰∏∫Áî®Êà∑Á∫øÁ®ã‰∫ßÁîüÁöÑÊ†áËÆ∞ÂèòÂä®ÈÇ£‰∏ÄÈÉ®ÂàÜÂØπË±°„ÄÇËØ•Èò∂ÊÆµÂÅúÈ°øÊó∂Èó¥ÊØîÂàùÂßãÊ†áËÆ∞Êó∂Èó¥ÈïøÔºåÊØîÂπ∂ÂèëÊ†áËÆ∞Êó∂Èó¥Áü≠„ÄÇ Âπ∂ÂèëÊ∏ÖÈô§ÔºöÊ∏ÖÁêÜÂà†Èô§ÊéâÊ†áËÆ∞Èò∂ÊÆµÂà§Êñ≠ÁöÑÂ∑≤ÁªèÊ≠ª‰∫°ÂØπË±°ÔºåÁî±‰∫é‰∏çÈúÄË¶ÅÁßªÂä®Â≠òÊ¥ªÂØπË±°ÔºåËøô‰∏™Èò∂ÊÆµ‰πüÂèØ‰ª•ÂíåÁî®Êà∑Á∫øÁ®ãÂêåÊó∂Âπ∂Âèë„ÄÇ ÂÖ∂‰∏≠ÂàùÂßãÊ†áËÆ∞ÂíåÂπ∂ÂèëÊ†áËÆ∞ÈúÄË¶Åstop the world„ÄÇ Áº∫ÁÇπÔºö1ÔºöÊó†Ê≥ïÂ§ÑÁêÜÊµÆÂä®ÂûÉÂúæÔºàÂú®Âπ∂ÂèëÊ†áËÆ∞ÂíåÂπ∂ÂèëÊ∏ÖÁêÜÈò∂ÊÆµ‰∫ßÁîüÁöÑÂûÉÂúæÔºâÔºåÂè™ËÉΩ‰∏ãÊ¨°Ê∏ÖÁêÜÊó∂ÂÜçÊ∏ÖÁêÜÊéâÔºåÊâÄ‰ª•ÂøÖÈ°ªÈ¢ÑÁïô‰∏ÄÈÉ®ÂàÜÁ©∫Èó¥‰æõÂπ∂ÂèëÊî∂ÈõÜÊó∂ÁöÑÁ®ãÂ∫èËøê‰Ωú‰ΩøÁî®„ÄÇ 2Ôºö‰ºö‰∫ßÁîüÁ©∫Èó¥Á¢éÁâá„ÄÇ G1ÔºàGarbage FirstÔºâÔºöÈááÁî®Ê†áËÆ∞-Êï¥ÁêÜÁÆóÊ≥ï„ÄÇ Âõõ‰∏™Ê≠•È™§ÔºöÂàùÂßãÊ†áËÆ∞„ÄÅÂπ∂ÂèëÊ†áËÆ∞„ÄÅÊúÄÁªàÊ†áËÆ∞„ÄÅÁ≠õÈÄâÂõûÊî∂„ÄÇ Ââç‰∏§‰∏™Ê≠•È™§ÂíåCMS‰∏ÄÊ†∑Ôºå ÊúÄÁªàÊ†áËÆ∞ÔºöÂ∞ÜÂπ∂ÂèëÈò∂ÊÆµÂØπË±°ÁöÑÂèòÂåñËÆ∞ÂΩïÂú®Êó•ÂøóÈáåÈù¢ÔºåËØ•Èò∂ÊÆµÈúÄË¶ÅÂÅúÈ°øÁ∫øÁ®ã„ÄÇ Á≠õÈÄâÂõûÊî∂ÔºöÂØπÊØè‰∏ÄÂùóÂæÖÂõûÊî∂ÁöÑÂå∫ÂüüÁöÑ‰ª∑ÂÄºÂíåÊàêÊú¨ËøõË°åÁ≠õÈÄâÔºåÊ†πÊçÆÁî®Êà∑ÊúüÊúõÁöÑGCÂÅúÈ°øÊó∂Èó¥ÈÄâÊã©ÊúÄÂ•ΩÁöÑÂõûÊî∂ÊñπÊ°àÂπ∂ÂõûÊî∂„ÄÇ ‰ºòÁÇπÔºöÂπ∂ÂèëÊÄßÂº∫„ÄÅÂàÜ‰ª£Êî∂ÈõÜ„ÄÅÁ©∫Èó¥Êï¥ÂêàÔºà‰∏ç‰ºö‰∫ßÁîüÁ©∫Èó¥Á¢éÁâáÔºâ„ÄÅÂèØÈ¢ÑÊµãÂÅúÈ°øÊó∂Èó¥„ÄÇ Áº∫ÁÇπÔºöÂÜÖÂ≠òÂç†Áî®È´ò ÂéüÁêÜÔºöÂ∞ÜËøûÁª≠ÁöÑjavaÂ†ÜÂàíÂàÜ‰∏∫Â§ö‰∏™Â§ßÂ∞èÁõ∏ÂêåÁöÑÁã¨Á´ãÂå∫ÂüüÔºàregionÔºâÔºåÊØè‰∏™regionÈÉΩÂèØ‰ª•Ê†πÊçÆÈúÄË¶ÅÊâÆÊºîÊñ∞Áîü‰ª£ÁöÑedenÁ©∫Èó¥„ÄÅsurvivorÁ©∫Èó¥ÊàñËÄÖÊòØËÄÅÂπ¥‰ª£Á©∫Èó¥„ÄÇÊî∂ÈõÜÂô®ËÉΩÂ†ÜÊâÆÊºî‰∏çÂêåËßíËâ≤ÁöÑregionÈááÁî®‰∏çÂêåÁöÑÁ≠ñÁï•ÂéªÊî∂ÈõÜÔºõ regionËøòÊúâ‰∏ÄÁ±ªÁâπÊÆäÁöÑhumongousÂå∫ÂüüÔºå‰∏ìÈó®Áî®‰∫éÂ≠òÂÇ®Â§ßÂØπË±°ÔºàË∂ÖËøáregionÁöÑ‰∏ÄÂçäÂç≥‰∏∫Â§ßÂØπË±°ÔºâÔºõ ‰∏∫‰ªÄ‰πàG1ËÉΩÂª∫Á´ãÂèØÈ¢ÑÊµãÁöÑÂÅúÈ°øÊó∂Èó¥Ê®°ÂûãÔºü Âõ†‰∏∫G1Â∞Üregion‰Ωú‰∏∫ÂçïÊ¨°ÂõûÊî∂ÁöÑÊúÄÂ∞èÂçïÂÖÉÔºåÂç≥ÊØèÊ¨°ÂõûÊî∂ÈÉΩÊòØregionÁöÑÊï¥Êï∞ÂÄçÔºåÊõ¥ÂÖ∑‰ΩìÁöÑÊÄùË∑ØÊòØËÆ©G1Êî∂ÈõÜÂô®Ë∑üË∏™ÂêÑ‰∏™regionÈáåÈù¢ÁöÑÂûÉÂúæÂ†ÜÁßØÁöÑ‰ª∑ÂÄºÂ§ßÂ∞èÔºàÂõûÊî∂ÊâÄËé∑ÂæóÁöÑÁ©∫Èó¥‰ª•ÂèäÊâÄÈúÄË¶ÅÁöÑÊó∂Èó¥ÁöÑÁªèÈ™åÂÄºÔºâÔºåÊ†πÊçÆÁî®Êà∑ËÆæÂÆöÁöÑÂÖÅËÆ∏ÁöÑÂÅúÈ°øÊî∂ÈõÜÊó∂Èó¥Ôºà200msÂ∞±ÂæàÂêàÁêÜÔºâÔºå‰ºòÂÖàÂ§ÑÁêÜÂõûÊî∂‰ª∑ÂÄºÊî∂ÁõäÊúÄÂ§ßÁöÑregionÔºå‰øùËØÅG1Âú®ÊúâÈôêÊó∂Èó¥ÂÜÖËé∑ÂèñÂ∞ΩÂèØËÉΩÈ´òÁöÑÊî∂ÈõÜÊïàÁéá„ÄÇ","categories":[{"name":"JVM","slug":"JVM","permalink":"http://example.com/categories/JVM/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"ËÄÅÂπ¥‰ª£ÂØπË±°","slug":"ËÄÅÂπ¥‰ª£ÂØπË±°","date":"2021-05-23T16:00:00.000Z","updated":"2021-08-03T01:56:48.395Z","comments":true,"path":"2021/05/24/ËÄÅÂπ¥‰ª£ÂØπË±°/","link":"","permalink":"http://example.com/2021/05/24/%E8%80%81%E5%B9%B4%E4%BB%A3%E5%AF%B9%E8%B1%A1/","excerpt":"","text":"Minor GCÔºöÂèëÁîüÂú®Êñ∞Áîü‰ª£ÂûÉÂúæÊî∂ÈõÜÔºåÊØîËæÉÈ¢ëÁπÅÔºåÊó∂Èó¥Áü≠ Major GCÔºöÂèëÁîüÂú®ËÄÅÂπ¥ÁöÑÂûÉÂúæÊî∂ÈõÜ Full GCÔºöÊñ∞Áîü‰ª£„ÄÅËÄÅÂπ¥‰ª£‰∏ÄËµ∑Ê∏ÖÁêÜ Â§ßÂ§öÊï∞ÊÉÖÂÜµ‰∏ãÔºåÂØπË±°Âú®Êñ∞Áîü‰ª£ËøõË°åÂÜÖÂ≠òÂàÜÈÖçÔºåEdenÊ≤°ÊúâË∂≥Â§üÁöÑÁ©∫Èó¥Êó∂Ôºå‰ºöÂèëËµ∑Minor GC ‰ªÄ‰πàÊó∂ÂÄôÂØπË±°‰ºöËøõÂÖ•ËÄÅÂπ¥‰ª£Ôºü 1„ÄÅÂ§ßÂØπË±°Áõ¥Êé•ËøõÂÖ•ËÄÅÂπ¥‰ª£ÔºàÂú®Garbage FirstÈáåÈù¢ÔºåÂØπË±°Â§ßÂ∞èË∂ÖËøá0.5‰∏™regionÊó∂ÔºåÁõ¥Êé•ÊîæÂÖ•ËÄÅÂπ¥‰ª£Ôºâ 2„ÄÅÁ©∫Èó¥ÂàÜÈÖçÊãÖ‰øù Â∞±ÊòØÂ≠òÊ¥ªÁöÑÂØπË±°Âú®Ââ©‰ΩôÁöÑÈÇ£‰∏™survivorÊîæ‰∏ç‰∏ãÊó∂ÔºåÂ∞±Áõ¥Êé•ËøõÂÖ•ËÄÅÂπ¥‰ª£ 3„ÄÅÂπ¥ÈæÑÂà§ÂÆö ÊØèÁªèËøá‰∏ÄÊ¨°GCÔºåÂ∞±ÁªôÂ≠òÊ¥ªÁöÑÂØπË±°Âπ¥ÈæÑ+1ÔºåË∂ÖËøáËÆæÂÆöÂÄºÔºà15ÔºâÂ∞±ËøõÂÖ•ËÄÅÂπ¥‰ª£Ôºõ ËøòÂèØ‰ª•Âä®ÊÄÅÂà§ÂÆöÔºåÂêå‰∏Ä‰∏™Âπ¥ÈæÑÁöÑÂØπË±°Â§ßÂ∞èÊÄªÂíåË∂ÖËøásurvivorÁ©∫Èó¥ÁöÑ‰∏ÄÂçäÔºåÂàôÂπ¥ÈæÑÂ§ß‰∫éÁ≠â‰∫éËØ•ÂØπË±°ÁöÑÁõ¥Êé•ËøõÂÖ•ËÄÅÂπ¥‰ª£„ÄÇ","categories":[{"name":"JVM","slug":"JVM","permalink":"http://example.com/categories/JVM/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"JVM‰∏≠Á±ªÁöÑÂä†ËΩΩÊú∫Âà∂","slug":"JVM‰∏≠Á±ªÁöÑÂä†ËΩΩÊú∫Âà∂","date":"2021-05-22T16:00:00.000Z","updated":"2021-08-03T01:57:59.571Z","comments":true,"path":"2021/05/23/JVM‰∏≠Á±ªÁöÑÂä†ËΩΩÊú∫Âà∂/","link":"","permalink":"http://example.com/2021/05/23/JVM%E4%B8%AD%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/","excerpt":"","text":"Âä†ËΩΩËøáÁ®ã‰∏ÄÂÖ±ÂàÜ‰∏∫5‰∏™Ê≠•È™§ Âä†ËΩΩ‚ÄìÈ™åËØÅ‚ÄìÂáÜÂ§á‚ÄìËß£Êûê‚ÄìÂàùÂßãÂåñ‚Äì‰ΩøÁî®‚ÄìÂç∏ËΩΩ Âä†ËΩΩÔºö ÈÄöËøáÁ±ªÁöÑÂÖ®ÈôêÂÆöÂêçÊù•Ëé∑ÂèñÂÆö‰πâÊ≠§Á±ªÁöÑ‰∫åËøõÂà∂Â≠óËäÇÊµÅ Â∞ÜËøô‰∏™Á±ªÂ≠óËäÇÊµÅ‰ª£Ë°®ÁöÑÈùôÊÄÅÂ≠òÂÇ®ÁªìÊûÑËΩ¨‰∏∫ÊñπÊ≥ïÂå∫ÁöÑËøêË°åÊó∂Êï∞ÊçÆÁªìÊûÑ Âú®Â†Ü‰∏≠ÁîüÊàê‰∏Ä‰∏™‰ª£Ë°®Ê≠§Á±ªÁöÑjava.lang.ClassÂØπË±°Ôºå‰Ωú‰∏∫ËÆøÈóÆÊñπÊ≥ïÂå∫Ëøô‰∫õÊï∞ÊçÆÁªìÊûÑÁöÑÂÖ•Âè£„ÄÇ Ëøô‰∏™ËøáÁ®ã‰∏ªË¶ÅÂ∞±ÊòØÁ±ªÂä†ËΩΩÂô®ÂÆåÊàê„ÄÇ È™åËØÅÔºöÊ≠§Èò∂ÊÆµ‰∏ªË¶ÅÁ°Æ‰øùClassÊñá‰ª∂ÁöÑÂ≠óËäÇÊµÅ‰∏≠ÂåÖÂê´ÁöÑ‰ø°ÊÅØÁ¨¶ÂêàÂΩìÂâçËôöÊãüÊú∫ÁöÑË¶ÅÊ±ÇÔºåÂπ∂‰∏î‰∏ç‰ºöÂç±ÂÆ≥ËôöÊãüÊú∫ÁöÑËá™Ë∫´ÂÆâÂÖ®„ÄÇ Êñá‰ª∂Ê†ºÂºèÈ™åËØÅÔºöÂü∫‰∫éÂ≠óËäÇÊµÅÈ™åËØÅ„ÄÇ ÂÖÉÊï∞ÊçÆÈ™åËØÅÔºöÂü∫‰∫éÊñπÊ≥ïÂå∫ÁöÑÂ≠òÂÇ®ÁªìÊûÑÈ™åËØÅ„ÄÇ Â≠óËäÇÁ†ÅÈ™åËØÅÔºöÂü∫‰∫éÊñπÊ≥ïÂå∫ÁöÑÂ≠òÂÇ®ÁªìÊûÑÈ™åËØÅ„ÄÇ Á¨¶Âè∑ÂºïÁî®È™åËØÅÔºöÂü∫‰∫éÊñπÊ≥ïÂå∫ÁöÑÂ≠òÂÇ®ÁªìÊûÑÈ™åËØÅ„ÄÇ ÂáÜÂ§áÔºö‰∏∫Á±ªÂèòÈáèÂàÜÈÖçÂÜÖÂ≠òÔºåÂπ∂Â∞ÜÂÖ∂ÂàùÂßãÂåñ‰∏∫ÈªòËÆ§ÂÄº„ÄÇÔºàÊ≠§Êó∂‰∏∫ÈªòËÆ§ÂÄºÔºåÂú®ÂàùÂßãÂåñÁöÑÊó∂ÂÄôÊâç‰ºöÁªôÂèòÈáèËµãÂÄºÔºâÂç≥Âú®ÊñπÊ≥ïÂå∫‰∏≠ÂàÜÈÖçËøô‰∫õÂèòÈáèÊâÄ‰ΩøÁî®ÁöÑÂÜÖÂ≠òÁ©∫Èó¥„ÄÇ public static int value = 123; Ê≠§Êó∂Âú®ÂáÜÂ§áÈò∂ÊÆµËøáÂêéÁöÑÂàùÂßãÂÄº‰∏∫0ËÄå‰∏çÊòØ123ÔºõÂ∞ÜvalueËµãÂÄº‰∏∫123ÁöÑputstaticÊåá‰ª§ÊòØÁ®ãÂ∫èË¢´ÁºñËØëÂêéÔºåÂ≠òÊîæ‰∫éÁ±ªÊûÑÈÄ†Âô®ÊñπÊ≥ï‰πã‰∏≠. ‰∏ãÈù¢Ëøô‰∏™‰∏ç‰∏ÄÊ†∑ÔºåÊ≠§Êó∂valueÁöÑÂÄºÂú®ÂáÜÂ§áÈò∂ÊÆµËøáÂêéÂ∞±ÊòØ123 public static final int value = 123; Ëß£ÊûêÔºöÊääÁ±ªÂûã‰∏≠ÁöÑÁ¨¶Âè∑ÂºïÁî®ËΩ¨Êç¢‰∏∫Áõ¥Êé•ÂºïÁî®ÔºåÁõ¥Êé•ÂºïÁî®ÂèØ‰ª•ÊòØÊåáÂêëÁõÆÊ†áÁöÑÊåáÈíàÔºåÁõ∏ÂØπÂÅèÁßªÈáèÊàñÊòØ‰∏Ä‰∏™ËÉΩÈó¥Êé•ÂÆö‰ΩçÂà∞ÁõÆÊ†áÁöÑÂè•ÊüÑ„ÄÇ ‰∏ªË¶ÅÊúâ‰ª•‰∏ãÂõõÁßçÔºö Á±ªÊàñÊé•Âè£ÁöÑËß£ÊûêÔºõ Â≠óÊÆµËß£ÊûêÔºõ Á±ªÊñπÊ≥ïËß£ÊûêÔºõ Êé•Âè£ÊñπÊ≥ïËß£Êûê ÂàùÂßãÂåñÔºöÂàùÂßãÂåñÈò∂ÊÆµÊòØÊâßË°åÁ±ªÊûÑÈÄ†Âô®ÊñπÊ≥ïÁöÑËøáÁ®ã„ÄÇÊñπÊ≥ïÊòØÁî±ÁºñËØëÂô®Ëá™Âä®Êî∂ÈõÜÁ±ª‰∏≠ÁöÑÁ±ªÂèòÈáèÁöÑËµãÂÄºÊìç‰ΩúÂíåÈùôÊÄÅËØ≠Âè•Âùó‰∏≠ÁöÑËØ≠Âè•ÂêàÂπ∂ËÄåÊàêÁöÑ„ÄÇËôöÊãüÊú∫‰ºö‰øùËØÅÊñπÊ≥ïÊâßË°å‰πãÂâçÔºåÁà∂Á±ªÁöÑÊñπÊ≥ïÂ∑≤ÁªèÊâßË°åÂÆåÊØï„ÄÇÂ¶ÇÊûú‰∏Ä‰∏™Á±ª‰∏≠Ê≤°ÊúâÂØπÈùôÊÄÅÂèòÈáèËµãÂÄº‰πüÊ≤°ÊúâÈùôÊÄÅËØ≠Âè•ÂùóÔºåÈÇ£‰πàÁºñËØëÂô®ÂèØ‰ª•‰∏ç‰∏∫Ëøô‰∏™Á±ªÁîüÊàê()ÊñπÊ≥ï„ÄÇ java‰∏≠ÔºåÂØπ‰∫éÂàùÂßãÂåñÈò∂ÊÆµÔºåÊúâ‰∏îÂè™Êúâ‰ª•‰∏ãÂÖ≠ÁßçÊÉÖÂÜµÊâç‰ºöÂØπË¶ÅÊ±ÇÁ±ªÁ´ãÂàª‚ÄúÂàùÂßãÂåñ‚ÄùÔºàÂä†ËΩΩÔºåÈ™åËØÅÔºåÂáÜÂ§áÔºåËá™ÁÑ∂ÈúÄË¶ÅÂú®Ê≠§‰πãÂâçÂºÄÂßãÔºâÔºö ‰ΩøÁî®newÂÖ≥ÈîÆÂ≠óÂÆû‰æãÂåñÂØπË±°„ÄÅËÆøÈóÆÊàñËÄÖËÆæÁΩÆ‰∏Ä‰∏™Á±ªÁöÑÈùôÊÄÅÂ≠óÊÆµÔºàË¢´final‰øÆÈ•∞„ÄÅÁºñËØëÂô®‰ºòÂåñÊó∂Â∑≤ÁªèÊîæÂÖ•Â∏∏ÈáèÊ±†ÁöÑ‰æãÂ§ñÔºâ„ÄÅË∞ÉÁî®Á±ªÊñπÊ≥ïÔºåÈÉΩ‰ºöÂàùÂßãÂåñËØ•ÈùôÊÄÅÂ≠óÊÆµÊàñËÄÖÈùôÊÄÅÊñπÊ≥ïÊâÄÂú®ÁöÑÁ±ª„ÄÇ ÂàùÂßãÂåñÁ±ªÁöÑÊó∂ÂÄôÔºåÂ¶ÇÊûúÂÖ∂Áà∂Á±ªÊ≤°ÊúâË¢´ÂàùÂßãÂåñËøáÔºåÂàôË¶ÅÂÖàËß¶ÂèëÂÖ∂Áà∂Á±ªÂàùÂßãÂåñ„ÄÇ ‰ΩøÁî®java.lang.reflectÂåÖÁöÑÊñπÊ≥ïËøõË°åÂèçÂ∞ÑË∞ÉÁî®ÁöÑÊó∂ÂÄôÔºåÂ¶ÇÊûúÁ±ªÊ≤°ÊúâË¢´ÂàùÂßãÂåñÔºåÂàôË¶ÅÂÖàÂàùÂßãÂåñ„ÄÇ ËôöÊãüÊú∫ÂêØÂä®Êó∂ÔºåÁî®Êà∑‰ºöÂÖàÂàùÂßãÂåñË¶ÅÊâßË°åÁöÑ‰∏ªÁ±ªÔºàÂê´ÊúâmainÔºâ jdk 1.7ÂêéÔºåÂ¶ÇÊûújava.lang.invoke.MethodHandleÁöÑÂÆû‰æãÊúÄÂêéÂØπÂ∫îÁöÑËß£ÊûêÁªìÊûúÊòØ REF_getStatic„ÄÅREF_putStatic„ÄÅREF_invokeStaticÊñπÊ≥ïÂè•ÊüÑÔºåÂπ∂‰∏îËøô‰∏™ÊñπÊ≥ïÊâÄÂú®Á±ªÊ≤°ÊúâÂàùÂßãÂåñÔºåÂàôÂÖàÂàùÂßãÂåñ„ÄÇ","categories":[{"name":"JVM","slug":"JVM","permalink":"http://example.com/categories/JVM/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"Á±ªÁöÑÂä†ËΩΩÂô®ÂíåÂèå‰∫≤ÂßîÊ¥æÊ®°Âûã","slug":"Á±ªÁöÑÂä†ËΩΩÂô®ÂíåÂèå‰∫≤ÂßîÊ¥æÊ®°Âûã","date":"2021-05-21T16:00:00.000Z","updated":"2021-08-03T01:59:22.131Z","comments":true,"path":"2021/05/22/Á±ªÁöÑÂä†ËΩΩÂô®ÂíåÂèå‰∫≤ÂßîÊ¥æÊ®°Âûã/","link":"","permalink":"http://example.com/2021/05/22/%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%92%8C%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%A8%A1%E5%9E%8B/","excerpt":"","text":"Èô§‰∫ÜÈ°∂Â±ÇÁöÑÂêØÂä®Á±ªÂä†ËΩΩÂô®‰πãÂ§ñÔºåÂÖ∂‰ªñÂä†ËΩΩÂô®ÈÉΩÊúâËá™Â∑±ÁöÑÁà∂Á±ªÂä†ËΩΩÂô®„ÄÇÔºàÊ≥®ÊÑèÔºåËøôÈáåÁöÑÁà∂Á±ªÂä†ËΩΩÂô®ÈÄöÂ∏∏ÊòØÊåáÁî®ÁªÑÂêàÁöÑÊñπÂºèÔºåËÄå‰∏çÊòØÁªßÊâøÂÖ≥Á≥ªÊù•Â§çÁî®Áà∂Á±ªÁöÑÂä†ËΩΩÂô®„ÄÇÔºâ Âèå‰∫≤ÂßîÊ¥æÊ®°ÂûãÂΩì‰∏Ä‰∏™Á±ªÁöÑÂä†ËΩΩÂô®Êî∂Âà∞Á±ªÂä†ËΩΩÁöÑËØ∑Ê±ÇÔºåÂÖàÊääËøô‰∏™ËØ∑Ê±ÇÂßîÊ¥æÁªôÁà∂Á±ªÂä†ËΩΩÂô®ÂéªÂÆåÊàêÔºàÊâÄ‰ª•ÊâÄÊúâÁöÑÂä†ËΩΩËØ∑Ê±ÇÊúÄÁªàÈÉΩÂ∫îËØ•‰º†ÈÄÅËá≥È°∂Â±ÇÁöÑÂêØÂä®Á±ªÂä†ËΩΩÂô®‰∏≠ÔºâÔºåÂΩìÁà∂Á±ªÂä†ËΩΩÂô®ÂèçÈ¶àËá™Â∑±Êó†Ê≥ïÂÆåÊàêÂä†ËΩΩËØ∑Ê±ÇÊó∂ÔºåÂ≠êÂä†ËΩΩÂô®Êâç‰ºöËá™Â∑±Â∞ùËØïÂÆåÊàêÂä†ËΩΩ„ÄÇ ‰ºòÁÇπÔºöËøôÁßçÊ®°Âûã‰ΩøÂæójavaÁ±ªÈöèÂÖ∂Âä†ËΩΩÂô®‰∏ÄËµ∑ÂÖ∑Â§á‰∫Ü‰∏ÄÁßç‰ºòÂÖàÁ∫ßÁöÑÂÖ≥Á≥ª„ÄÇÂèØ‰øùËØÅÂú®ÂêÑ‰∏™Á±ªÁöÑÂä†ËΩΩÂô®ÁéØÂ¢É‰∏≠ÔºåÂä†ËΩΩÁöÑÊúÄÈ°∂Â±ÇÁöÑÁ±ªÊó∂Âêå‰∏Ä‰∏™Áà∂Á±ª„ÄÇ","categories":[{"name":"JVM","slug":"JVM","permalink":"http://example.com/categories/JVM/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]}],"categories":[{"name":"leetcodeÂà∑È¢òÁ¨îËÆ∞","slug":"leetcodeÂà∑È¢òÁ¨îËÆ∞","permalink":"http://example.com/categories/leetcode%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"},{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"},{"name":"JVMÁõ∏ÂÖ≥","slug":"JVMÁõ∏ÂÖ≥","permalink":"http://example.com/categories/JVM%E7%9B%B8%E5%85%B3/"},{"name":"JavaÂπ∂Âèë","slug":"JavaÂπ∂Âèë","permalink":"http://example.com/categories/Java%E5%B9%B6%E5%8F%91/"},{"name":"È°πÁõÆHospital","slug":"È°πÁõÆHospital","permalink":"http://example.com/categories/%E9%A1%B9%E7%9B%AEHospital/"},{"name":"HelloWorldÁ≥ªÂàó","slug":"HelloWorldÁ≥ªÂàó","permalink":"http://example.com/categories/HelloWorld%E7%B3%BB%E5%88%97/"},{"name":"ËØª‰π¶ÊÄªÁªì","slug":"ËØª‰π¶ÊÄªÁªì","permalink":"http://example.com/categories/%E8%AF%BB%E4%B9%A6%E6%80%BB%E7%BB%93/"},{"name":"Â∞èÊäÄÂ∑ß","slug":"Â∞èÊäÄÂ∑ß","permalink":"http://example.com/categories/%E5%B0%8F%E6%8A%80%E5%B7%A7/"},{"name":"Ë∏©ÂùëËÆ∞ÂΩï","slug":"Ë∏©ÂùëËÆ∞ÂΩï","permalink":"http://example.com/categories/%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"},{"name":"JVM","slug":"JVM","permalink":"http://example.com/categories/JVM/"}],"tags":[{"name":"ÂâçÁºÄÂíå„ÄÅ‰∫åÂàÜÊ≥ï","slug":"ÂâçÁºÄÂíå„ÄÅ‰∫åÂàÜÊ≥ï","permalink":"http://example.com/tags/%E5%89%8D%E7%BC%80%E5%92%8C%E3%80%81%E4%BA%8C%E5%88%86%E6%B3%95/"},{"name":"ÂõûÊ∫Ø","slug":"ÂõûÊ∫Ø","permalink":"http://example.com/tags/%E5%9B%9E%E6%BA%AF/"},{"name":"ÂçïË∞ÉÊ†à","slug":"ÂçïË∞ÉÊ†à","permalink":"http://example.com/tags/%E5%8D%95%E8%B0%83%E6%A0%88/"},{"name":"ÂâçÁºÄÂíå„ÄÅÊï∞Â≠¶","slug":"ÂâçÁºÄÂíå„ÄÅÊï∞Â≠¶","permalink":"http://example.com/tags/%E5%89%8D%E7%BC%80%E5%92%8C%E3%80%81%E6%95%B0%E5%AD%A6/"},{"name":"Â†Ü","slug":"Â†Ü","permalink":"http://example.com/tags/%E5%A0%86/"},{"name":"Ë¥™ÂøÉ","slug":"Ë¥™ÂøÉ","permalink":"http://example.com/tags/%E8%B4%AA%E5%BF%83/"},{"name":"Âõæ","slug":"Âõæ","permalink":"http://example.com/tags/%E5%9B%BE/"},{"name":"Êï∞ÁªÑ","slug":"Êï∞ÁªÑ","permalink":"http://example.com/tags/%E6%95%B0%E7%BB%84/"},{"name":"Âä®ÊÄÅËßÑÂàí","slug":"Âä®ÊÄÅËßÑÂàí","permalink":"http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"},{"name":"ÂèåÊåáÈíà","slug":"ÂèåÊåáÈíà","permalink":"http://example.com/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"},{"name":"Âπ∂Êü•ÈõÜ","slug":"Âπ∂Êü•ÈõÜ","permalink":"http://example.com/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"},{"name":"ÊªëÂä®Á™óÂè£","slug":"ÊªëÂä®Á™óÂè£","permalink":"http://example.com/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"},{"name":"ÈìæË°®","slug":"ÈìæË°®","permalink":"http://example.com/tags/%E9%93%BE%E8%A1%A8/"},{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"},{"name":"Ê®°Êãü","slug":"Ê®°Êãü","permalink":"http://example.com/tags/%E6%A8%A1%E6%8B%9F/"},{"name":"dfs„ÄÅbfs","slug":"dfs„ÄÅbfs","permalink":"http://example.com/tags/dfs%E3%80%81bfs/"},{"name":"dfs„ÄÅÂõæ","slug":"dfs„ÄÅÂõæ","permalink":"http://example.com/tags/dfs%E3%80%81%E5%9B%BE/"},{"name":"‰∏™‰∫∫ÂøÉÂæó","slug":"‰∏™‰∫∫ÂøÉÂæó","permalink":"http://example.com/tags/%E4%B8%AA%E4%BA%BA%E5%BF%83%E5%BE%97/"},{"name":"Âä®ÊÄÅËßÑÂàí„ÄÅ‰∫åÂàÜÊü•Êâæ","slug":"Âä®ÊÄÅËßÑÂàí„ÄÅ‰∫åÂàÜÊü•Êâæ","permalink":"http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%81%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"},{"name":"ÂΩíÂπ∂ÊéíÂ∫è","slug":"ÂΩíÂπ∂ÊéíÂ∫è","permalink":"http://example.com/tags/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/"},{"name":"BFS","slug":"BFS","permalink":"http://example.com/tags/BFS/"},{"name":"ÈìæË°®„ÄÅÂèåÊåáÈíà„ÄÅ‰∫åÂàÜ","slug":"ÈìæË°®„ÄÅÂèåÊåáÈíà„ÄÅ‰∫åÂàÜ","permalink":"http://example.com/tags/%E9%93%BE%E8%A1%A8%E3%80%81%E5%8F%8C%E6%8C%87%E9%92%88%E3%80%81%E4%BA%8C%E5%88%86/"},{"name":"ËøõÂà∂ÈóÆÈ¢ò","slug":"ËøõÂà∂ÈóÆÈ¢ò","permalink":"http://example.com/tags/%E8%BF%9B%E5%88%B6%E9%97%AE%E9%A2%98/"},{"name":"‰∫åÂèâÊ†ë","slug":"‰∫åÂèâÊ†ë","permalink":"http://example.com/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"},{"name":"Â†ÜÊéíÂ∫è„ÄÅÂø´Êéí„ÄÅ‰∫åÂàÜ","slug":"Â†ÜÊéíÂ∫è„ÄÅÂø´Êéí„ÄÅ‰∫åÂàÜ","permalink":"http://example.com/tags/%E5%A0%86%E6%8E%92%E5%BA%8F%E3%80%81%E5%BF%AB%E6%8E%92%E3%80%81%E4%BA%8C%E5%88%86/"},{"name":"ÊéíÂ∫è","slug":"ÊéíÂ∫è","permalink":"http://example.com/tags/%E6%8E%92%E5%BA%8F/"},{"name":"ÊêúÁ¥¢","slug":"ÊêúÁ¥¢","permalink":"http://example.com/tags/%E6%90%9C%E7%B4%A2/"}]}