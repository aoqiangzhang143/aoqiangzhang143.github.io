{"meta":{"title":"Mithrandir","subtitle":"Â∞ÜÊ≠§ÂçöÂÆ¢ÂΩì‰Ωú‰∏ÄË∑ØÊàêÈïøËµ∞ËøáÁöÑË∑Ø„ÄÇ","description":"‰∏îÂ∞ÜÊñ∞ÁÅ´ËØïÊñ∞Ëå∂ÔºåËØóÈÖíË∂ÅÂπ¥Âçé","author":"aoqiangzhang143","url":"http://example.com","root":"/"},"pages":[{"title":"archives","date":"2021-05-27T01:33:43.000Z","updated":"2021-05-27T01:33:43.928Z","comments":true,"path":"archives/index.html","permalink":"http://example.com/archives/index.html","excerpt":"","text":""},{"title":"ÂàÜÁ±ª","date":"2021-05-26T13:31:13.000Z","updated":"2021-05-27T01:36:57.220Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"Êó•Á®ãË°®","date":"2021-05-27T01:34:01.000Z","updated":"2021-05-27T01:37:49.200Z","comments":true,"path":"schedule/index.html","permalink":"http://example.com/schedule/index.html","excerpt":"","text":""},{"title":"ÂÖ¨Áõä404","date":"2021-05-27T01:34:24.000Z","updated":"2021-05-27T01:37:28.781Z","comments":true,"path":"commonweal/index.html","permalink":"http://example.com/commonweal/index.html","excerpt":"","text":""},{"title":"Ê†áÁ≠æ","date":"2021-05-26T13:30:53.000Z","updated":"2021-05-27T01:36:04.485Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"Á´ôÁÇπÂú∞Âõæ","date":"2021-05-27T01:34:10.000Z","updated":"2021-05-27T01:38:10.193Z","comments":true,"path":"sitemap/index.html","permalink":"http://example.com/sitemap/index.html","excerpt":"","text":""},{"title":"","date":"2021-05-27T08:19:00.191Z","updated":"2021-05-27T08:19:00.191Z","comments":true,"path":"lib/canvas-ribbon/README.html","permalink":"http://example.com/lib/canvas-ribbon/README.html","excerpt":"","text":"canvas-ribbon.js for NexT Installation If you want to use the CDN instead of clone this repo, please jump to the Step 3. Step 1 &rarr; Go to NexT dir Change dir to NexT directory. There must be layout, source, languages and other directories: 123$ cd themes/next$ ls_config.yml crowdin.yml docs gulpfile.js languages layout LICENSE.md package.json README.md scripts source Step 2 &rarr; Get module Install module to source/lib directory: 1$ git clone https://github.com/theme-next/theme-next-canvas-ribbon source/lib/canvas-ribbon Step 3 &rarr; Set it up Enable module in NexT _config.yml file: 12canvas_ribbon: enable: true And, if you wants to use the CDN, then need to set: 123vendors: ... canvas_ribbon: //cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-ribbon@1/canvas-ribbon.js Update 12$ cd themes/next/source/lib/canvas-ribbon$ git pull"},{"title":"","date":"2021-05-27T08:19:00.192Z","updated":"2021-05-27T08:19:00.192Z","comments":true,"path":"lib/canvas-ribbon/canvas-ribbon.js","permalink":"http://example.com/lib/canvas-ribbon/canvas-ribbon.js","excerpt":"","text":"/** * Copyright (c) 2016 hustcc * License: MIT * Version: v1.0.1 * GitHub: https://github.com/hustcc/ribbon.js **/ /*jshint -W030 */ ! function() { function attr(node, attr, default_value) { return Number(node.getAttribute(attr)) || default_value; } // get user config var scripts = document.getElementsByTagName('script'), script = scripts[scripts.length - 1]; // ÂΩìÂâçÂä†ËΩΩÁöÑscript config = { z: attr(script, \"zIndex\", -1), // z-index a: attr(script, \"alpha\", 0.6), // alpha s: attr(script, \"size\", 90), // size }; var canvas = document.createElement('canvas'), g2d = canvas.getContext('2d'), pr = window.devicePixelRatio || 1, width = window.innerWidth, height = window.innerHeight, f = config.s, q, t, m = Math, r = 0, pi = m.PI*2, cos = m.cos, random = m.random; canvas.width = width * pr; canvas.height = height * pr; g2d.scale(pr, pr); g2d.globalAlpha = config.a; canvas.style.cssText = 'opacity: ' + config.a + ';position:fixed;top:0;left:0;z-index: ' + config.z + ';width:100%;height:100%;pointer-events:none;'; // create canvas document.getElementsByTagName('body')[0].appendChild(canvas); function redraw() { g2d.clearRect(0, 0, width, height); q = [{x: 0, y: height * 0.7 + f}, {x: 0, y: height * 0.7 - f}]; while(q[1].x < width + f) draw(q[0], q[1]); } function draw(i, j) { g2d.beginPath(); g2d.moveTo(i.x, i.y); g2d.lineTo(j.x, j.y); var k = j.x + (random()*2-0.25)*f, n = line(j.y); g2d.lineTo(k, n); g2d.closePath(); r -= pi / -50; g2d.fillStyle = '#'+(cos(r)*127+128"},{"title":"","date":"2021-05-27T04:33:51.869Z","updated":"2021-05-27T04:33:51.869Z","comments":true,"path":"lib/bookmark/README.html","permalink":"http://example.com/lib/bookmark/README.html","excerpt":"","text":"Bookmark for NexT Introduce Bookmark is a plugin that allow the users save their reading position. The users could just click the bookmark icon (like üîñ) in left-top of the page to save the position. And when they visit your blog in the next time, they can continue the last reading position by clicking the bookmark icon from the home page. Installation If you want to use the CDN instead of clone this repo, please jump to the Step 3. Step 1 &rarr; Go to NexT dir Change dir to NexT directory. There must be layout, source, languages and other directories: 123$ cd themes/next$ lsbower.json _config.yml docs gulpfile.coffee languages layout LICENSE.md package.json README.md scripts source test Step 2 &rarr; Get module Install module to source/lib directory: 1$ git clone https://github.com/theme-next/theme-next-bookmark.git source/lib/bookmark Step 3 &rarr; Set it up Enable module in NexT _config.yml file: 1bookmark: true And, if you wants to use the CDN, then need to set: 123vendors: ... bookmark: https://cdn.jsdelivr.net/gh/theme-next/theme-next-bookmark@latest/bookmark.min.js Update 12$ cd themes/next/source/lib/bookmark$ git pull"},{"title":"","date":"2021-05-27T04:33:51.870Z","updated":"2021-05-27T04:33:51.870Z","comments":true,"path":"lib/bookmark/index.js","permalink":"http://example.com/lib/bookmark/index.js","excerpt":"","text":"(function (global) { 'use strict'; var storage = global.localStorage; if (storage == null) { // if the localStorage is not exists storage = { // eslint-disable-next-line getItem: function () { return null }, setItem: function () { }, removeItem: function () { }, clear: function () { }, }; } // get the saved bookmark object var getBookmark = function () { var mark = storage.getItem('bookmark'); if (mark == null) { return null; } try { return JSON.parse(mark); } catch (e) { // invalid object saved in the storage // console.warn('Invalid bookmark object.'); return null; } }; var link; // register everything var init = function () { // bookmark-link style var style = global.document.createElement('style'); style.type = 'text/css'; var text = '.book-mark-link{' + 'border-bottom:none;' + 'display:block;' + 'position:fixed;' + 'color:#222;' + 'font-size:26px !important;' + 'top:-10px;left:20px;' + 'transition:.3s;' + '}' + '.book-mark-link:hover,.book-mark-link-fixed{top:-2px}' // do not show when the width is not enough + '@media(max-width:1090px){.book-mark-link{display:none}}'; text = global.document.createTextNode(text); style.appendChild(text); global.document.head.appendChild(style); // create a link element // eslint-disable-next-line max-len link = $(''); $(global.document.body).append(link); var currentTop = 0; // scroll event $(global).on('scroll.bookmark', function () { var top = global.document.documentElement.scrollTop; if (top > 0) { if (currentTop === 0) { link.removeClass('book-mark-link-fixed'); currentTop = top; } } else { if (currentTop > 0) { !link.hasClass('book-mark-link-fixed') && link.addClass('book-mark-link-fixed'); currentTop = 0; } } }); }; var loadBookmark = function () { var mark = getBookmark(); if (mark == null) { return; } // found the bookmark $(function () { init(); link.attr('href', mark.lastUri + '#book:mark'); }); }; var doScroll = function (top) { if (!isNaN(top)) { $(function () { // eslint-disable-next-line max-len $(global.document.documentElement).animate({ 'scrollTop': top }, 'fast'); }); } }; var doSaveScroll = function (path, mark) { if (mark == null) { mark = {}; } var top = global.document.documentElement.scrollTop; mark.lastUri = path; mark[path] = top; storage.setItem('bookmark', JSON.stringify(mark)); link.animate({ top: -26 }, 'fast', function () { setTimeout(function () { link.css('top', ''); }, 400); }); return mark; }; var scrollToMark = function (trigger, hash) { var path = global.location.pathname; var mark = getBookmark(); $(function () { init(); // save the position by clicking the icon link.click(function () { mark = doSaveScroll(path, mark); return false; }); // register beforeunload event when the trigger is auto if (trigger === 'auto') { // register beforeunload event global.addEventListener('beforeunload', function () { doSaveScroll(path, mark); }); } // auto scroll to the position if (mark == null) { return; } // and if the page opens with a specific hash, just jump out var skips = [hash, '#comments']; // eslint-disable-next-line if (skips.filter(function (h) { return h === global.location.hash }).length > 0) { return; } doScroll(mark[path]); }); }; global.bookmark = { loadBookmark: loadBookmark, scrollToMark: scrollToMark, }; })(window);"},{"title":"","date":"2021-05-27T04:33:51.870Z","updated":"2021-05-27T04:33:51.870Z","comments":true,"path":"lib/bookmark/bookmark.min.js","permalink":"http://example.com/lib/bookmark/bookmark.min.js","excerpt":"","text":"!function(o){\"use strict\";var n=o.localStorage;null==n&&(n={getItem:function(){return null},setItem:function(){},removeItem:function(){},clear:function(){}});var t,e=function(){var o=n.getItem(\"bookmark\");if(null==o)return null;try{return JSON.parse(o)}catch(o){return null}},a=function(){var n=o.document.createElement(\"style\");n.type=\"text/css\";var e=\".book-mark-link{border-bottom:none;display:block;position:fixed;color:#222;font-size:26px !important;top:-10px;left:20px;transition:.3s;}.book-mark-link:hover,.book-mark-link-fixed{top:-2px}@media(max-width:1090px){.book-mark-link{display:none}}\";e=o.document.createTextNode(e),n.appendChild(e),o.document.head.appendChild(n),t=$(''),$(o.document.body).append(t);var a=0;$(o).on(\"scroll.bookmark\",function(){var n=o.document.documentElement.scrollTop;n>0?0===a&&(t.removeClass(\"book-mark-link-fixed\"),a=n):a>0&&(!t.hasClass(\"book-mark-link-fixed\")&&t.addClass(\"book-mark-link-fixed\"),a=0)})},r=function(e,a){null==a&&(a={});var r=o.document.documentElement.scrollTop;return a.lastUri=e,a[e]=r,n.setItem(\"bookmark\",JSON.stringify(a)),t.animate({top:-26},\"fast\",function(){setTimeout(function(){t.css(\"top\",\"\")},400)}),a};o.bookmark={loadBookmark:function(){var o=e();null!=o&&$(function(){a(),t.attr(\"href\",o.lastUri+\"#book:mark\")})},scrollToMark:function(n,l){var i=o.location.pathname,c=e();$(function(){var e;a(),t.click(function(){return c=r(i,c),!1}),\"auto\"===n&&o.addEventListener(\"beforeunload\",function(){r(i,c)}),null!=c&&([l,\"#comments\"].filter(function(n){return n===o.location.hash}).length>0||(e=c[i],isNaN(e)||$(function(){$(o.document.documentElement).animate({scrollTop:e},\"fast\")})))})}}}(window);"},{"title":"","date":"2021-05-27T04:33:51.871Z","updated":"2021-05-27T04:33:51.871Z","comments":true,"path":"lib/bookmark/renovate.json","permalink":"http://example.com/lib/bookmark/renovate.json","excerpt":"","text":"{\"extends\":[\"config:base\"]}"},{"title":"","date":"2021-05-27T04:33:51.871Z","updated":"2021-05-27T04:33:51.871Z","comments":true,"path":"lib/bookmark/package.json","permalink":"http://example.com/lib/bookmark/package.json","excerpt":"","text":"{\"name\":\"theme-next-bookmark\",\"version\":\"1.0.2\",\"description\":\"A plugin of local-bookmarks for NexT theme.\",\"main\":\"index.js\",\"scripts\":{\"test\":\"eslint index.js\",\"dist\":\"eslint index.js && uglifyjs --compress --mangle -o bookmark.min.js -- index.js\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/theme-next/theme-next-bookmark.git\"},\"keywords\":[\"hexo\",\"theme-next\",\"plugin\",\"bookmark\"],\"author\":\"Tsanie Lily\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/theme-next/theme-next-bookmark/issues\"},\"homepage\":\"https://github.com/theme-next/theme-next-bookmark#readme\",\"devDependencies\":{\"eslint\":\"^4.17.0\",\"eslint-config-google\":\"^0.9.1\",\"uglify-js\":\"^3.3.10\"}}"}],"posts":[{"title":"JavaÂêÑÁßçÂØπÊØî","slug":"JavaÂêÑÁßçÂØπÊØî","date":"2021-05-26T16:00:00.000Z","updated":"2021-05-27T09:09:27.122Z","comments":true,"path":"2021/05/27/JavaÂêÑÁßçÂØπÊØî/","link":"","permalink":"http://example.com/2021/05/27/Java%E5%90%84%E7%A7%8D%E5%AF%B9%E6%AF%94/","excerpt":"","text":"ÂõõÁßçÊùÉÈôêÁöÑ‰ΩúÁî®ËåÉÂõ¥ÂØπÊØîÔºö public protected default private Âêå‰∏Ä‰∏™Á±ª ÂèØ ÂèØ ÂèØ ÂèØ Âêå‰∏Ä‰∏™ÂåÖ ÂèØ ÂèØ ÂèØ ‰∏çÂèØ Â≠êÁ±ªÁà∂Á±ª ÂèØ ÂèØ ‰∏çÂèØ ‰∏çÂèØ ‰∏çÂêåÂåÖ‰πãÈó¥ ÂèØ ‰∏çÂèØ ‰∏çÂèØ ‰∏çÂèØ ==ÂíåequalsÂØπÊØî ==ÊòØÂà§Êñ≠‰∏§‰∏™ÂèòÈáèÊòØÂê¶ÊåáÂêëÂêå‰∏ÄÂùóÂÜÖÂ≠òÁ©∫Èó¥ÔºõequalsÊòØÂà§Êñ≠‰∏§‰∏™ÂèòÈáèÊàñÂÆû‰æãÊâÄÊåáÂêëÁöÑÂÜÖÂ≠òÁ©∫Èó¥ÁöÑÂÄºÊòØÂê¶Áõ∏Âêå ==ÊòØÂØπÂÜÖÂ≠òÂú∞ÂùÄËøõË°åÊØîËæÉÔºåequalsÂàôÊòØÂØπÂÜÖÂÆπËøõË°åÊØîËæÉÔºõ ==ÊØîËæÉÂºïÁî®ÊòØÂê¶Áõ∏ÂêåÔºåequalsÊØîËæÉÂÄºÊòØÂê¶Áõ∏Âêå comparableÂíåcomparatorÂØπÊØîComparable‚Äã ‰∏Ä‰∏™Á±ªÁöÑÂÆûÁé∞Êé•Âè£ÔºåÂ±û‰∫éÂÜÖÂµåÊØîËæÉ„ÄÇÂàõÂª∫‰∏Ä‰∏™Á±ªÊó∂ÂèØÂÆûÁé∞ËØ•Êé•Âè£ÔºåÈáçÂÜôcompareTo()ÊñπÊ≥ïÔºåÁî®‰∫éËá™ÂÆöÊØîËæÉÊñπÊ≥ïÔºå‰πãÂêéÂèØÈááÁî®collections‰∏≠ÁöÑsortÊñπÊ≥ïËøõË°åÊéíÂ∫è„ÄÇ 123456789101112131415161718192021222324252627282930313233343536373839404142/** * @author Mithrandir * @date 2021-04-2021/4/12-14:50 * Á±ªÂÆûÁé∞comparableÊé•Âè£ÔºåÂèØ‰ª•ÁêÜËß£‰∏∫Â∞ÜÊØîËæÉÊñπÂºèÂµåÂÖ•Ëá™Ë∫´Ôºå‰æøÂèØ‰ª•Áõ¥Êé•Ë∞ÉÁî®CollectionsÁöÑsortÊñπÊ≥ï * ÔºàÂõ†‰∏∫ÂÆûÁé∞Êé•Âè£Êó∂ÈáçÂÜôÁöÑcompareToÊñπÊ≥ïÂÆö‰πâ‰∫ÜÊØîËæÉÊñπÊ≥ïÔºâ */public class ComparableLearn &#123; @Test public void test()&#123; List&lt;Person&gt; list = new ArrayList&lt;&gt;(); list.add(new Person(5)); list.add(new Person(1)); list.add(new Person(9)); list.add(new Person(7)); Collections.sort(list); for(Person person:list)&#123; System.out.println(person); &#125; &#125;&#125;class Person implements Comparable&lt;Person&gt; &#123; private int age; @Override public String toString() &#123; return &quot;Person&#123;&quot; + &quot;age=&quot; + age + &#x27;&#125;&#x27;; &#125; public Person() &#123; &#125; public Person(int age) &#123; this.age = age; &#125; @Override public int compareTo(Person o) &#123; return this.age-o.age; &#125;&#125; Comparator1234567891011121314151617181920212223242526272829303132333435363738394041/** * @author Mithrandir * @date 2021-04-2021/4/12-14:59 * comparator‰Ωú‰∏∫‰∏Ä‰∏™‰∏¥Êó∂ÊØîËæÉÂô®ÔºåÂú®Ë∞ÉÁî®collectionsÁöÑsortÊñπÊ≥ïÊó∂ÂÜô‰∏Ä‰∏™ÊØîËæÉÊñπÊ≥ï */public class ComparatorLearn &#123; @Test public void test()&#123; List&lt;Student&gt; list = new ArrayList&lt;&gt;(); list.add(new Student(2)); list.add(new Student(6)); list.add(new Student(1)); list.add(new Student(9)); Collections.sort(list, new Comparator&lt;Student&gt;() &#123; @Override public int compare(Student o1, Student o2) &#123; return o1.age-o2.age; &#125; &#125;); for(Student student:list)&#123; System.out.println(student); &#125; &#125;&#125;class Student &#123; int age; @Override public String toString() &#123; return &quot;Student&#123;&quot; + &quot;age=&quot; + age + &#x27;&#125;&#x27;; &#125; public Student() &#123; &#125; public Student(int age) &#123; this.age = age; &#125;&#125; StringÂíåStringBuilderÂíåStringBufferString: Â∫ïÂ±ÇÁî®ÁöÑÊòØfinal char[] StringBuilder: Á∫øÁ®ãÂÆâÂÖ® StringBuilder: Á∫øÁ®ã‰∏çÂÆâÂÖ®ÔºåÊïàÁéáÈ´ò ÈáçËΩΩÂíåÈáçÂÜôÈáçËΩΩÂú®Âêå‰∏Ä‰∏™classÂÜÖÂØπÂêå‰∏Ä‰∏™ÂáΩÊï∞ËøõË°åÈáçËΩΩÔºåÂøÖÈ°ª‰øùËØÅÂΩ¢ÂèÇ‰∏™Êï∞ÊàñËÄÖÂΩ¢ÂèÇÁ±ªÂûã‰∏çÂêå ÈáçÂÜôÁî®‰∫éÂ≠êÁ±ªÁªßÊâøÁà∂Á±ªÔºåÂØπÁà∂Á±ª‰∏≠ÊñπÊ≥ïÁöÑÈáçÂÜô Âü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÂíåÂºïÁî®Êï∞ÊçÆÁ±ªÂûãÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãboolean„ÄÅbyte„ÄÅint„ÄÅchar„ÄÅlong„ÄÅshort„ÄÅdouble„ÄÅfloat ÂºïÁî®Êï∞ÊçÆÁ±ªÂûãÊï∞ÁªÑ„ÄÅÁ±ª„ÄÅÊé•Âè£‚Ä¶ ‰∏∫‰∫ÜÁºñÁ®ãÁöÑÊñπ‰æøËøòÊòØÂºïÂÖ•‰∫ÜÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÔºå‰ΩÜÊòØ‰∏∫‰∫ÜËÉΩÂ§üÂ∞ÜËøô‰∫õÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÂΩìÊàêÂØπË±°Êìç‰ΩúÔºåJava‰∏∫ÊØè‰∏Ä‰∏™Âü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÈÉΩÂºïÂÖ•‰∫ÜÂØπÂ∫îÁöÑÂåÖË£ÖÁ±ªÂûãÔºàwrapper classÔºâÔºåintÁöÑÂåÖË£ÖÁ±ªÂ∞±ÊòØIntegerÔºå‰ªéJava 5ÂºÄÂßãÂºïÂÖ•‰∫ÜËá™Âä®Ë£ÖÁÆ±/ÊãÜÁÆ±Êú∫Âà∂Ôºå‰ΩøÂæó‰∫åËÄÖÂèØ‰ª•Áõ∏‰∫íËΩ¨Êç¢„ÄÇ Âü∫Êú¨Á±ªÂûã ÂØπÂ∫îÁöÑÂåÖË£ÖÁ±ª byte Byte short Short int Integer long Long float Float double Double char Character boolean Boolean Âü∫Êú¨‰ΩøÁî®ÂØπÊØî IntegerÊòØintÁöÑÂåÖË£ÖÁ±ªÔºõintÊòØÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÔºõ IntegerÂèòÈáèÂøÖÈ°ªÂÆû‰æãÂåñÂêéÊâçËÉΩ‰ΩøÁî®ÔºõintÂèòÈáè‰∏çÈúÄË¶ÅÔºõ IntegerÂÆûÈôÖÊòØÂØπË±°ÁöÑÂºïÁî®ÔºåÊåáÂêëÊ≠§newÁöÑIntegerÂØπË±°ÔºõintÊòØÁõ¥Êé•Â≠òÂÇ®Êï∞ÊçÆÂÄº Ôºõ IntegerÁöÑÈªòËÆ§ÂÄºÊòØnullÔºõintÁöÑÈªòËÆ§ÂÄºÊòØ0 Ê∑±Â∫¶‰ΩøÁî®ÂØπÊØî Áî±‰∫éIntegerÂèòÈáèÂÆûÈôÖ‰∏äÊòØÂØπ‰∏Ä‰∏™IntegerÂØπË±°ÁöÑÂºïÁî®ÔºåÊâÄ‰ª•‰∏§‰∏™ÈÄöËøánewÁîüÊàêÁöÑIntegerÂèòÈáèÊ∞∏ËøúÊòØ‰∏çÁõ∏Á≠âÁöÑÔºàÂõ†‰∏∫newÁîüÊàêÁöÑÊòØ‰∏§‰∏™ÂØπË±°ÔºåÂÖ∂ÂÜÖÂ≠òÂú∞ÂùÄ‰∏çÂêåÔºâ„ÄÇ IntegerÂèòÈáèÂíåintÂèòÈáèÊØîËæÉÊó∂ÔºåÂè™Ë¶Å‰∏§‰∏™ÂèòÈáèÁöÑÂÄºÊòØÂêëÁ≠âÁöÑÔºåÂàôÁªìÊûú‰∏∫trueÔºàÂõ†‰∏∫ÂåÖË£ÖÁ±ªIntegerÂíåÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãintÊØîËæÉÊó∂Ôºåjava‰ºöËá™Âä®ÊãÜÂåÖË£Ö‰∏∫intÔºåÁÑ∂ÂêéËøõË°åÊØîËæÉÔºåÂÆûÈôÖ‰∏äÂ∞±Âèò‰∏∫‰∏§‰∏™intÂèòÈáèÁöÑÊØîËæÉÔºâ„ÄÇ ÈùûnewÁîüÊàêÁöÑIntegerÂèòÈáèÂíånew Integer()ÁîüÊàêÁöÑÂèòÈáèÊØîËæÉÊó∂ÔºåÁªìÊûú‰∏∫false„ÄÇÂõ†‰∏∫ÈùûnewÁîüÊàêÁöÑIntegerÂèòÈáèÊåáÂêëÁöÑÊòØÈùôÊÄÅÂ∏∏ÈáèÊ±†‰∏≠cacheÊï∞ÁªÑ‰∏≠Â≠òÂÇ®ÁöÑÊåáÂêë‰∫ÜÂ†Ü‰∏≠ÁöÑIntegerÂØπË±°ÔºåËÄånew Integer()ÁîüÊàêÁöÑÂèòÈáèÊåáÂêëÂ†Ü‰∏≠Êñ∞Âª∫ÁöÑÂØπË±°Ôºå‰∏§ËÄÖÂú®ÂÜÖÂ≠ò‰∏≠ÁöÑÂØπË±°ÂºïÁî®ÔºàÂú∞ÂùÄÔºâ‰∏çÂêå„ÄÇ ÂØπ‰∫é‰∏§‰∏™ÈùûnewÁîüÊàêÁöÑIntegerÂØπË±°ÔºåËøõË°åÊØîËæÉÊó∂ÔºåÂ¶ÇÊûú‰∏§‰∏™ÂèòÈáèÁöÑÂÄºÂú®Âå∫Èó¥-128Âà∞127‰πãÈó¥ÔºåÂàôÊØîËæÉÁªìÊûú‰∏∫trueÔºåÂ¶ÇÊûú‰∏§‰∏™ÂèòÈáèÁöÑÂÄº‰∏çÂú®Ê≠§Âå∫Èó¥ÔºåÂàôÊØîËæÉÁªìÊûú‰∏∫false ÂØπ‰∫éÁ¨¨4Êù°ÁöÑÂéüÂõ†Ôºö javaÂú®ÁºñËØëInteger i = 100 ;Êó∂Ôºå‰ºöÁøªËØëÊàê‰∏∫Integer i = Integer.valueOf(100)„ÄÇËÄåjava API‰∏≠ÂØπIntegerÁ±ªÂûãÁöÑvalueOfÁöÑÂÆö‰πâÂ¶Ç‰∏ãÔºåÂØπ‰∫é-128Âà∞127‰πãÈó¥ÁöÑÊï∞Ôºå‰ºöËøõË°åÁºìÂ≠òÔºåInteger i = 127Êó∂Ôºå‰ºöÂ∞Ü127Ëøô‰∏™IntegerÂØπË±°ËøõË°åÁºìÂ≠òÔºå‰∏ãÊ¨°ÂÜçÂÜôInteger j = 127Êó∂ÔºåÂ∞±‰ºöÁõ¥Êé•‰ªéÁºìÂ≠ò‰∏≠ÂèñÔºåÂ∞±‰∏ç‰ºönew‰∫Ü„ÄÇ Âπ∂ÂèëÂíåÂπ∂Ë°åÂπ∂ÂèëÔºàconcurrentÔºâ‰∫§ÊõøÂÅö‰∏çÂêå‰∫ãÊÉÖÁöÑËÉΩÂäõÔºõ‰∏çÂêå‰ª£Á†ÅÂùó‰∫§ÊõøÊâßË°åÁöÑËÉΩÂäõ Á®ãÂ∫èÈúÄË¶ÅË¢´ËÆæËÆ°ÊàêËÉΩÂ§ÑÁêÜÂ§ö‰∏™ÂêåÊó∂ÔºàÂá†‰πéÊòØÂêåÊó∂ÔºâÂèëÁîüÁöÑ‰∫ãÊÉÖ Âπ∂Ë°åÔºàparallelismÔºâÂêåÊó∂ÂÅö‰∏çÂêå‰∫ãÊÉÖÁöÑËÉΩÂäõÔºõ‰∏çÂêå‰ª£Á†ÅÂùóÂêåÊó∂ÊâßË°å ÈÄöËøáÂ∞ÜÈóÆÈ¢ò‰∏≠ÁöÑÂ§ö‰∏™ÈÉ®ÂàÜÂπ∂Ë°åÊâßË°åÔºåÂä†ÈÄüËß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"Hello World","slug":"hello-world","date":"2021-05-26T11:13:32.332Z","updated":"2021-05-26T11:13:32.332Z","comments":true,"path":"2021/05/26/hello-world/","link":"","permalink":"http://example.com/2021/05/26/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"ÊéíÂ∫èÁÆóÊ≥ïÊÄªÁªì","slug":"ÊéíÂ∫èÁÆóÊ≥ï","date":"2021-05-25T16:00:00.000Z","updated":"2021-05-27T02:24:53.339Z","comments":true,"path":"2021/05/26/ÊéíÂ∫èÁÆóÊ≥ï/","link":"","permalink":"http://example.com/2021/05/26/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/","excerpt":"","text":"ÂÜíÊ≥°ÊéíÂ∫èÁÆÄÊûêÔºöÊØîËæÉÁõ∏ÈÇªÁöÑ‰∏§‰∏™ÂÖÉÁ¥†ÔºåÂ¶ÇÊûúÂΩìÂâçÊï∞Â≠óÊØîÂêéÈù¢ÁöÑÊï∞Â≠óÂ§ßÔºåÂ∞±‰∫§Êç¢‰ΩçÁΩÆ ‰∏ãÂàó‰ª£Á†ÅÂÅö‰∫ÜÊîπËøõÔºå‰ªéÊï∞ÁªÑÁöÑÊú´Â∞æÂºÄÂßãÊØîËæÉÔºåÈô§‰∫ÜËÉΩÂ∞ÜÊúÄÂ∞èÂÖÉÁ¥†ÁßªÂä®Ëá≥Á¨¨‰∏Ä‰ΩçÂ§ñÔºåËøòÂ∞ÜÁ¨¨‰∫åÂ∞èÁöÑÂÖÉÁ¥†Â∞ΩÂèØËÉΩÁöÑÁßªÂä®Ëá≥Èù†ËøëÈÄÇÂêàÂÆÉÁöÑ‰ΩçÁΩÆ„ÄÇ 123456789101112public void bubbleSort(int[] arr)&#123; int i,j,len=arr.length-1; for(i=0;i&lt;len;i++)&#123; for(j=len-1;j&gt;=i;--j)&#123; if(arr[j]&gt;arr[j+1])&#123; int tmp=arr[j]; arr[j]=arr[j+1]; arr[j+1]=tmp; &#125; &#125; &#125;&#125; ÈÄâÊã©ÊéíÂ∫èÁÆÄÊûêÔºöÂú®Êú™ÊéíÂ∫èÁöÑÂ∫èÂàó‰∏≠ÔºåÊâæÂà∞ÊúÄÂ∞èÁöÑÂÖÉÁ¥†ÔºåÊîæÂà∞ÊéíÂàóÂÖÉÁ¥†ÁöÑËµ∑Âßã‰ΩçÁΩÆÔºõÁÑ∂ÂêéÂÜç‰ªéÊú™ÊéíÂ∫èÁöÑÂ∫èÂàó‰∏≠ÊâæÂà∞ÊúÄÂ∞èÁöÑÂÖÉÁ¥†ÔºåÊîæÂà∞Â∑≤ÊéíÂ∫èÂ∫èÂàóÁöÑÊú´Â∞æÔºå‰æùÊ¨°Á±ªÊé®ÔºåÁõ¥Ëá≥Êú´Â∞æ„ÄÇ 1234567891011121314public void selectSort(int[] arr)&#123; int minIndex; for(int i=0;i&lt;arr.length;i++)&#123; minIndex=i; for(int j=i;j&lt;arr.length;j++)&#123; if(arr[j]&lt;arr[minIndex])&#123; minIndex=j; &#125; &#125; int tmp=arr[minIndex]; arr[minIndex]=arr[i]; arr[i]=tmp; &#125;&#125; ÊèíÂÖ•ÊéíÂ∫èÁÆÄÊûêÔºöÂØπ‰∫éÊú™ÊéíÂ∫èÁöÑÂ∫èÂàóÔºåÂú®Â∑≤ÊéíÂ∫èÁöÑÂ∫èÂàó‰∏≠‰ªéÂêéÂæÄÂâçÊâ´ÊèèÔºåÊâæÂà∞ÂêàÈÄÇÁöÑ‰ΩçÁΩÆÂπ∂ÊèíÂÖ•„ÄÇ 123456789101112public void InsertSort(int[] arr)&#123; int len=arr.length; for(int i=1;i&lt;len;i++)&#123; int insertVal=arr[i];//Ë¶ÅÊèíÂÖ•ÁöÑÂÄº int insertIndex=i-1;//Ë¶ÅÊèíÂÖ•ÁöÑÂÄºÁöÑÂâç‰∏Ä‰∏™ÂùêÊ†á while(inserIndex&gt;=0&amp;&amp;insertVal&lt;arr[insertIndex])&#123; arr[insertIndex+1]=arr[insertIndex]; intsertIndex--; &#125;//Ë∑≥Âá∫Âæ™ÁéØÊó∂ËØ¥ÊòéË¶ÅÊèíÂÖ•ÁöÑ‰ΩçÁΩÆÂú®insertIndexÂêéÈù¢ arr[insertIndex+1]=insertVal; &#125;&#125; Â∏åÂ∞îÊéíÂ∫èÁÆÄÊûêÔºöÂ∏åÂ∞îÊéíÂ∫èÊòØÊèíÂÖ•ÊéíÂ∫èÁöÑ‰ºòÂåñÁâàÔºåÈÄöËøáËÆæÁΩÆ‰∏çÂêåÁöÑÊ≠•ÈïøÂπ∂ÈÄêÊ≠•ÂáèÂ∞ëÊ≠•ÈïøÔºå‰ª•Ê≠•Èïø‰∏∫ÂçïÊ¨°ÁßªÂä®Ë∑ùÁ¶ªÔºåÂèØÂ§ßÂπÖÁº©Áü≠ÊâÄÈúÄÊó∂Èó¥„ÄÇ 12345678910111213141516171819public void shellSort(int[] arr)&#123; int len=arr.length; for(int step=len/2;step&gt;0;step/=2)&#123; for(int i=step;i&lt;len;i++)&#123; //ËÆ∞ÂΩï‰∏ãË¶ÅÁßªÂä®ÁöÑÂÖÉÁ¥†‰∏ãÊ†á int tmpIndex=i; //ËÆ∞ÂΩï‰∏ãË¶ÅÁßªÂä®ÁöÑÂÖÉÁ¥†ÂÄº int tmpVal=arr[tmpIndex]; //Â¶ÇÊûúÈúÄË¶ÅÁßªÂä®ÔºåÈÇ£Â∞±ÁßªÂä®Ëá≥ÂêàÈÄÇÁöÑ‰ΩçÁΩÆ if(tmpVal&lt;arr[tmmIndex-step])&#123; while(temIndex-step&gt;=0&amp;&amp;tmpVal&lt;arr[tmpIndex-step])&#123; arr[tmpIndex]=arr[tmpIndex-step]; tmpIndex-=step; &#125; &#125;//tmpIndexÂ∑≤ÁªèÊòØÂêàÈÄÇÁöÑ‰ΩçÁΩÆ arr[tmpIndex]=tmpVal; &#125; &#125;&#125; ÂΩíÂπ∂ÊéíÂ∫èÁÆÄÊûêÔºöÂ∞ÜÂ∑≤ÊúâÂ∫èÁöÑÂ≠êÂ∫èÂàóÂêàÂπ∂ÔºõËµ∑ÂßãÈªòËÆ§Âçï‰∏™ÂÖÉÁ¥†Êó¢ÊòØ‰∏Ä‰∏™ÊúâÂ∫èÂ∫èÂàó„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637383940public class MergeSort &#123; public static void main(String[] args) &#123; int[] arr = new int[]&#123;8, 4, 5, 7, 1, 3, 6, 2&#125;; int[] tmp = new int[arr.length]; sort(arr,0,arr.length-1,tmp); System.out.println(Arrays.toString(arr)); &#125; private static void sort(int[] arr,int left,int right,int[] tmp) &#123; if(left&gt;=right)&#123; return; &#125; int mid=left+(right-left)/2; sort(arr, left,mid,tmp); sort(arr, mid+1, right,tmp); if(arr[mid]&lt;=arr[mid+1])&#123; return; &#125; merge(arr,left,right,mid,tmp); &#125; private static void merge(int[] arr, int left, int right, int mid,int[] tmp) &#123; int i=left; int j=mid+1; for (int k = left; k &lt;= right; k++) &#123; tmp[k]=arr[k]; &#125; for(int k=left ;k&lt;=right;k++)&#123; if(i==mid+1)&#123; arr[k]=tmp[j++]; &#125;else if(j==right+1)&#123; arr[k]=tmp[i++]; &#125;else if(tmp[i]&lt;=tmp[j])&#123; arr[k]=tmp[i++]; &#125;else&#123; arr[k]=tmp[j++]; &#125; &#125; &#125;&#125; Âø´ÈÄüÊéíÂ∫èÁÆÄÊûêÔºöÈÄöËøáÊåáÂÆö‰∏Ä‰∏™pivotÔºå‰ΩøÂæóÊï∞ÁªÑ‰ª•pivot‰∏∫Âü∫ÂáÜÔºåÂ§ß‰∫épivotÁöÑÈÉΩÁßªÂä®Ëá≥pivotÂè≥ËæπÔºåÂ∞è‰∫épivotÁöÑÈÉΩÁßªÂä®Ëá≥ÂÖ∂Â∑¶ËæπÔºåÁÑ∂ÂêéÂØπpivot‰∏§ËæπÁöÑÊï∞ÁªÑÂÜçÊ¨°ËøõË°åÈÄíÂΩíÊéíÂ∫èÂç≥ÂèØ„ÄÇ 123456789101112131415161718192021222324public vodi quickSort(int[] arr,int l,int r)&#123; if(l&lt;r)&#123; int left=l,right=r; int pivot=arr[l]; while(left&lt;right)&#123; while(left&lt;right&amp;&amp;arr[right]&gt;=pivot)&#123;//ÂÖàÊâæÂà∞‰∏Ä‰∏™ÈúÄË¶ÅÁßªÂä®ÁöÑright„ÄÇ //Ê≥®ÊÑèÔºåÊ≠§Â§ÑÂøÖÈ°ªÂÖàÂØªÊâærightÔºåÂõ†‰∏∫left‰ΩçÁΩÆÁöÑÂÖÉÁ¥†Â∑≤ÁªèÂèñÂá∫ÔºàÂ∞±ÊòØpivotÔºâÔºåÊâÄ‰ª•ÂèØ‰ª•ÂÖàÂØπleftÁöÑ‰ΩçÁΩÆËµãÂÄº --right; &#125; if(left&lt;right)&#123; arr[left++]=arr[right]Ôºõ &#125; while(left&lt;right&amp;&amp;arr[left]&lt;=pivot)&#123; ++left; &#125; if(left&lt;right)&#123; arr[right--]=arr[left]; &#125; &#125; arr[right]=pivot;//Ëøô‰∏™ËµãÂÄºÁªôleftÊàñËÄÖrightÈÉΩÂèØ‰ª• quickSort(arr,l,right-1); quickSort(arr,right+1,r); &#125;&#125; ‰ª£Á†Å2Ôºö 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758/** * @author Mithrandir * @date 2021-03-2021/3/27-21:36 */public class QuickSortAnother &#123; public static void main(String[] args) &#123; int[] arr=&#123;1,6,5,4,3,2,9,1&#125;; quicksort(arr,0,arr.length-1); System.out.println(Arrays.toString(arr)); &#125; /** * ÈöèÊú∫Â∞Ü‰∏Ä‰∏™Êï∞Â≠óÊîæËá≥ÂÖ∂ÂêàÈÄÇÁöÑ‰ΩçÁΩÆÔºåÂπ∂ÂØπËØ•‰ΩçÁΩÆÂ∑¶Âè≥‰∏§Âå∫Èó¥ËøõË°åÊéíÂ∫è * @param arr ÂæÖÊéíÂ∫èÁöÑÊï∞ÁªÑ * @param left Êï∞ÁªÑÁöÑÂ∑¶Á´Ø * @param right Êï∞ÁªÑÁöÑÂè≥Á´Ø */ private static void quicksort(int[] arr,int left,int right) &#123; if(left&gt;=right)&#123; return; &#125; int mid=partition(arr,left,right); quicksort(arr, left, mid-1); quicksort(arr, mid+1, right); &#125; /** * Ëøô‰∏™Ë¶ÅÂÆåÊàêÁöÑÂäüËÉΩÊòØÂØπÊï∞ÁªÑÂÜÖÁöÑ‰∏Ä‰∏™ÈöèÊú∫Êï∞Â≠óÂÆâÊéíËá≥ÂêàÈÄÇÁöÑ‰ΩçÁΩÆÔºåÂπ∂‰ª•ËØ•‰ΩçÁΩÆ‰∏∫Ê†πÊçÆÂ∞ÜÊï∞ÁªÑÂàÜ‰∏∫Â∑¶Âè≥Âå∫Èó¥ * @param arr * @param left * @param right * @return */ private static int partition(int[] arr, int left, int right) &#123; Random random = new Random(); //Êù•Âå∫Èó¥ÂÜÖ‰ΩçÁΩÆÁöÑ‰∏Ä‰∏™ÈöèÊú∫‰ΩçÁΩÆ int tmpIndex=random.nextInt(right-left+1)+left; //Â∞ÜËØ•‰ΩçÁΩÆÁöÑÊï∞Â≠óÊîæÂà∞Êï∞ÁªÑÁöÑÊúÄÂè≥‰æß swap(arr,tmpIndex,right); //ÂÆö‰πâ‰∏Ä‰∏™Á¥¢Âºï int index=left; for(int i=left;i&lt;right;i++)&#123; if(arr[i]&lt;arr[right])&#123;//Âá°ÊòØÂ∞è‰∫éÊàë‰ª¨ÁöÑÈöèÊú∫Êï∞ÁöÑÂÄºÔºå‰∏ÄÂæã‰ªéÂ∑¶ÂºÄÂßãÊéí swap(arr, i, index++); &#125; &#125; //Ê≠§Êó∂ÔºåindexÂ∑¶‰æßÁöÑÊâÄÊúâÂÄºÔºåÂùáÂ∞è‰∫éÈöèÊú∫Êï∞ÔºåÂ∞ÜÈöèÊú∫Êï∞ÊîæÂà∞indexÁöÑ‰ΩçÁΩÆ swap(arr,index, right); return index; &#125; private static void swap(int[] arr, int i, int j) &#123; int tmp=arr[i]; arr[i]=arr[j]; arr[j]=tmp; &#125;&#125; ËÆ°Êï∞ÊéíÂ∫èÁÆÄÊûêÔºöËÆ°Êï∞ÊéíÂ∫èÈÄÇÁî®‰∫éÂÖÉÁ¥†Êï∞ÂÄºËæÉ‰∏∫ÈõÜ‰∏≠Ôºå‰∏îÂÖÉÁ¥†Ë¶ÅÊòØÁ°ÆÂÆöËåÉÂõ¥ÂÜÖÁöÑÊï¥Êï∞ 123456789101112131415161718192021222324252627282930313233public void countingSort(int[] arr)&#123; if(arr.length==0)&#123; return; &#125; //ÊâæÂà∞arrÈáåÁöÑÊúÄÂ§ßÊúÄÂ∞èÂÄº int min=arr[0],max=arr[0]; for(int i=1;i&lt;arr.length;i++)&#123; if(arr[i]&gt;max)&#123; max=arr[i]; &#125; if(arr[i]&lt;min)&#123; min=arr[i]; &#125; &#125; //ÂÆö‰πâ‰∏Ä‰∏™ÂÖ≥ÈîÆÂÄº int bias=0-min; //ÂáÜÂ§á‰∏Ä‰∏™È¢ùÂ§ñÊï∞ÁªÑ int[] bucket=new int[max-min+1]; //ÈÅçÂéÜÊï¥‰∏™Êï∞ÁªÑÔºåËÆ∞ÂΩïÊØè‰∏™ÂÖÉÁ¥†Âá∫Áé∞ÁöÑÊ¨°Êï∞ for(int i=0;i&lt;arr.length;i++)&#123; bucket[arr[i]+bias]++; &#125; //Êé•‰∏ãÊù•ÂáÜÂ§áÈáçÊñ∞ÊéíÂàóarr,index‰∏∫arrÁöÑÁ¥¢ÂºïÔºåi‰∏∫bucketÁöÑÁ¥¢Âºï int index=0,i=0; while(index&lt;arr.length)&#123; if(bucket[i]!=0)&#123; arr[index++]=i-bias; bucket[i]--; &#125;else&#123; i++; &#125; &#125;&#125; Âü∫Êï∞ÊéíÂ∫èÁÆÄÊûêÔºöÂü∫Êï∞ÂíåËÆ°Êï∞ÈÉΩÊòØÁî®‰∫ÜÊ°∂Êù•ËøõË°åÊéíÂ∫èÔºå‰∏çÂêåÁöÑÊòØÔºåÂü∫Êï∞ÂØπÊâÄÊúâÂÖÉÁ¥†ÁöÑÂàÜÈÖçÂÅö‰∫Ü‰ºòÂåñÔºöÊåâÁÖßÊØè‰∏™ÂÖÉÁ¥†ÁöÑÂêå‰∏Ä‰ΩçÔºàÂç≥‰∏™‰ΩçÔºåÂçÅ‰ΩçÁ≠âÔºâËøõË°åÊëÜÊîæÔºå‰πüÂ∞±ÊòØËØ¥ÔºåÊâÄÁî®Âà∞ÁöÑÊ°∂‰∏ÄÂÖ±Êúâ10Â±ÇÔºà0~9ÔºâÔºåÂú®‰∏ÄËΩÆÂæ™ÁéØ‰∏≠ÔºåÊØè‰∏ÄÂ±ÇÊîæÁöÑÊï∞ÊçÆÂú®Êüê‰∏Ä‰ΩçÈÉΩÁõ∏Âêå„ÄÇÂü∫Êï∞ÊéíÂ∫èÁî®ÁöÑÁ©∫Èó¥ÂèñÂÜ≥‰∫éÂÖÉÁ¥†ÁöÑ‰∏™Êï∞ÔºåËÄåËÆ°Êï∞ÊéíÂ∫èÊâÄÁî®ÁöÑÈ¢ùÂ§ñÁ©∫Èó¥ÂèñÂÜ≥‰∫éÂÖÉÁ¥†ÁöÑËåÉÂõ¥ÔºàÂç≥ÊúÄÂ∞è-ÊúÄÂ§ßÔºâ„ÄÇ 123456789101112131415161718192021222324252627282930313233343536373839public static void review(int[] arr) &#123; //Á¨¨‰∏ÄÊ≠•ÔºåÂÖàÊâæÂà∞Êï∞ÁªÑ‰∏≠ÁöÑÊúÄÂ§ßÂÄº int size = arr.length; int max = arr[0]; for (int i = 1; i &lt; size; i++) &#123; if (arr[i] &gt; max) &#123; max = arr[i]; &#125; &#125; //Ê†πÊçÆÊúÄÂ§ßÂÄºÊâæÂà∞ÊúÄÂ§ßÈïøÂ∫¶ String str = max + &quot;&quot;; int maxLength = str.length(); //ÂàõÂª∫‰∏Ä‰∏™Ê°∂ÔºåÁî®‰∫éÁõõÊîæÂ§ÑÁêÜÂêéÁöÑÊï∞ÁªÑ int[][] bucket = new int[10][size]; //ËøòÂæóÂàõÂª∫‰∏Ä‰∏™ËÆ°Êï∞Âô®ÔºåÁî®‰∫éËÆ°ÁÆóÊØè‰∏™‰ΩçÁΩÆÊîæ‰∫ÜÂ§öÂ∞ë‰∏™Êï∞ÊçÆ int[] numsCounter = new int[10]; //Êé•‰∏ãÊù•Â∞±ËøõÂÖ•ÊØè‰∏ÄÂ±ÇÁöÑÊìç‰ΩúÔºöÊîæÂÖ•Ê°∂Ôºå‰ªéÊ°∂‰∏≠ÂèñÂá∫ //ÂÆö‰πâ‰∏§‰∏™ÂèòÈáèÔºåkÁî®‰∫éÁ°ÆÂÆöÊï∞ÊçÆÁöÑÂì™‰∏ÄÂ±ÇÔºåmÁî®‰∫éÂØπÊØè‰∏™Êï∞ÊçÆËøõË°åÂèñ‰ΩôÊìç‰Ωú for (int k = 0, m = 1; k &lt; maxLength; m *= 10, k++) &#123; //ÂÖàÂ∞ÜÊï∞ÊçÆÂèñÂá∫ÔºåÊ†πÊçÆ‰∏™ÔºàÂçÅ„ÄÅÁôæÔºâ‰ΩçÊï∞ÁöÑÂ§ßÂ∞èÊîæÂÖ•Ê°∂‰∏≠ for (int i = 0; i &lt; size; i++) &#123; //ÂèñÂá∫‰∏™‰Ωç int num = arr[i] / m % 10; //ÊîæÂÖ•‰∏™‰ΩçÂØπÂ∫îÁöÑÊ°∂‰∏≠ bucket[num][numsCounter[num]++] = arr[i]; &#125; //Ê≠§Êó∂Â∑≤ÂÆåÊàêÊâÄÊúâÊï∞ÊçÆÂÖ•Ê°∂,ÊåâÁÖßÈ°∫Â∫èÂ∞ÜÂÖ∂ÂèñÂá∫ //ÂÆö‰πâ‰∏Ä‰∏™Á¥¢ÂºïÔºåÁî®‰∫éÂú®arr‰∏≠ÈáçÊñ∞ÊéíÂ∫è int index = 0; for (int i = 0; i &lt; bucket.length; i++) &#123; if (numsCounter[i] != 0) &#123;//iÁöÑÂèñÂÄºËåÉÂõ¥ÊòØ0~9ÔºånumsCounter[i]!=0ËØ¥ÊòéËØ•‰ΩçÁΩÆÂ≠òÊîæÁöÑÊúâÊï∞ÊçÆÔºåÈúÄË¶ÅÂèñÂá∫ for (int j = 0; j &lt; numsCounter[i]; j++) &#123; arr[index++] = bucket[i][j]; &#125; &#125; numsCounter[i] = 0; &#125; &#125; &#125;","categories":[{"name":"HelloWorldÁ≥ªÂàó","slug":"HelloWorldÁ≥ªÂàó","permalink":"http://example.com/categories/HelloWorld%E7%B3%BB%E5%88%97/"}],"tags":[{"name":"ÊéíÂ∫è","slug":"ÊéíÂ∫è","permalink":"http://example.com/tags/%E6%8E%92%E5%BA%8F/"}]},{"title":"ÊêúÁ¥¢ÁÆóÊ≥ï","slug":"ÊêúÁ¥¢ÁÆóÊ≥ï","date":"2021-05-25T16:00:00.000Z","updated":"2021-05-27T02:25:22.120Z","comments":true,"path":"2021/05/26/ÊêúÁ¥¢ÁÆóÊ≥ï/","link":"","permalink":"http://example.com/2021/05/26/%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/","excerpt":"","text":"ÊúâÂ∫èË°®Êü•Êâæ‰∫åÂàÜÊü•Êâæ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415public int binarySearch(int[] arr,int target)&#123; int low=0,height=arr.length-1; int mid; while(low&lt;=height)&#123; mid=(low+height)/2; if(arr[mid]&lt;target)&#123; low=mid+1; &#125;else if(arr[mid]&gt;target)&#123; height=mid-1; &#125;else&#123; return mid; &#125; &#125; return -1;&#125; ÊèíÂÄºÊü•ÊâæÈÄÇÁî®‰∫éÊï∞ÂÄºÂàÜÂ∏ÉÂùáÂåÄÁöÑÊü•ÊâæË°®„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö123456789101112131415public int binarySearch(int[] arr,int target)&#123; int low=0,height=arr.length-1; int mid; while(low&lt;=height)&#123; mid=low+(hight-low)(arr[mid]-arr[low])/(arr[height]-arr[low]); if(arr[mid]&lt;target)&#123; low=mid+1; &#125;else if(arr[mid]&gt;target)&#123; height=mid-1; &#125;else&#123; return mid; &#125; &#125; return -1;&#125; ÊñêÊ≥¢ÈÇ£Â•ëÊü•ÊâæÂà©Áî®‰∫ÜÊñêÊ≥¢ÈÇ£Â•ëÊï∞Âàó 12345678910111213141516171819202122232425262728293031323334353637383940414243 public static int fibSearch(int[] arr,int target)&#123; int low=0,heigh=arr.length-1; int[] f=fib(); //k‰∏∫ÂêàÈÄÇÁöÑÊñêÊ≥¢ÈÇ£Â•ëÊï∞ int k=0; while(heigh&gt;f[k]-1)&#123; ++k; &#125; //ÂÆö‰πâÊñêÊ≥¢ÈÇ£Â•ëÊï∞ÈïøÂ∫¶ÁöÑÊï∞ÁªÑ int[] nums = Arrays.copyOf(arr, f[k]); for(int i=heigh;i&lt;f[k];i++)&#123; nums[i]=nums[heigh]; &#125; int mid; while (low&lt;=heigh)&#123; mid=low+f[k-1]-1; if(target&gt;arr[mid])&#123; k-=2; low=mid+1; &#125;else if(target&lt;arr[mid])&#123; --k; heigh=mid-1; &#125;else&#123; if(mid&lt;heigh)&#123; return mid; &#125;else&#123; return heigh; &#125; &#125; &#125; return -1; &#125;//ÂàõÂª∫‰∏Ä‰∏™ÊñêÊ≥¢ÈÇ£Â•ëÊï∞Âàópublic static int[] fib()&#123; int[] f=new int[20]; f[0]=1; f[1]=1; for(int i=2;i&lt;20;i++)&#123; f[i]=f[i-1]+f[i-2]; &#125; return f; &#125;","categories":[{"name":"HelloWorldÁ≥ªÂàó","slug":"HelloWorldÁ≥ªÂàó","permalink":"http://example.com/categories/HelloWorld%E7%B3%BB%E5%88%97/"}],"tags":[{"name":"ÊêúÁ¥¢","slug":"ÊêúÁ¥¢","permalink":"http://example.com/tags/%E6%90%9C%E7%B4%A2/"}]}],"categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"http://example.com/categories/Java%E5%9F%BA%E7%A1%80/"},{"name":"HelloWorldÁ≥ªÂàó","slug":"HelloWorldÁ≥ªÂàó","permalink":"http://example.com/categories/HelloWorld%E7%B3%BB%E5%88%97/"}],"tags":[{"name":"Âü∫Á°ÄÁü•ËØÜÁÇπ","slug":"Âü∫Á°ÄÁü•ËØÜÁÇπ","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"},{"name":"ÊéíÂ∫è","slug":"ÊéíÂ∫è","permalink":"http://example.com/tags/%E6%8E%92%E5%BA%8F/"},{"name":"ÊêúÁ¥¢","slug":"ÊêúÁ¥¢","permalink":"http://example.com/tags/%E6%90%9C%E7%B4%A2/"}]}